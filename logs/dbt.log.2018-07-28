2018-07-28 09:32:23,125: Tracking: tracking
2018-07-28 09:32:23,134: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083bd278>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083bdf28>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1083bd0b8>]}
2018-07-28 09:32:24,870: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:32:24,914: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:32:24,916: Parsing get_column_values.sql
2018-07-28 09:32:24,945: Parsing get_url_parameter.sql
2018-07-28 09:32:24,954: Parsing split_part.sql
2018-07-28 09:32:24,969: Parsing table_exists.sql
2018-07-28 09:32:24,992: Parsing core.sql
2018-07-28 09:32:25,037: Parsing adapters/bigquery.sql
2018-07-28 09:32:25,058: Parsing adapters/common.sql
2018-07-28 09:32:25,301: Parsing adapters/redshift.sql
2018-07-28 09:32:25,378: Parsing adapters/snowflake.sql
2018-07-28 09:32:25,388: Parsing etc/bigquery.sql
2018-07-28 09:32:25,394: Parsing etc/datetime.sql
2018-07-28 09:32:25,468: Parsing etc/get_custom_schema.sql
2018-07-28 09:32:25,486: Parsing materializations/helpers.sql
2018-07-28 09:32:25,545: Parsing materializations/archive/archive.sql
2018-07-28 09:32:25,732: Parsing materializations/incremental/incremental.sql
2018-07-28 09:32:25,833: Parsing materializations/seed/bigquery.sql
2018-07-28 09:32:25,857: Parsing materializations/seed/seed.sql
2018-07-28 09:32:25,992: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:32:26,040: Parsing materializations/table/table.sql
2018-07-28 09:32:26,105: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:32:26,141: Parsing materializations/view/view.sql
2018-07-28 09:32:26,215: Parsing schema_tests/accepted_values.sql
2018-07-28 09:32:26,225: Parsing schema_tests/not_null.sql
2018-07-28 09:32:26,232: Parsing schema_tests/relationships.sql
2018-07-28 09:32:26,256: Parsing schema_tests/unique.sql
2018-07-28 09:32:26,298: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:32:26,302: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:32:26,307: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:32:26,311: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:32:26,315: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:32:26,325: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:32:26,336: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:32:26,348: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:32:26,359: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:32:26,381: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:32:26,391: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:32:26,403: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:32:26,412: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:32:26,419: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:32:26,426: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:32:26,455: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:32:26,463: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:32:26,469: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:32:26,476: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:32:26,486: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:32:26,498: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:32:26,521: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108482c88>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084c2e48>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1084c2710>]}
2018-07-28 09:32:26,856: Encountered an error:
2018-07-28 09:32:26,857: Compilation Error in model ga_transactions (models/base/ga/ga_transactions.sql)
  Model 'model.shopify_cohort_analysis.ga_transactions' depends on model 'ga_conversions' which was not found or is disabled
2018-07-28 09:32:26,885: Traceback (most recent call last):
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 41, in main
    results, succeeded = handle_and_check(args)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 85, in handle_and_check
    task, res = run_from_args(parsed)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 139, in run_from_args
    results = run_from_task(task, proj, parsed)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 147, in run_from_task
    result = task.run()
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/task/run.py", line 26, in run
    results = runner.run(query, ModelRunner)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 217, in run
    return self.run_from_graph(Selector, Runner, query)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 177, in run_from_graph
    flat_graph, linker = self.compile(self.project)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 173, in compile
    (flat_graph, linker) = compiler.compile()
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/compilation.py", line 292, in compile
    root_project.get('name'))
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/parser.py", line 101, in process_refs
    target_model_package)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/utils.py", line 390, in invalid_ref_fail_unless_test
    target_model_package)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/exceptions.py", line 190, in ref_target_not_found
    raise_compiler_error(msg, model)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/exceptions.py", line 137, in raise_compiler_error
    raise CompilationException(msg, node)
dbt.exceptions.CompilationException: Compilation Error in model ga_transactions (models/base/ga/ga_transactions.sql)
  Model 'model.shopify_cohort_analysis.ga_transactions' depends on model 'ga_conversions' which was not found or is disabled

2018-07-28 09:36:08,997: Tracking: tracking
2018-07-28 09:36:08,999: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092fa2b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092faa58>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092fad30>]}
2018-07-28 09:36:10,664: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:36:10,739: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:36:10,748: Parsing get_column_values.sql
2018-07-28 09:36:10,783: Parsing get_url_parameter.sql
2018-07-28 09:36:10,792: Parsing split_part.sql
2018-07-28 09:36:10,820: Parsing table_exists.sql
2018-07-28 09:36:10,851: Parsing core.sql
2018-07-28 09:36:10,890: Parsing adapters/bigquery.sql
2018-07-28 09:36:10,906: Parsing adapters/common.sql
2018-07-28 09:36:10,992: Parsing adapters/redshift.sql
2018-07-28 09:36:11,058: Parsing adapters/snowflake.sql
2018-07-28 09:36:11,071: Parsing etc/bigquery.sql
2018-07-28 09:36:11,085: Parsing etc/datetime.sql
2018-07-28 09:36:11,145: Parsing etc/get_custom_schema.sql
2018-07-28 09:36:11,161: Parsing materializations/helpers.sql
2018-07-28 09:36:11,229: Parsing materializations/archive/archive.sql
2018-07-28 09:36:11,329: Parsing materializations/incremental/incremental.sql
2018-07-28 09:36:11,455: Parsing materializations/seed/bigquery.sql
2018-07-28 09:36:11,470: Parsing materializations/seed/seed.sql
2018-07-28 09:36:11,567: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:36:11,637: Parsing materializations/table/table.sql
2018-07-28 09:36:11,679: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:36:11,698: Parsing materializations/view/view.sql
2018-07-28 09:36:11,733: Parsing schema_tests/accepted_values.sql
2018-07-28 09:36:11,740: Parsing schema_tests/not_null.sql
2018-07-28 09:36:11,746: Parsing schema_tests/relationships.sql
2018-07-28 09:36:11,751: Parsing schema_tests/unique.sql
2018-07-28 09:36:11,790: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:36:11,795: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:36:11,797: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:36:11,799: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:36:11,802: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:36:11,814: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:36:11,828: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:36:11,836: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:36:11,847: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:36:11,856: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:36:11,863: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:36:11,866: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:36:11,870: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:36:11,873: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:36:11,878: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:36:11,886: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:36:11,889: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:36:11,895: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:36:11,899: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:36:11,904: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:36:11,910: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:36:11,924: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093bfe80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1093ffac8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1068b47f0>]}
2018-07-28 09:36:12,152: Encountered an error:
2018-07-28 09:36:12,153: Compilation Error in model shopify_customers_proc (models/base/shopify/shopify_customers_proc.sql)
  Model 'model.shopify_cohort_analysis.shopify_customers_proc' depends on model 'accounts_proc' which was not found or is disabled
2018-07-28 09:36:12,160: Traceback (most recent call last):
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 41, in main
    results, succeeded = handle_and_check(args)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 85, in handle_and_check
    task, res = run_from_args(parsed)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 139, in run_from_args
    results = run_from_task(task, proj, parsed)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/main.py", line 147, in run_from_task
    result = task.run()
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/task/run.py", line 26, in run
    results = runner.run(query, ModelRunner)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 217, in run
    return self.run_from_graph(Selector, Runner, query)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 177, in run_from_graph
    flat_graph, linker = self.compile(self.project)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/runner.py", line 173, in compile
    (flat_graph, linker) = compiler.compile()
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/compilation.py", line 292, in compile
    root_project.get('name'))
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/parser.py", line 101, in process_refs
    target_model_package)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/utils.py", line 390, in invalid_ref_fail_unless_test
    target_model_package)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/exceptions.py", line 190, in ref_target_not_found
    raise_compiler_error(msg, model)
  File "/usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/exceptions.py", line 137, in raise_compiler_error
    raise CompilationException(msg, node)
dbt.exceptions.CompilationException: Compilation Error in model shopify_customers_proc (models/base/shopify/shopify_customers_proc.sql)
  Model 'model.shopify_cohort_analysis.shopify_customers_proc' depends on model 'accounts_proc' which was not found or is disabled

2018-07-28 09:39:54,813: Tracking: tracking
2018-07-28 09:39:54,816: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11225f208>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11225f9b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11225ffd0>]}
2018-07-28 09:39:56,849: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:39:56,891: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:39:56,898: Parsing get_column_values.sql
2018-07-28 09:39:56,919: Parsing get_url_parameter.sql
2018-07-28 09:39:56,925: Parsing split_part.sql
2018-07-28 09:39:56,933: Parsing table_exists.sql
2018-07-28 09:39:56,944: Parsing core.sql
2018-07-28 09:39:56,957: Parsing adapters/bigquery.sql
2018-07-28 09:39:56,969: Parsing adapters/common.sql
2018-07-28 09:39:57,008: Parsing adapters/redshift.sql
2018-07-28 09:39:57,040: Parsing adapters/snowflake.sql
2018-07-28 09:39:57,048: Parsing etc/bigquery.sql
2018-07-28 09:39:57,053: Parsing etc/datetime.sql
2018-07-28 09:39:57,089: Parsing etc/get_custom_schema.sql
2018-07-28 09:39:57,099: Parsing materializations/helpers.sql
2018-07-28 09:39:57,131: Parsing materializations/archive/archive.sql
2018-07-28 09:39:57,187: Parsing materializations/incremental/incremental.sql
2018-07-28 09:39:57,245: Parsing materializations/seed/bigquery.sql
2018-07-28 09:39:57,259: Parsing materializations/seed/seed.sql
2018-07-28 09:39:57,335: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:39:57,381: Parsing materializations/table/table.sql
2018-07-28 09:39:57,431: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:39:57,470: Parsing materializations/view/view.sql
2018-07-28 09:39:57,500: Parsing schema_tests/accepted_values.sql
2018-07-28 09:39:57,505: Parsing schema_tests/not_null.sql
2018-07-28 09:39:57,510: Parsing schema_tests/relationships.sql
2018-07-28 09:39:57,518: Parsing schema_tests/unique.sql
2018-07-28 09:39:57,565: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:39:57,568: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:39:57,580: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:39:57,586: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:39:57,589: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:39:57,608: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:39:57,637: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:39:57,667: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:39:57,690: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:39:57,701: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:39:57,707: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:39:57,712: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:39:57,716: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:39:57,721: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:39:57,726: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:39:57,738: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:39:57,745: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:39:57,749: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:39:57,754: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:39:57,762: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:39:57,772: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:39:57,794: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:39:57,802: 
2018-07-28 09:39:57,817: Acquiring new bigquery connection "master".
2018-07-28 09:39:57,818: Opening a new connection (0 currently allocated)
2018-07-28 09:39:59,155: Creating schema "template".
2018-07-28 09:39:59,599: 09:39:59 | Concurrency: 4 threads (target='template')
2018-07-28 09:39:59,600: 09:39:59 | 
2018-07-28 09:39:59,966: 09:39:59 | 1 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:39:59,967: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:39:59,966: 09:39:59 | 2 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:39:59,977: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:39:59,977: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:39:59,966: 09:39:59 | 4 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:39:59,966: 09:39:59 | 3 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:39:59,987: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:39:59,988: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:39:59,988: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:39:59,999: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:40:00,012: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:40:00,015: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:40:00,016: Opening a new connection (1 currently allocated)
2018-07-28 09:40:00,022: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:40:00,022: Opening a new connection (2 currently allocated)
2018-07-28 09:40:00,032: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:40:00,038: Opening a new connection (3 currently allocated)
2018-07-28 09:40:00,035: Acquiring new bigquery connection "all_dates".
2018-07-28 09:40:00,043: Opening a new connection (4 currently allocated)
2018-07-28 09:40:00,458: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:40:00,465: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:40:00,472: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:40:00,473: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
store,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY store ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by store, account, platform
order by store asc, account asc
  );

    
2018-07-28 09:40:00,485: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:40:00,505: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:40:00,507: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:40:00,525: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:40:01,027: Bad request while running:
create dataset
2018-07-28 09:40:01,028: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/35a550ee-86bb-4350-bb62-b81743c59d63?maxResults=0: Unrecognized name: store at [13:1]
2018-07-28 09:40:01,029: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1352eca5-b049-42a4-8cc0-6aff379fe96f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123f8160>]}
2018-07-28 09:40:01,122: Bad request while running:
create dataset
2018-07-28 09:40:01,122: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/e40ca49f-818a-4e3c-9f8d-03468af58a89?maxResults=0: Unrecognized name: store_name at [18:1]
2018-07-28 09:40:01,122: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1352eca5-b049-42a4-8cc0-6aff379fe96f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11239d4e0>]}
2018-07-28 09:40:01,332: 09:40:01 | 2 of 21 ERROR creating table model template.stores_proc.............. [ERROR in 1.05s]
2018-07-28 09:40:01,650: 09:40:01 | 3 of 21 ERROR creating table model template.mappings_ga_proc......... [ERROR in 1.13s]
2018-07-28 09:40:02,384: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1352eca5-b049-42a4-8cc0-6aff379fe96f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112404da0>]}
2018-07-28 09:40:02,668: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1352eca5-b049-42a4-8cc0-6aff379fe96f', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11238bda0>]}
2018-07-28 09:40:02,916: 09:40:02 | 1 of 21 OK created table model template.all_dates.................... [OK in 2.42s]
2018-07-28 09:40:03,162: 09:40:03 | 4 of 21 OK created table model template.monthend_dates............... [OK in 2.68s]
2018-07-28 09:40:03,163: 09:40:03 | 5 of 21 SKIP relation template.shopify_customers_proc................ [SKIP]
2018-07-28 09:40:03,163: 09:40:03 | 6 of 21 SKIP relation template.shopify_discounts_proc................ [SKIP]
2018-07-28 09:40:03,163: 09:40:03 | 7 of 21 SKIP relation template.shopify_refunds_proc.................. [SKIP]
2018-07-28 09:40:03,164: 09:40:03 | 8 of 21 SKIP relation template.ga_transactions....................... [SKIP]
2018-07-28 09:40:03,164: 09:40:03 | 9 of 21 SKIP relation template.agg_customers......................... [SKIP]
2018-07-28 09:40:03,164: 09:40:03 | 10 of 21 SKIP relation template.shopify_products_proc................ [SKIP]
2018-07-28 09:40:03,165: 09:40:03 | 11 of 21 SKIP relation template.shopify_orders_proc.................. [SKIP]
2018-07-28 09:40:03,167: 09:40:03 | 12 of 21 SKIP relation template.transaction_by_order_number.......... [SKIP]
2018-07-28 09:40:03,167: 09:40:03 | 13 of 21 SKIP relation template.customers_by_transaction............. [SKIP]
2018-07-28 09:40:03,168: 09:40:03 | 14 of 21 SKIP relation template.agg_transactions..................... [SKIP]
2018-07-28 09:40:03,169: 09:40:03 | 15 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:40:03,169: 09:40:03 | 16 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:40:03,170: 09:40:03 | 17 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:40:03,171: 09:40:03 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:40:03,171: 09:40:03 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:40:03,172: 09:40:03 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:40:03,173: 09:40:03 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:40:03,274: 09:40:03 | 
2018-07-28 09:40:03,275: 09:40:03 | Finished running 21 table models in 5.47s.
2018-07-28 09:40:03,275: Connection 'master' was left open.
2018-07-28 09:40:03,275: 
2018-07-28 09:40:03,275: Completed with 2 errors:
2018-07-28 09:40:03,276: 
2018-07-28 09:40:03,276: Database Error in model stores_proc (models/admin/stores_proc.sql)
2018-07-28 09:40:03,276:   Unrecognized name: store at [13:1]
2018-07-28 09:40:03,276:   compiled SQL at target/run/shopify_cohort_analysis/admin/stores_proc.sql
2018-07-28 09:40:03,276: 
2018-07-28 09:40:03,276: Database Error in model mappings_ga_proc (models/admin/mappings_ga_proc.sql)
2018-07-28 09:40:03,277:   Unrecognized name: store_name at [18:1]
2018-07-28 09:40:03,277:   compiled SQL at target/run/shopify_cohort_analysis/admin/mappings_ga_proc.sql
2018-07-28 09:40:03,277: 
Done. PASS=2 ERROR=2 SKIP=17 TOTAL=21
2018-07-28 09:40:03,278: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11225f208>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11232c780>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11232c1d0>]}
2018-07-28 09:40:03,527: Flushing usage events
2018-07-28 09:40:04,040: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59019), raddr=('172.217.2.13', 443)>

2018-07-28 09:40:04,042: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59022), raddr=('172.217.2.13', 443)>

2018-07-28 09:40:04,042: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59023), raddr=('172.217.2.13', 443)>

2018-07-28 09:40:04,043: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59021), raddr=('172.217.2.13', 443)>

2018-07-28 09:40:04,047: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59004), raddr=('172.217.12.10', 443)>

2018-07-28 09:40:04,048: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59002), raddr=('172.217.2.13', 443)>

2018-07-28 09:40:04,050: sys:1: ResourceWarning: unclosed <socket.socket fd=22, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59030), raddr=('172.217.1.202', 443)>

2018-07-28 09:40:04,052: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59028), raddr=('172.217.1.202', 443)>

2018-07-28 09:40:04,054: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59029), raddr=('172.217.1.202', 443)>

2018-07-28 09:40:04,056: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59031), raddr=('172.217.1.202', 443)>

2018-07-28 09:43:02,803: Tracking: tracking
2018-07-28 09:43:02,805: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdf82b0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdf8f28>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cdf8278>]}
2018-07-28 09:43:06,813: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:43:06,967: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:43:07,088: Parsing get_column_values.sql
2018-07-28 09:43:07,284: Parsing get_url_parameter.sql
2018-07-28 09:43:07,313: Parsing split_part.sql
2018-07-28 09:43:07,332: Parsing table_exists.sql
2018-07-28 09:43:07,368: Parsing core.sql
2018-07-28 09:43:07,525: Parsing adapters/bigquery.sql
2018-07-28 09:43:07,555: Parsing adapters/common.sql
2018-07-28 09:43:07,727: Parsing adapters/redshift.sql
2018-07-28 09:43:07,780: Parsing adapters/snowflake.sql
2018-07-28 09:43:07,787: Parsing etc/bigquery.sql
2018-07-28 09:43:07,792: Parsing etc/datetime.sql
2018-07-28 09:43:07,839: Parsing etc/get_custom_schema.sql
2018-07-28 09:43:07,863: Parsing materializations/helpers.sql
2018-07-28 09:43:07,927: Parsing materializations/archive/archive.sql
2018-07-28 09:43:08,005: Parsing materializations/incremental/incremental.sql
2018-07-28 09:43:08,135: Parsing materializations/seed/bigquery.sql
2018-07-28 09:43:08,171: Parsing materializations/seed/seed.sql
2018-07-28 09:43:08,322: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:43:08,417: Parsing materializations/table/table.sql
2018-07-28 09:43:08,565: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:43:08,598: Parsing materializations/view/view.sql
2018-07-28 09:43:08,631: Parsing schema_tests/accepted_values.sql
2018-07-28 09:43:08,637: Parsing schema_tests/not_null.sql
2018-07-28 09:43:08,644: Parsing schema_tests/relationships.sql
2018-07-28 09:43:08,652: Parsing schema_tests/unique.sql
2018-07-28 09:43:08,684: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:43:08,692: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:43:08,697: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:43:08,700: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:43:08,704: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:43:08,717: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:43:08,730: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:43:08,738: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:43:08,761: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:43:08,772: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:43:08,785: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:43:08,788: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:43:08,797: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:43:08,801: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:43:08,805: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:43:08,820: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:43:08,829: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:43:08,836: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:43:08,846: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:43:08,855: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:43:08,872: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:43:08,905: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:43:08,915: 
2018-07-28 09:43:08,932: Acquiring new bigquery connection "master".
2018-07-28 09:43:08,937: Opening a new connection (0 currently allocated)
2018-07-28 09:43:09,424: 09:43:09 | Concurrency: 4 threads (target='template')
2018-07-28 09:43:09,424: 09:43:09 | 
2018-07-28 09:43:09,572: 09:43:09 | 1 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:43:09,572: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:43:09,572: 09:43:09 | 2 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:43:09,579: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:43:09,588: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:43:09,572: 09:43:09 | 3 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:43:09,588: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:43:09,572: 09:43:09 | 4 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:43:09,589: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:43:09,591: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:43:09,591: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:43:09,598: Acquiring new bigquery connection "all_dates".
2018-07-28 09:43:09,601: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:43:09,601: Opening a new connection (1 currently allocated)
2018-07-28 09:43:09,611: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:43:09,615: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:43:09,617: Opening a new connection (2 currently allocated)
2018-07-28 09:43:09,620: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:43:09,632: Opening a new connection (3 currently allocated)
2018-07-28 09:43:09,636: Opening a new connection (4 currently allocated)
2018-07-28 09:43:09,984: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:43:09,986: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:43:10,000: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:43:10,001: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:43:10,092: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:43:10,093: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by store, account, platform
order by store asc, account asc
  );

    
2018-07-28 09:43:10,104: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:43:10,105: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:43:12,359: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a43b4a8>]}
2018-07-28 09:43:12,373: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cefbeb8>]}
2018-07-28 09:43:12,382: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a48ba90>]}
2018-07-28 09:43:13,011: 09:43:13 | 4 of 21 OK created table model template.stores_proc.................. [OK in 2.77s]
2018-07-28 09:43:15,989: 09:43:15 | 1 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.80s]
2018-07-28 09:43:16,301: 09:43:16 | 3 of 21 OK created table model template.monthend_dates............... [OK in 2.79s]
2018-07-28 09:43:17,664: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4e5f98>]}
2018-07-28 09:43:17,905: 09:43:17 | 2 of 21 OK created table model template.all_dates.................... [OK in 8.09s]
2018-07-28 09:43:17,906: 09:43:17 | 5 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 09:43:17,907: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:43:17,906: 09:43:17 | 6 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 09:43:17,906: 09:43:17 | 7 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 09:43:17,930: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:43:17,920: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:43:17,930: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 09:43:17,963: Re-using an available connection from the pool.
2018-07-28 09:43:17,963: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:43:17,963: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 09:43:17,982: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 09:43:17,983: Re-using an available connection from the pool.
2018-07-28 09:43:17,984: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:43:17,985: Re-using an available connection from the pool.
2018-07-28 09:43:17,986: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:43:18,169: Bad request while running:
create dataset
2018-07-28 09:43:18,169: 400 Unrecognized name: store_name at [4:13]
2018-07-28 09:43:18,184: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a572550>]}
2018-07-28 09:43:18,258: Bad request while running:
create dataset
2018-07-28 09:43:18,258: 400 Unrecognized name: store_name at [4:13]
2018-07-28 09:43:18,259: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4457f0>]}
2018-07-28 09:43:18,350: Bad request while running:
create dataset
2018-07-28 09:43:18,350: 400 Unrecognized name: store_name at [4:13]
2018-07-28 09:43:18,351: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4502b0>]}
2018-07-28 09:43:18,729: 09:43:18 | 5 of 21 ERROR creating table model template.shopify_customers_proc... [ERROR in 0.28s]
2018-07-28 09:43:19,288: 09:43:19 | 6 of 21 ERROR creating table model template.shopify_refunds_proc..... [ERROR in 0.34s]
2018-07-28 09:43:19,852: 09:43:19 | 7 of 21 ERROR creating table model template.shopify_discounts_proc... [ERROR in 0.42s]
2018-07-28 09:43:19,853: 09:43:19 | 8 of 21 SKIP relation template.agg_customers......................... [SKIP]
2018-07-28 09:43:19,853: 09:43:19 | 9 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 09:43:19,854: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:43:19,853: 09:43:19 | 10 of 21 SKIP relation template.shopify_products_proc................ [SKIP]
2018-07-28 09:43:19,868: Acquiring new bigquery connection "ga_transactions".
2018-07-28 09:43:19,868: Re-using an available connection from the pool.
2018-07-28 09:43:19,868: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:43:20,096: Bad request while running:
create dataset
2018-07-28 09:43:20,096: 400 Unrecognized name: store_name at [4:13]
2018-07-28 09:43:20,097: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'fb5aa9df-60c4-479a-ba48-2673974c8feb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a4564e0>]}
2018-07-28 09:43:20,315: 09:43:20 | 9 of 21 ERROR creating table model template.ga_transactions.......... [ERROR in 0.24s]
2018-07-28 09:43:20,316: 09:43:20 | 11 of 21 SKIP relation template.shopify_orders_proc.................. [SKIP]
2018-07-28 09:43:20,317: 09:43:20 | 12 of 21 SKIP relation template.transaction_by_order_number.......... [SKIP]
2018-07-28 09:43:20,317: 09:43:20 | 13 of 21 SKIP relation template.customers_by_transaction............. [SKIP]
2018-07-28 09:43:20,318: 09:43:20 | 14 of 21 SKIP relation template.agg_transactions..................... [SKIP]
2018-07-28 09:43:20,318: 09:43:20 | 15 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:43:20,318: 09:43:20 | 16 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:43:20,319: 09:43:20 | 17 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:43:20,320: 09:43:20 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:43:20,321: 09:43:20 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:43:20,321: 09:43:20 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:43:20,322: 09:43:20 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:43:20,423: 09:43:20 | 
2018-07-28 09:43:20,424: 09:43:20 | Finished running 21 table models in 11.51s.
2018-07-28 09:43:20,424: Connection 'master' was left open.
2018-07-28 09:43:20,424: 
2018-07-28 09:43:20,425: Completed with 4 errors:
2018-07-28 09:43:20,425: 
2018-07-28 09:43:20,425: Database Error in model shopify_customers_proc (models/base/shopify/shopify_customers_proc.sql)
2018-07-28 09:43:20,425:   Unrecognized name: store_name at [4:13]
2018-07-28 09:43:20,425: 
2018-07-28 09:43:20,425: Database Error in model shopify_refunds_proc (models/base/shopify/shopify_refunds_proc.sql)
2018-07-28 09:43:20,425:   Unrecognized name: store_name at [4:13]
2018-07-28 09:43:20,426: 
2018-07-28 09:43:20,426: Database Error in model shopify_discounts_proc (models/base/shopify/shopify_discounts_proc.sql)
2018-07-28 09:43:20,426:   Unrecognized name: store_name at [4:13]
2018-07-28 09:43:20,426: 
2018-07-28 09:43:20,426: Database Error in model ga_transactions (models/base/ga/ga_transactions.sql)
2018-07-28 09:43:20,426:   Unrecognized name: store_name at [4:13]
2018-07-28 09:43:20,426: 
Done. PASS=4 ERROR=4 SKIP=13 TOTAL=21
2018-07-28 09:43:20,427: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cec7080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cec71d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cec7780>]}
2018-07-28 09:43:20,682: Flushing usage events
2018-07-28 09:43:21,023: sys:1: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59306), raddr=('172.217.12.10', 443)>

2018-07-28 09:43:21,030: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59307), raddr=('172.217.12.10', 443)>

2018-07-28 09:43:21,031: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59308), raddr=('172.217.12.10', 443)>

2018-07-28 09:43:21,031: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59309), raddr=('172.217.12.10', 443)>

2018-07-28 09:43:21,032: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59302), raddr=('172.217.2.13', 443)>

2018-07-28 09:43:21,034: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59303), raddr=('172.217.2.13', 443)>

2018-07-28 09:43:21,035: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59304), raddr=('172.217.2.13', 443)>

2018-07-28 09:43:21,036: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59305), raddr=('172.217.2.13', 443)>

2018-07-28 09:43:21,036: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59301), raddr=('172.217.12.10', 443)>

2018-07-28 09:43:21,037: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59300), raddr=('172.217.2.13', 443)>

2018-07-28 09:47:07,553: Tracking: tracking
2018-07-28 09:47:07,555: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11239c240>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11239cc18>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11239c2b0>]}
2018-07-28 09:47:11,146: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:47:11,180: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:47:11,187: Parsing get_column_values.sql
2018-07-28 09:47:11,207: Parsing get_url_parameter.sql
2018-07-28 09:47:11,215: Parsing split_part.sql
2018-07-28 09:47:11,224: Parsing table_exists.sql
2018-07-28 09:47:11,239: Parsing core.sql
2018-07-28 09:47:11,259: Parsing adapters/bigquery.sql
2018-07-28 09:47:11,268: Parsing adapters/common.sql
2018-07-28 09:47:11,303: Parsing adapters/redshift.sql
2018-07-28 09:47:11,333: Parsing adapters/snowflake.sql
2018-07-28 09:47:11,339: Parsing etc/bigquery.sql
2018-07-28 09:47:11,345: Parsing etc/datetime.sql
2018-07-28 09:47:11,377: Parsing etc/get_custom_schema.sql
2018-07-28 09:47:11,386: Parsing materializations/helpers.sql
2018-07-28 09:47:11,440: Parsing materializations/archive/archive.sql
2018-07-28 09:47:11,518: Parsing materializations/incremental/incremental.sql
2018-07-28 09:47:11,582: Parsing materializations/seed/bigquery.sql
2018-07-28 09:47:11,590: Parsing materializations/seed/seed.sql
2018-07-28 09:47:11,696: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:47:11,782: Parsing materializations/table/table.sql
2018-07-28 09:47:11,817: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:47:11,837: Parsing materializations/view/view.sql
2018-07-28 09:47:11,866: Parsing schema_tests/accepted_values.sql
2018-07-28 09:47:11,874: Parsing schema_tests/not_null.sql
2018-07-28 09:47:11,879: Parsing schema_tests/relationships.sql
2018-07-28 09:47:11,885: Parsing schema_tests/unique.sql
2018-07-28 09:47:11,934: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:47:11,937: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:47:11,940: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:47:11,945: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:47:11,948: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:47:11,963: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:47:11,973: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:47:11,981: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:47:11,994: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:47:12,004: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:47:12,016: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:47:12,020: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:47:12,029: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:47:12,035: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:47:12,042: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:47:12,052: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:47:12,058: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:47:12,066: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:47:12,070: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:47:12,076: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:47:12,083: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:47:12,107: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:47:12,117: 
2018-07-28 09:47:12,197: Acquiring new bigquery connection "master".
2018-07-28 09:47:12,198: Opening a new connection (0 currently allocated)
2018-07-28 09:47:14,017: 09:47:14 | Concurrency: 4 threads (target='template')
2018-07-28 09:47:14,021: 09:47:14 | 
2018-07-28 09:47:14,130: 09:47:14 | 1 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:47:14,131: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:47:14,136: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:47:14,130: 09:47:14 | 2 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:47:14,137: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:47:14,131: 09:47:14 | 3 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:47:14,144: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:47:14,144: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:47:14,131: 09:47:14 | 4 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:47:14,150: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:47:14,151: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:47:14,152: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:47:14,152: Opening a new connection (1 currently allocated)
2018-07-28 09:47:14,158: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:47:14,161: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:47:14,163: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:47:14,170: Acquiring new bigquery connection "all_dates".
2018-07-28 09:47:14,170: Opening a new connection (2 currently allocated)
2018-07-28 09:47:14,174: Opening a new connection (3 currently allocated)
2018-07-28 09:47:14,176: Opening a new connection (4 currently allocated)
2018-07-28 09:47:14,607: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:47:14,607: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:47:14,620: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:47:14,628: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:47:14,634: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:47:14,634: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 09:47:14,635: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:47:14,644: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:47:15,902: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112628f60>]}
2018-07-28 09:47:16,140: 09:47:16 | 4 of 21 OK created table model template.all_dates.................... [OK in 1.75s]
2018-07-28 09:47:16,191: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124a0fd0>]}
2018-07-28 09:47:16,544: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124c5320>]}
2018-07-28 09:47:16,547: 09:47:16 | 1 of 21 OK created table model template.monthend_dates............... [OK in 2.06s]
2018-07-28 09:47:17,013: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11252a6a0>]}
2018-07-28 09:47:17,319: 09:47:17 | 2 of 21 OK created table model template.stores_proc.................. [OK in 2.41s]
2018-07-28 09:47:17,932: 09:47:17 | 3 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.87s]
2018-07-28 09:47:17,933: 09:47:17 | 5 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 09:47:17,933: 09:47:17 | 6 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 09:47:17,934: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:47:17,933: 09:47:17 | 7 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 09:47:17,934: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:47:17,941: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:47:17,945: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 09:47:17,957: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 09:47:17,957: Re-using an available connection from the pool.
2018-07-28 09:47:17,957: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:17,959: Re-using an available connection from the pool.
2018-07-28 09:47:17,967: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:17,973: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 09:47:17,973: Re-using an available connection from the pool.
2018-07-28 09:47:17,974: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:19,951: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:47:20,169: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:47:20,171: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 09:47:20,269: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:47:20,440: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:47:20,484: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:47:20,485: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 09:47:20,610: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:47:20,611: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:47:22,582: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d8240>]}
2018-07-28 09:47:22,598: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11252a588>]}
2018-07-28 09:47:23,136: 09:47:23 | 6 of 21 OK created table model template.shopify_discounts_proc....... [OK in 4.65s]
2018-07-28 09:47:23,368: 09:47:23 | 5 of 21 OK created table model template.shopify_refunds_proc......... [OK in 4.66s]
2018-07-28 09:47:26,279: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112527a20>]}
2018-07-28 09:47:26,585: 09:47:26 | 7 of 21 OK created table model template.shopify_customers_proc....... [OK in 8.34s]
2018-07-28 09:47:26,586: 09:47:26 | 8 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 09:47:26,587: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 09:47:26,596: 09:47:26 | 9 of 21 START table model template.shopify_products_proc............. [RUN]
2018-07-28 09:47:26,598: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:47:26,604: 09:47:26 | 10 of 21 START table model template.ga_transactions.................. [RUN]
2018-07-28 09:47:26,643: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:47:26,643: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 09:47:26,651: Re-using an available connection from the pool.
2018-07-28 09:47:26,652: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:26,678: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:47:26,679: Acquiring new bigquery connection "ga_transactions".
2018-07-28 09:47:26,681: Re-using an available connection from the pool.
2018-07-28 09:47:26,681: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:26,688: Acquiring new bigquery connection "agg_customers".
2018-07-28 09:47:26,688: Re-using an available connection from the pool.
2018-07-28 09:47:26,783: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:47:26,784: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 09:47:27,638: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:47:27,771: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:47:27,772: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 09:47:28,289: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:47:28,554: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:47:28,556: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 09:47:30,463: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fdfcc18>]}
2018-07-28 09:47:30,800: 09:47:30 | 9 of 21 OK created table model template.shopify_products_proc........ [OK in 3.86s]
2018-07-28 09:47:31,613: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125cb5c0>]}
2018-07-28 09:47:31,938: 09:47:31 | 8 of 21 OK created table model template.agg_customers................ [OK in 5.03s]
2018-07-28 09:47:53,824: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125c76d8>]}
2018-07-28 09:47:54,181: 09:47:54 | 10 of 21 OK created table model template.ga_transactions............. [OK in 27.18s]
2018-07-28 09:47:54,183: 09:47:54 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 09:47:54,184: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:47:54,208: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 09:47:54,209: Re-using an available connection from the pool.
2018-07-28 09:47:54,209: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:47:54,938: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:47:55,038: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:47:55,040: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:48:03,706: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125d35f8>]}
2018-07-28 09:48:04,192: 09:48:04 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 9.51s]
2018-07-28 09:48:04,194: 09:48:04 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 09:48:04,197: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:48:04,223: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:48:04,231: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 09:48:04,231: Re-using an available connection from the pool.
2018-07-28 09:48:04,383: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:48:04,384: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 09:48:04,837: Bad request while running:
create dataset
2018-07-28 09:48:04,837: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/2ecb0b18-87ea-47eb-8ac6-a0df94167c45?maxResults=0: Unrecognized name: revenue at [10:5]
2018-07-28 09:48:04,838: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c46d04fc-f653-47ce-8a59-8c62bb3c6be8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124b4710>]}
2018-07-28 09:48:05,095: 09:48:05 | 12 of 21 ERROR creating table model template.transaction_by_order_number [ERROR in 0.64s]
2018-07-28 09:48:05,098: 09:48:05 | 13 of 21 SKIP relation template.customers_by_transaction............. [SKIP]
2018-07-28 09:48:05,099: 09:48:05 | 14 of 21 SKIP relation template.agg_transactions..................... [SKIP]
2018-07-28 09:48:05,100: 09:48:05 | 15 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:48:05,100: 09:48:05 | 16 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:48:05,100: 09:48:05 | 17 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:48:05,101: 09:48:05 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:48:05,102: 09:48:05 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:48:05,102: 09:48:05 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:48:05,103: 09:48:05 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:48:05,153: 09:48:05 | 
2018-07-28 09:48:05,153: 09:48:05 | Finished running 21 table models in 53.03s.
2018-07-28 09:48:05,367: Connection 'master' was left open.
2018-07-28 09:48:05,367: 
2018-07-28 09:48:05,368: Completed with 1 errors:
2018-07-28 09:48:05,368: 
2018-07-28 09:48:05,368: Database Error in model transaction_by_order_number (models/join/transaction_by_order_number.sql)
2018-07-28 09:48:05,368:   Unrecognized name: revenue at [10:5]
2018-07-28 09:48:05,368:   compiled SQL at target/run/shopify_cohort_analysis/join/transaction_by_order_number.sql
2018-07-28 09:48:05,369: 
Done. PASS=11 ERROR=1 SKIP=9 TOTAL=21
2018-07-28 09:48:05,372: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112468080>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124681d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112468780>]}
2018-07-28 09:48:05,757: Flushing usage events
2018-07-28 09:48:06,394: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59569), raddr=('172.217.11.234', 443)>

2018-07-28 09:48:06,396: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59570), raddr=('172.217.11.234', 443)>

2018-07-28 09:48:06,397: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59571), raddr=('172.217.11.234', 443)>

2018-07-28 09:48:06,398: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59572), raddr=('172.217.11.234', 443)>

2018-07-28 09:48:06,398: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59565), raddr=('172.217.2.13', 443)>

2018-07-28 09:48:06,399: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59566), raddr=('172.217.2.13', 443)>

2018-07-28 09:48:06,400: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59567), raddr=('172.217.2.13', 443)>

2018-07-28 09:48:06,401: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59568), raddr=('172.217.2.13', 443)>

2018-07-28 09:48:06,402: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59564), raddr=('172.217.3.10', 443)>

2018-07-28 09:48:06,403: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59563), raddr=('172.217.2.13', 443)>

2018-07-28 09:50:32,987: Tracking: tracking
2018-07-28 09:50:32,989: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d724eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d724a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d724d30>]}
2018-07-28 09:50:34,131: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:50:34,180: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:50:34,188: Parsing get_column_values.sql
2018-07-28 09:50:34,220: Parsing get_url_parameter.sql
2018-07-28 09:50:34,228: Parsing split_part.sql
2018-07-28 09:50:34,236: Parsing table_exists.sql
2018-07-28 09:50:34,253: Parsing core.sql
2018-07-28 09:50:34,278: Parsing adapters/bigquery.sql
2018-07-28 09:50:34,293: Parsing adapters/common.sql
2018-07-28 09:50:34,331: Parsing adapters/redshift.sql
2018-07-28 09:50:34,374: Parsing adapters/snowflake.sql
2018-07-28 09:50:34,382: Parsing etc/bigquery.sql
2018-07-28 09:50:34,386: Parsing etc/datetime.sql
2018-07-28 09:50:34,426: Parsing etc/get_custom_schema.sql
2018-07-28 09:50:34,452: Parsing materializations/helpers.sql
2018-07-28 09:50:34,487: Parsing materializations/archive/archive.sql
2018-07-28 09:50:34,547: Parsing materializations/incremental/incremental.sql
2018-07-28 09:50:34,594: Parsing materializations/seed/bigquery.sql
2018-07-28 09:50:34,609: Parsing materializations/seed/seed.sql
2018-07-28 09:50:34,662: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:50:34,698: Parsing materializations/table/table.sql
2018-07-28 09:50:34,728: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:50:34,744: Parsing materializations/view/view.sql
2018-07-28 09:50:34,766: Parsing schema_tests/accepted_values.sql
2018-07-28 09:50:34,773: Parsing schema_tests/not_null.sql
2018-07-28 09:50:34,778: Parsing schema_tests/relationships.sql
2018-07-28 09:50:34,783: Parsing schema_tests/unique.sql
2018-07-28 09:50:34,814: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:50:34,816: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:50:34,818: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:50:34,820: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:50:34,823: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:50:34,834: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:50:34,844: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:50:34,850: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:50:34,863: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:50:34,872: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:50:34,882: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:50:34,885: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:50:34,888: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:50:34,895: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:50:34,897: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:50:34,911: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:50:34,915: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:50:34,920: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:50:34,926: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:50:34,931: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:50:34,937: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:50:34,963: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:50:34,970: 
2018-07-28 09:50:34,984: Acquiring new bigquery connection "master".
2018-07-28 09:50:34,984: Opening a new connection (0 currently allocated)
2018-07-28 09:50:35,401: 09:50:35 | Concurrency: 4 threads (target='template')
2018-07-28 09:50:35,401: 09:50:35 | 
2018-07-28 09:50:35,516: 09:50:35 | 1 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:50:35,517: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:50:35,516: 09:50:35 | 2 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:50:35,525: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:50:35,517: 09:50:35 | 3 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:50:35,525: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:50:35,517: 09:50:35 | 4 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:50:35,525: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:50:35,533: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:50:35,534: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:50:35,535: Acquiring new bigquery connection "all_dates".
2018-07-28 09:50:35,544: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:50:35,550: Opening a new connection (1 currently allocated)
2018-07-28 09:50:35,554: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:50:35,557: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:50:35,560: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:50:35,562: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:50:35,564: Opening a new connection (2 currently allocated)
2018-07-28 09:50:35,567: Opening a new connection (3 currently allocated)
2018-07-28 09:50:35,571: Opening a new connection (4 currently allocated)
2018-07-28 09:50:35,875: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:50:35,886: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:50:35,886: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:50:35,887: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 09:50:35,929: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:50:35,936: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:50:35,970: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:50:35,970: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:50:37,962: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8b54e0>]}
2018-07-28 09:50:38,386: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8b5390>]}
2018-07-28 09:50:38,395: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d869898>]}
2018-07-28 09:50:38,401: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8b56a0>]}
2018-07-28 09:50:39,069: 09:50:39 | 1 of 21 OK created table model template.all_dates.................... [OK in 2.45s]
2018-07-28 09:50:39,777: 09:50:39 | 4 of 21 OK created table model template.monthend_dates............... [OK in 2.85s]
2018-07-28 09:50:40,014: 09:50:40 | 2 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.87s]
2018-07-28 09:50:40,242: 09:50:40 | 3 of 21 OK created table model template.stores_proc.................. [OK in 2.88s]
2018-07-28 09:50:40,243: 09:50:40 | 5 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 09:50:40,243: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:50:40,243: 09:50:40 | 6 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 09:50:40,249: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:50:40,243: 09:50:40 | 7 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 09:50:40,260: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:50:40,262: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 09:50:40,283: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 09:50:40,289: Re-using an available connection from the pool.
2018-07-28 09:50:40,292: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 09:50:40,292: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:50:40,292: Re-using an available connection from the pool.
2018-07-28 09:50:40,293: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:50:40,293: Re-using an available connection from the pool.
2018-07-28 09:50:40,295: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:50:41,799: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:50:42,121: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:50:42,133: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:50:42,171: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:50:42,173: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:50:42,272: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:50:42,280: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:50:42,281: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 09:50:42,284: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 09:50:44,069: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d9790b8>]}
2018-07-28 09:50:44,315: 09:50:44 | 5 of 21 OK created table model template.shopify_refunds_proc......... [OK in 3.83s]
2018-07-28 09:50:44,712: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d86e320>]}
2018-07-28 09:50:44,945: 09:50:44 | 7 of 21 OK created table model template.shopify_discounts_proc....... [OK in 4.45s]
2018-07-28 09:50:46,772: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d979630>]}
2018-07-28 09:50:47,406: 09:50:47 | 6 of 21 OK created table model template.shopify_customers_proc....... [OK in 6.52s]
2018-07-28 09:50:47,409: 09:50:47 | 8 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 09:50:47,410: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 09:50:47,409: 09:50:47 | 9 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 09:50:47,418: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:50:47,418: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:50:47,409: 09:50:47 | 10 of 21 START table model template.shopify_products_proc............ [RUN]
2018-07-28 09:50:47,454: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:50:47,427: Acquiring new bigquery connection "agg_customers".
2018-07-28 09:50:47,470: Re-using an available connection from the pool.
2018-07-28 09:50:47,453: Acquiring new bigquery connection "ga_transactions".
2018-07-28 09:50:47,496: Re-using an available connection from the pool.
2018-07-28 09:50:47,498: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:50:47,490: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 09:50:47,503: Re-using an available connection from the pool.
2018-07-28 09:50:47,503: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:50:47,752: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:50:47,753: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 09:50:48,366: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:50:48,526: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:50:48,526: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 09:50:49,315: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:50:49,657: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:50:49,658: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 09:50:50,688: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d947470>]}
2018-07-28 09:50:51,069: 09:50:51 | 10 of 21 OK created table model template.shopify_products_proc....... [OK in 3.23s]
2018-07-28 09:50:52,380: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d824898>]}
2018-07-28 09:50:52,618: 09:50:52 | 8 of 21 OK created table model template.agg_customers................ [OK in 4.97s]
2018-07-28 09:51:16,492: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8b50f0>]}
2018-07-28 09:51:19,053: 09:51:19 | 9 of 21 OK created table model template.ga_transactions.............. [OK in 29.07s]
2018-07-28 09:51:19,054: 09:51:19 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 09:51:19,055: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:51:19,095: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 09:51:19,096: Re-using an available connection from the pool.
2018-07-28 09:51:19,096: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:51:20,464: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:51:20,601: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:51:20,602: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:51:31,025: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d979630>]}
2018-07-28 09:51:31,387: 09:51:31 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 11.97s]
2018-07-28 09:51:31,392: 09:51:31 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 09:51:31,393: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:51:31,418: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:51:31,421: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 09:51:31,421: Re-using an available connection from the pool.
2018-07-28 09:51:31,506: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:51:31,507: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 09:51:37,397: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8b50f0>]}
2018-07-28 09:51:40,440: 09:51:40 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 6.00s]
2018-07-28 09:51:40,443: 09:51:40 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 09:51:40,444: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:51:40,470: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:51:40,476: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 09:51:40,476: Re-using an available connection from the pool.
2018-07-28 09:51:40,888: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:51:40,889: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM
    `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 09:51:41,297: Bad request while running:
create dataset
2018-07-28 09:51:41,297: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/4eede9b1-ef88-4a99-9729-b3ca1f4d68c7?maxResults=0: Unrecognized name: date at [36:64]
2018-07-28 09:51:41,298: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0899a692-da8c-459c-96e6-2d1d0ae89d6a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d824898>]}
2018-07-28 09:51:41,586: 09:51:41 | 13 of 21 ERROR creating table model template.customers_by_transaction [ERROR in 0.85s]
2018-07-28 09:51:41,587: 09:51:41 | 14 of 21 SKIP relation template.agg_transactions..................... [SKIP]
2018-07-28 09:51:41,588: 09:51:41 | 15 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:51:41,588: 09:51:41 | 16 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:51:41,588: 09:51:41 | 17 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:51:41,589: 09:51:41 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:51:41,590: 09:51:41 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:51:41,591: 09:51:41 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:51:41,591: 09:51:41 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:51:41,682: 09:51:41 | 
2018-07-28 09:51:41,683: 09:51:41 | Finished running 21 table models in 66.71s.
2018-07-28 09:51:41,683: Connection 'master' was left open.
2018-07-28 09:51:41,683: 
2018-07-28 09:51:41,684: Completed with 1 errors:
2018-07-28 09:51:41,684: 
2018-07-28 09:51:41,684: Database Error in model customers_by_transaction (models/join/customers_by_transaction.sql)
2018-07-28 09:51:41,684:   Unrecognized name: date at [36:64]
2018-07-28 09:51:41,684:   compiled SQL at target/run/shopify_cohort_analysis/join/customers_by_transaction.sql
2018-07-28 09:51:41,684: 
Done. PASS=12 ERROR=1 SKIP=8 TOTAL=21
2018-07-28 09:51:41,687: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d724eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d8244e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d7f01d0>]}
2018-07-28 09:51:42,014: Flushing usage events
2018-07-28 09:51:42,220: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59705), raddr=('172.217.3.10', 443)>

2018-07-28 09:51:42,221: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59706), raddr=('172.217.3.10', 443)>

2018-07-28 09:51:42,221: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59707), raddr=('172.217.3.10', 443)>

2018-07-28 09:51:42,221: sys:1: ResourceWarning: unclosed <socket.socket fd=22, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59708), raddr=('172.217.3.10', 443)>

2018-07-28 09:51:42,222: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59701), raddr=('172.217.2.13', 443)>

2018-07-28 09:51:42,222: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59702), raddr=('172.217.2.13', 443)>

2018-07-28 09:51:42,222: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59703), raddr=('172.217.2.13', 443)>

2018-07-28 09:51:42,222: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59704), raddr=('172.217.2.13', 443)>

2018-07-28 09:51:42,223: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59700), raddr=('172.217.3.10', 443)>

2018-07-28 09:51:42,223: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59699), raddr=('172.217.2.13', 443)>

2018-07-28 09:54:05,931: Tracking: tracking
2018-07-28 09:54:05,934: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105368cf8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105368f60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105368b38>]}
2018-07-28 09:54:07,327: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:54:07,364: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:54:07,370: Parsing get_column_values.sql
2018-07-28 09:54:07,389: Parsing get_url_parameter.sql
2018-07-28 09:54:07,399: Parsing split_part.sql
2018-07-28 09:54:07,409: Parsing table_exists.sql
2018-07-28 09:54:07,423: Parsing core.sql
2018-07-28 09:54:07,465: Parsing adapters/bigquery.sql
2018-07-28 09:54:07,479: Parsing adapters/common.sql
2018-07-28 09:54:07,509: Parsing adapters/redshift.sql
2018-07-28 09:54:07,541: Parsing adapters/snowflake.sql
2018-07-28 09:54:07,546: Parsing etc/bigquery.sql
2018-07-28 09:54:07,550: Parsing etc/datetime.sql
2018-07-28 09:54:07,590: Parsing etc/get_custom_schema.sql
2018-07-28 09:54:07,600: Parsing materializations/helpers.sql
2018-07-28 09:54:07,624: Parsing materializations/archive/archive.sql
2018-07-28 09:54:07,683: Parsing materializations/incremental/incremental.sql
2018-07-28 09:54:07,725: Parsing materializations/seed/bigquery.sql
2018-07-28 09:54:07,736: Parsing materializations/seed/seed.sql
2018-07-28 09:54:07,809: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:54:07,848: Parsing materializations/table/table.sql
2018-07-28 09:54:07,890: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:54:07,910: Parsing materializations/view/view.sql
2018-07-28 09:54:07,945: Parsing schema_tests/accepted_values.sql
2018-07-28 09:54:07,951: Parsing schema_tests/not_null.sql
2018-07-28 09:54:07,956: Parsing schema_tests/relationships.sql
2018-07-28 09:54:07,962: Parsing schema_tests/unique.sql
2018-07-28 09:54:08,008: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:54:08,010: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:54:08,012: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:54:08,014: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:54:08,017: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:54:08,040: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:54:08,050: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:54:08,075: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:54:08,089: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:54:08,099: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:54:08,107: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:54:08,110: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:54:08,114: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:54:08,118: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:54:08,122: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:54:08,133: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:54:08,141: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:54:08,146: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:54:08,149: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:54:08,154: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:54:08,160: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:54:08,178: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:54:08,185: 
2018-07-28 09:54:08,195: Acquiring new bigquery connection "master".
2018-07-28 09:54:08,196: Opening a new connection (0 currently allocated)
2018-07-28 09:54:09,876: 09:54:09 | Concurrency: 4 threads (target='template')
2018-07-28 09:54:09,876: 09:54:09 | 
2018-07-28 09:54:09,978: 09:54:09 | 1 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:54:09,978: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:54:09,978: 09:54:09 | 2 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:54:09,978: 09:54:09 | 3 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:54:09,987: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:54:09,988: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:54:09,978: 09:54:09 | 4 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:54:09,988: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:54:09,994: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:54:09,995: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:54:09,996: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:54:10,001: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:54:10,008: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:54:10,008: Opening a new connection (1 currently allocated)
2018-07-28 09:54:10,010: Acquiring new bigquery connection "all_dates".
2018-07-28 09:54:10,017: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:54:10,021: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:54:10,022: Opening a new connection (2 currently allocated)
2018-07-28 09:54:10,024: Opening a new connection (3 currently allocated)
2018-07-28 09:54:10,027: Opening a new connection (4 currently allocated)
2018-07-28 09:54:10,308: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:54:10,309: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 09:54:10,332: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:54:10,334: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:54:10,347: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:54:10,359: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:54:10,359: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:54:10,360: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:54:11,728: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054fe630>]}
2018-07-28 09:54:12,202: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054fe390>]}
2018-07-28 09:54:12,205: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054a2898>]}
2018-07-28 09:54:12,535: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054a1518>]}
2018-07-28 09:54:12,536: 09:54:12 | 2 of 21 OK created table model template.all_dates.................... [OK in 1.74s]
2018-07-28 09:54:13,476: 09:54:13 | 4 of 21 OK created table model template.monthend_dates............... [OK in 2.21s]
2018-07-28 09:54:14,913: 09:54:14 | 1 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.23s]
2018-07-28 09:54:15,571: 09:54:15 | 3 of 21 OK created table model template.stores_proc.................. [OK in 2.55s]
2018-07-28 09:54:15,572: 09:54:15 | 5 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 09:54:15,573: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:54:15,572: 09:54:15 | 6 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 09:54:15,572: 09:54:15 | 7 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 09:54:15,581: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 09:54:15,582: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:54:15,582: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:54:15,582: Re-using an available connection from the pool.
2018-07-28 09:54:15,594: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 09:54:15,595: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:15,595: Re-using an available connection from the pool.
2018-07-28 09:54:15,601: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 09:54:15,604: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:15,604: Re-using an available connection from the pool.
2018-07-28 09:54:15,607: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:17,367: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:54:17,369: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:54:17,533: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:54:17,537: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 09:54:17,622: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:54:17,630: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:54:17,634: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:54:17,758: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:54:17,759: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 09:54:19,579: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1055be6d8>]}
2018-07-28 09:54:19,698: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054a2a90>]}
2018-07-28 09:54:19,949: 09:54:19 | 6 of 21 OK created table model template.shopify_refunds_proc......... [OK in 4.00s]
2018-07-28 09:54:20,261: 09:54:20 | 5 of 21 OK created table model template.shopify_discounts_proc....... [OK in 4.13s]
2018-07-28 09:54:22,120: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105433518>]}
2018-07-28 09:54:22,913: 09:54:22 | 7 of 21 OK created table model template.shopify_customers_proc....... [OK in 6.54s]
2018-07-28 09:54:22,914: 09:54:22 | 8 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 09:54:22,914: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:54:22,914: 09:54:22 | 9 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 09:54:22,933: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 09:54:22,915: 09:54:22 | 10 of 21 START table model template.shopify_products_proc............ [RUN]
2018-07-28 09:54:22,934: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:54:22,936: Acquiring new bigquery connection "ga_transactions".
2018-07-28 09:54:22,958: Re-using an available connection from the pool.
2018-07-28 09:54:22,958: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:22,961: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 09:54:22,961: Re-using an available connection from the pool.
2018-07-28 09:54:22,962: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:22,966: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:54:22,970: Acquiring new bigquery connection "agg_customers".
2018-07-28 09:54:22,970: Re-using an available connection from the pool.
2018-07-28 09:54:23,378: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:54:23,383: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 09:54:24,037: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:54:24,332: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:54:24,333: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 09:54:24,744: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:54:24,869: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:54:24,870: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 09:54:26,622: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1055be278>]}
2018-07-28 09:54:27,214: 09:54:27 | 10 of 21 OK created table model template.shopify_products_proc....... [OK in 3.69s]
2018-07-28 09:54:28,015: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054d6c50>]}
2018-07-28 09:54:28,249: 09:54:28 | 9 of 21 OK created table model template.agg_customers................ [OK in 5.08s]
2018-07-28 09:54:50,701: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054a1518>]}
2018-07-28 09:54:51,318: 09:54:51 | 8 of 21 OK created table model template.ga_transactions.............. [OK in 27.79s]
2018-07-28 09:54:51,319: 09:54:51 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 09:54:51,320: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:54:51,340: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 09:54:51,340: Re-using an available connection from the pool.
2018-07-28 09:54:51,340: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:54:52,591: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:54:52,746: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:54:52,747: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:55:01,286: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105433518>]}
2018-07-28 09:55:02,933: 09:55:02 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 9.97s]
2018-07-28 09:55:02,934: 09:55:02 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 09:55:02,934: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:55:02,942: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:55:02,946: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 09:55:02,946: Re-using an available connection from the pool.
2018-07-28 09:55:03,388: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:55:03,389: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 09:55:07,996: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054a1518>]}
2018-07-28 09:55:10,152: 09:55:10 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 5.06s]
2018-07-28 09:55:10,153: 09:55:10 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 09:55:10,153: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:55:10,161: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:55:10,163: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 09:55:10,163: Re-using an available connection from the pool.
2018-07-28 09:55:10,360: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:55:10,361: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 09:55:10,824: Bad request while running:
create dataset
2018-07-28 09:55:10,827: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/918efa30-6680-45c4-a5ef-ad7f4194f550?maxResults=0: Unrecognized name: quantity at [15:1]
2018-07-28 09:55:10,831: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3135e9e3-5883-4e98-bcb6-f7f2391f9667', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105552b70>]}
2018-07-28 09:55:12,248: 09:55:12 | 13 of 21 ERROR creating table model template.customers_by_transaction [ERROR in 0.68s]
2018-07-28 09:55:12,250: 09:55:12 | 14 of 21 SKIP relation template.agg_transactions..................... [SKIP]
2018-07-28 09:55:12,250: 09:55:12 | 15 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:55:12,251: 09:55:12 | 16 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:55:12,251: 09:55:12 | 17 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:55:12,252: 09:55:12 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:55:12,253: 09:55:12 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:55:12,253: 09:55:12 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:55:12,253: 09:55:12 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:55:12,334: 09:55:12 | 
2018-07-28 09:55:12,335: 09:55:12 | Finished running 21 table models in 64.15s.
2018-07-28 09:55:12,335: Connection 'master' was left open.
2018-07-28 09:55:12,335: 
2018-07-28 09:55:12,336: Completed with 1 errors:
2018-07-28 09:55:12,336: 
2018-07-28 09:55:12,336: Database Error in model customers_by_transaction (models/join/customers_by_transaction.sql)
2018-07-28 09:55:12,336:   Unrecognized name: quantity at [15:1]
2018-07-28 09:55:12,336:   compiled SQL at target/run/shopify_cohort_analysis/join/customers_by_transaction.sql
2018-07-28 09:55:12,337: 
Done. PASS=12 ERROR=1 SKIP=8 TOTAL=21
2018-07-28 09:55:12,338: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054694e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x105433160>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1054335c0>]}
2018-07-28 09:55:13,088: Flushing usage events
2018-07-28 09:55:13,308: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59885), raddr=('172.217.1.202', 443)>

2018-07-28 09:55:13,308: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59886), raddr=('172.217.1.202', 443)>

2018-07-28 09:55:13,310: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59881), raddr=('172.217.2.13', 443)>

2018-07-28 09:55:13,311: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59882), raddr=('172.217.2.13', 443)>

2018-07-28 09:55:13,311: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59884), raddr=('172.217.2.13', 443)>

2018-07-28 09:55:13,312: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59883), raddr=('172.217.2.13', 443)>

2018-07-28 09:55:13,312: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59880), raddr=('172.217.1.74', 443)>

2018-07-28 09:55:13,312: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59879), raddr=('172.217.2.13', 443)>

2018-07-28 09:55:13,312: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59887), raddr=('172.217.1.202', 443)>

2018-07-28 09:55:13,312: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59888), raddr=('172.217.1.202', 443)>

2018-07-28 09:56:18,425: Tracking: tracking
2018-07-28 09:56:18,428: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8a5668>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8a5c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8a5e10>]}
2018-07-28 09:56:20,381: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 09:56:20,416: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 09:56:20,423: Parsing get_column_values.sql
2018-07-28 09:56:20,448: Parsing get_url_parameter.sql
2018-07-28 09:56:20,458: Parsing split_part.sql
2018-07-28 09:56:20,466: Parsing table_exists.sql
2018-07-28 09:56:20,478: Parsing core.sql
2018-07-28 09:56:20,495: Parsing adapters/bigquery.sql
2018-07-28 09:56:20,506: Parsing adapters/common.sql
2018-07-28 09:56:20,540: Parsing adapters/redshift.sql
2018-07-28 09:56:20,566: Parsing adapters/snowflake.sql
2018-07-28 09:56:20,572: Parsing etc/bigquery.sql
2018-07-28 09:56:20,577: Parsing etc/datetime.sql
2018-07-28 09:56:20,612: Parsing etc/get_custom_schema.sql
2018-07-28 09:56:20,623: Parsing materializations/helpers.sql
2018-07-28 09:56:20,646: Parsing materializations/archive/archive.sql
2018-07-28 09:56:20,692: Parsing materializations/incremental/incremental.sql
2018-07-28 09:56:20,733: Parsing materializations/seed/bigquery.sql
2018-07-28 09:56:20,742: Parsing materializations/seed/seed.sql
2018-07-28 09:56:20,804: Parsing materializations/table/bigquery_table.sql
2018-07-28 09:56:20,844: Parsing materializations/table/table.sql
2018-07-28 09:56:20,873: Parsing materializations/view/bigquery_view.sql
2018-07-28 09:56:20,889: Parsing materializations/view/view.sql
2018-07-28 09:56:20,914: Parsing schema_tests/accepted_values.sql
2018-07-28 09:56:20,921: Parsing schema_tests/not_null.sql
2018-07-28 09:56:20,926: Parsing schema_tests/relationships.sql
2018-07-28 09:56:20,932: Parsing schema_tests/unique.sql
2018-07-28 09:56:20,972: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 09:56:20,975: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:56:20,979: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:56:20,983: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 09:56:20,986: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:56:20,996: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:56:21,005: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:56:21,012: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:56:21,023: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:56:21,032: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:56:21,040: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 09:56:21,042: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:56:21,047: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:56:21,052: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:56:21,055: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 09:56:21,065: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 09:56:21,068: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 09:56:21,073: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 09:56:21,081: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 09:56:21,086: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 09:56:21,092: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 09:56:21,116: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 09:56:21,125: 
2018-07-28 09:56:21,135: Acquiring new bigquery connection "master".
2018-07-28 09:56:21,136: Opening a new connection (0 currently allocated)
2018-07-28 09:56:22,024: 09:56:22 | Concurrency: 4 threads (target='template')
2018-07-28 09:56:22,024: 09:56:22 | 
2018-07-28 09:56:22,202: 09:56:22 | 1 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 09:56:22,202: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 09:56:22,208: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:56:22,202: 09:56:22 | 2 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 09:56:22,202: 09:56:22 | 3 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 09:56:22,208: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 09:56:22,202: 09:56:22 | 4 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 09:56:22,214: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 09:56:22,209: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 09:56:22,214: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:56:22,231: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:56:22,233: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:56:22,236: Acquiring new bigquery connection "stores_proc".
2018-07-28 09:56:22,236: Opening a new connection (1 currently allocated)
2018-07-28 09:56:22,239: Acquiring new bigquery connection "all_dates".
2018-07-28 09:56:22,241: Acquiring new bigquery connection "monthend_dates".
2018-07-28 09:56:22,245: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 09:56:22,247: Opening a new connection (2 currently allocated)
2018-07-28 09:56:22,252: Opening a new connection (3 currently allocated)
2018-07-28 09:56:22,254: Opening a new connection (4 currently allocated)
2018-07-28 09:56:22,593: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 09:56:22,593: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 09:56:22,622: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 09:56:22,633: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 09:56:22,641: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 09:56:22,642: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 09:56:22,643: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 09:56:22,645: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 09:56:24,244: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10caf5390>]}
2018-07-28 09:56:24,278: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca386d8>]}
2018-07-28 09:56:24,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca032e8>]}
2018-07-28 09:56:24,680: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c9e59e8>]}
2018-07-28 09:56:24,692: 09:56:24 | 3 of 21 OK created table model template.all_dates.................... [OK in 2.03s]
2018-07-28 09:56:24,942: 09:56:24 | 2 of 21 OK created table model template.monthend_dates............... [OK in 2.07s]
2018-07-28 09:56:25,190: 09:56:25 | 1 of 21 OK created table model template.stores_proc.................. [OK in 2.08s]
2018-07-28 09:56:27,648: 09:56:27 | 4 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.47s]
2018-07-28 09:56:27,651: 09:56:27 | 5 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 09:56:27,651: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 09:56:27,666: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 09:56:27,657: 09:56:27 | 6 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 09:56:27,666: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 09:56:27,657: 09:56:27 | 7 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 09:56:27,667: Re-using an available connection from the pool.
2018-07-28 09:56:27,669: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 09:56:27,669: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:56:27,684: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 09:56:27,703: Re-using an available connection from the pool.
2018-07-28 09:56:27,703: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:56:27,701: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 09:56:27,723: Re-using an available connection from the pool.
2018-07-28 09:56:27,724: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:56:29,814: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:56:29,817: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:56:30,110: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 09:56:30,123: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:56:30,143: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 09:56:30,143: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:56:30,144: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 09:56:30,448: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 09:56:30,450: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 09:56:33,204: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca32860>]}
2018-07-28 09:56:33,444: 09:56:33 | 7 of 21 OK created table model template.shopify_refunds_proc......... [OK in 5.53s]
2018-07-28 09:56:33,562: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca08fd0>]}
2018-07-28 09:56:33,867: 09:56:33 | 5 of 21 OK created table model template.shopify_discounts_proc....... [OK in 5.91s]
2018-07-28 09:56:35,498: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca384a8>]}
2018-07-28 09:56:35,764: 09:56:35 | 6 of 21 OK created table model template.shopify_customers_proc....... [OK in 7.83s]
2018-07-28 09:56:35,765: 09:56:35 | 8 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 09:56:35,765: 09:56:35 | 9 of 21 START table model template.shopify_products_proc............. [RUN]
2018-07-28 09:56:35,766: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 09:56:35,766: 09:56:35 | 10 of 21 START table model template.ga_transactions.................. [RUN]
2018-07-28 09:56:35,766: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 09:56:35,769: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 09:56:35,781: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:56:35,796: Acquiring new bigquery connection "ga_transactions".
2018-07-28 09:56:35,798: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 09:56:35,798: Re-using an available connection from the pool.
2018-07-28 09:56:35,799: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:56:35,800: Acquiring new bigquery connection "agg_customers".
2018-07-28 09:56:35,801: Re-using an available connection from the pool.
2018-07-28 09:56:35,801: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:56:35,803: Re-using an available connection from the pool.
2018-07-28 09:56:35,905: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 09:56:35,906: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 09:56:36,350: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:56:36,484: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 09:56:36,485: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 09:56:37,580: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:56:37,709: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 09:56:37,710: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 09:56:39,947: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca38780>]}
2018-07-28 09:56:41,089: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1095f17b8>]}
2018-07-28 09:56:41,742: 09:56:41 | 9 of 21 OK created table model template.shopify_products_proc........ [OK in 4.18s]
2018-07-28 09:56:42,047: 09:56:42 | 8 of 21 OK created table model template.agg_customers................ [OK in 5.32s]
2018-07-28 09:57:02,062: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10cacaf28>]}
2018-07-28 09:57:02,357: 09:57:02 | 10 of 21 OK created table model template.ga_transactions............. [OK in 26.29s]
2018-07-28 09:57:02,360: 09:57:02 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 09:57:02,360: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 09:57:02,392: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 09:57:02,392: Re-using an available connection from the pool.
2018-07-28 09:57:02,393: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 09:57:03,010: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:57:03,203: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 09:57:03,204: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 09:57:11,432: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca384a8>]}
2018-07-28 09:57:11,671: 09:57:11 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 9.07s]
2018-07-28 09:57:11,672: 09:57:11 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 09:57:11,672: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 09:57:11,683: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:57:11,684: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 09:57:11,685: Re-using an available connection from the pool.
2018-07-28 09:57:11,847: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 09:57:11,847: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 09:57:16,709: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca38780>]}
2018-07-28 09:57:18,608: 09:57:18 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 5.04s]
2018-07-28 09:57:18,608: 09:57:18 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 09:57:18,609: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 09:57:18,616: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:57:18,619: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 09:57:18,620: Re-using an available connection from the pool.
2018-07-28 09:57:18,989: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 09:57:18,990: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 09:57:23,173: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca384a8>]}
2018-07-28 09:57:24,526: 09:57:24 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 4.56s]
2018-07-28 09:57:24,527: 09:57:24 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 09:57:24,527: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 09:57:24,536: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 09:57:24,541: Acquiring new bigquery connection "agg_transactions".
2018-07-28 09:57:24,541: Re-using an available connection from the pool.
2018-07-28 09:57:24,647: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 09:57:24,647: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	last_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 09:57:25,075: Bad request while running:
create dataset
2018-07-28 09:57:25,075: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/9ccca05f-d012-4cc6-b548-192fdfe15fce?maxResults=0: Unrecognized name: last_order_date; Did you mean first_order_date? at [25:9]
2018-07-28 09:57:25,076: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'df9fa6a5-92c3-41f9-b6b4-f437423c63cc', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca2c4a8>]}
2018-07-28 09:57:25,345: 09:57:25 | 14 of 21 ERROR creating table model template.agg_transactions........ [ERROR in 0.55s]
2018-07-28 09:57:25,348: 09:57:25 | 15 of 21 SKIP relation template.customers_proc_qoq................... [SKIP]
2018-07-28 09:57:25,348: 09:57:25 | 16 of 21 SKIP relation template.customers_proc_yoy................... [SKIP]
2018-07-28 09:57:25,348: 09:57:25 | 17 of 21 SKIP relation template.monthly_cohort_stats................. [SKIP]
2018-07-28 09:57:25,349: 09:57:25 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 09:57:25,350: 09:57:25 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 09:57:25,350: 09:57:25 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 09:57:25,351: 09:57:25 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 09:57:25,374: 09:57:25 | 
2018-07-28 09:57:25,374: 09:57:25 | Finished running 21 table models in 64.25s.
2018-07-28 09:57:25,375: Connection 'master' was left open.
2018-07-28 09:57:25,375: 
2018-07-28 09:57:25,376: Completed with 1 errors:
2018-07-28 09:57:25,376: 
2018-07-28 09:57:25,377: Database Error in model agg_transactions (models/join/agg_transactions.sql)
2018-07-28 09:57:25,377:   Unrecognized name: last_order_date; Did you mean first_order_date? at [25:9]
2018-07-28 09:57:25,377:   compiled SQL at target/run/shopify_cohort_analysis/join/agg_transactions.sql
2018-07-28 09:57:25,377: 
Done. PASS=13 ERROR=1 SKIP=7 TOTAL=21
2018-07-28 09:57:25,379: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c8a5668>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c9a64e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ca38898>]}
2018-07-28 09:57:25,612: Flushing usage events
2018-07-28 09:57:26,064: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59930), raddr=('172.217.1.74', 443)>

2018-07-28 09:57:26,065: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59931), raddr=('172.217.1.74', 443)>

2018-07-28 09:57:26,065: sys:1: ResourceWarning: unclosed <socket.socket fd=23, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59932), raddr=('172.217.1.74', 443)>

2018-07-28 09:57:26,065: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59933), raddr=('172.217.1.74', 443)>

2018-07-28 09:57:26,066: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59927), raddr=('172.217.2.13', 443)>

2018-07-28 09:57:26,066: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59929), raddr=('172.217.2.13', 443)>

2018-07-28 09:57:26,067: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59926), raddr=('172.217.2.13', 443)>

2018-07-28 09:57:26,067: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59928), raddr=('172.217.2.13', 443)>

2018-07-28 09:57:26,068: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59925), raddr=('172.217.1.74', 443)>

2018-07-28 09:57:26,068: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 59924), raddr=('172.217.2.13', 443)>

2018-07-28 10:03:56,527: Tracking: tracking
2018-07-28 10:03:56,544: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109048ac8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109048be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109048438>]}
2018-07-28 10:03:57,846: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 10:03:57,881: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 10:03:57,887: Parsing get_column_values.sql
2018-07-28 10:03:57,904: Parsing get_url_parameter.sql
2018-07-28 10:03:57,910: Parsing split_part.sql
2018-07-28 10:03:57,917: Parsing table_exists.sql
2018-07-28 10:03:57,929: Parsing core.sql
2018-07-28 10:03:57,945: Parsing adapters/bigquery.sql
2018-07-28 10:03:57,955: Parsing adapters/common.sql
2018-07-28 10:03:57,982: Parsing adapters/redshift.sql
2018-07-28 10:03:58,014: Parsing adapters/snowflake.sql
2018-07-28 10:03:58,020: Parsing etc/bigquery.sql
2018-07-28 10:03:58,025: Parsing etc/datetime.sql
2018-07-28 10:03:58,086: Parsing etc/get_custom_schema.sql
2018-07-28 10:03:58,095: Parsing materializations/helpers.sql
2018-07-28 10:03:58,116: Parsing materializations/archive/archive.sql
2018-07-28 10:03:58,167: Parsing materializations/incremental/incremental.sql
2018-07-28 10:03:58,215: Parsing materializations/seed/bigquery.sql
2018-07-28 10:03:58,224: Parsing materializations/seed/seed.sql
2018-07-28 10:03:58,282: Parsing materializations/table/bigquery_table.sql
2018-07-28 10:03:58,317: Parsing materializations/table/table.sql
2018-07-28 10:03:58,348: Parsing materializations/view/bigquery_view.sql
2018-07-28 10:03:58,363: Parsing materializations/view/view.sql
2018-07-28 10:03:58,386: Parsing schema_tests/accepted_values.sql
2018-07-28 10:03:58,405: Parsing schema_tests/not_null.sql
2018-07-28 10:03:58,411: Parsing schema_tests/relationships.sql
2018-07-28 10:03:58,418: Parsing schema_tests/unique.sql
2018-07-28 10:03:58,462: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 10:03:58,466: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:03:58,470: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:03:58,474: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 10:03:58,477: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:03:58,492: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:03:58,504: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:03:58,519: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:03:58,534: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:03:58,546: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:03:58,562: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 10:03:58,566: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:03:58,573: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:03:58,577: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:03:58,581: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:03:58,592: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 10:03:58,596: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:03:58,602: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:03:58,611: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:03:58,616: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:03:58,622: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:03:58,648: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 10:03:58,655: 
2018-07-28 10:03:58,667: Acquiring new bigquery connection "master".
2018-07-28 10:03:58,667: Opening a new connection (0 currently allocated)
2018-07-28 10:04:03,593: 10:04:03 | Concurrency: 4 threads (target='template')
2018-07-28 10:04:03,593: 10:04:03 | 
2018-07-28 10:04:03,676: 10:04:03 | 1 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 10:04:03,677: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 10:04:03,677: 10:04:03 | 2 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 10:04:03,684: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:04:03,677: 10:04:03 | 3 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 10:04:03,677: 10:04:03 | 4 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 10:04:03,684: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:04:03,685: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:04:03,685: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 10:04:03,691: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:04:03,695: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:04:03,706: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:04:03,709: Acquiring new bigquery connection "monthend_dates".
2018-07-28 10:04:03,712: Acquiring new bigquery connection "all_dates".
2018-07-28 10:04:03,712: Opening a new connection (1 currently allocated)
2018-07-28 10:04:03,715: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 10:04:03,718: Opening a new connection (2 currently allocated)
2018-07-28 10:04:03,720: Acquiring new bigquery connection "stores_proc".
2018-07-28 10:04:03,727: Opening a new connection (3 currently allocated)
2018-07-28 10:04:03,734: Opening a new connection (4 currently allocated)
2018-07-28 10:04:04,505: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:04:04,525: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:04:04,535: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:04:04,543: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 10:04:04,543: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 10:04:04,552: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 10:04:04,556: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:04:04,578: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 10:04:06,375: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091d9278>]}
2018-07-28 10:04:06,660: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091d9780>]}
2018-07-28 10:04:06,759: 10:04:06 | 3 of 21 OK created table model template.monthend_dates............... [OK in 2.69s]
2018-07-28 10:04:07,193: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10914a588>]}
2018-07-28 10:04:07,195: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10918d198>]}
2018-07-28 10:04:07,243: 10:04:07 | 1 of 21 OK created table model template.all_dates.................... [OK in 2.98s]
2018-07-28 10:04:07,458: 10:04:07 | 2 of 21 OK created table model template.mappings_ga_proc............. [OK in 3.51s]
2018-07-28 10:04:07,663: 10:04:07 | 4 of 21 OK created table model template.stores_proc.................. [OK in 3.51s]
2018-07-28 10:04:07,664: 10:04:07 | 5 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 10:04:07,664: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:04:07,664: 10:04:07 | 6 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 10:04:07,675: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:04:07,690: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 10:04:07,664: 10:04:07 | 7 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 10:04:07,692: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 10:04:07,693: Re-using an available connection from the pool.
2018-07-28 10:04:07,693: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:04:07,693: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:07,693: Re-using an available connection from the pool.
2018-07-28 10:04:07,756: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:07,766: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 10:04:07,766: Re-using an available connection from the pool.
2018-07-28 10:04:07,766: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:09,883: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:04:09,988: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:04:10,191: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:04:10,194: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:04:10,195: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 10:04:10,195: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 10:04:10,494: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:04:11,314: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:04:11,315: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:04:13,103: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10768c048>]}
2018-07-28 10:04:13,116: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109216320>]}
2018-07-28 10:04:13,858: 10:04:13 | 5 of 21 OK created table model template.shopify_discounts_proc....... [OK in 5.44s]
2018-07-28 10:04:14,136: 10:04:14 | 6 of 21 OK created table model template.shopify_refunds_proc......... [OK in 5.44s]
2018-07-28 10:04:16,203: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092d0668>]}
2018-07-28 10:04:16,412: 10:04:16 | 7 of 21 OK created table model template.shopify_customers_proc....... [OK in 8.51s]
2018-07-28 10:04:16,413: 10:04:16 | 8 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 10:04:16,413: 10:04:16 | 9 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 10:04:16,413: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:04:16,413: 10:04:16 | 10 of 21 START table model template.shopify_products_proc............ [RUN]
2018-07-28 10:04:16,414: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 10:04:16,415: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:04:16,420: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:04:16,435: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 10:04:16,440: Acquiring new bigquery connection "ga_transactions".
2018-07-28 10:04:16,440: Re-using an available connection from the pool.
2018-07-28 10:04:16,441: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:16,441: Re-using an available connection from the pool.
2018-07-28 10:04:16,443: Acquiring new bigquery connection "agg_customers".
2018-07-28 10:04:16,443: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:16,443: Re-using an available connection from the pool.
2018-07-28 10:04:16,635: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:04:16,636: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 10:04:17,442: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:04:17,683: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:04:17,685: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 10:04:18,618: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:04:18,820: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:04:18,821: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 10:04:19,940: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10928d9e8>]}
2018-07-28 10:04:20,867: 10:04:20 | 10 of 21 OK created table model template.shopify_products_proc....... [OK in 3.52s]
2018-07-28 10:04:21,044: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109175160>]}
2018-07-28 10:04:21,816: 10:04:21 | 9 of 21 OK created table model template.agg_customers................ [OK in 4.63s]
2018-07-28 10:04:44,239: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10918d198>]}
2018-07-28 10:04:44,497: 10:04:44 | 8 of 21 OK created table model template.ga_transactions.............. [OK in 27.82s]
2018-07-28 10:04:44,498: 10:04:44 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 10:04:44,499: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:04:44,532: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 10:04:44,532: Re-using an available connection from the pool.
2018-07-28 10:04:44,532: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:04:46,788: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:04:47,206: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:04:47,206: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:04:57,589: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092d0668>]}
2018-07-28 10:04:59,652: 10:04:59 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 13.09s]
2018-07-28 10:04:59,653: 10:04:59 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 10:04:59,654: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:04:59,674: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:04:59,677: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 10:04:59,677: Re-using an available connection from the pool.
2018-07-28 10:05:00,445: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:05:00,446: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 10:05:04,346: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10918d198>]}
2018-07-28 10:05:04,910: 10:05:04 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 4.69s]
2018-07-28 10:05:04,911: 10:05:04 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 10:05:04,911: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:05:04,924: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:05:04,928: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 10:05:04,928: Re-using an available connection from the pool.
2018-07-28 10:05:05,149: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:05:05,149: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 10:05:08,863: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1092d0668>]}
2018-07-28 10:05:09,626: 10:05:09 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 3.95s]
2018-07-28 10:05:09,627: 10:05:09 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 10:05:09,627: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:05:09,635: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:05:09,639: Acquiring new bigquery connection "agg_transactions".
2018-07-28 10:05:09,639: Re-using an available connection from the pool.
2018-07-28 10:05:09,816: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:05:09,816: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	recent_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 10:05:20,311: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10918d198>]}
2018-07-28 10:05:20,627: 10:05:20 | 14 of 21 OK created table model template.agg_transactions............ [OK in 10.68s]
2018-07-28 10:05:20,627: 10:05:20 | 15 of 21 START table model template.customers_proc_qoq............... [RUN]
2018-07-28 10:05:20,628: Compiling model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:05:20,627: 10:05:20 | 16 of 21 START table model template.monthly_cohort_stats............. [RUN]
2018-07-28 10:05:20,637: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:05:20,637: Compiling model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:05:20,628: 10:05:20 | 17 of 21 START table model template.customers_proc_yoy............... [RUN]
2018-07-28 10:05:20,640: Compiling model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:05:20,656: Writing injected SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:05:20,660: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:05:20,665: Acquiring new bigquery connection "monthly_cohort_stats".
2018-07-28 10:05:20,665: Re-using an available connection from the pool.
2018-07-28 10:05:20,667: Acquiring new bigquery connection "customers_proc_qoq".
2018-07-28 10:05:20,667: Re-using an available connection from the pool.
2018-07-28 10:05:20,669: Acquiring new bigquery connection "customers_proc_yoy".
2018-07-28 10:05:20,669: Re-using an available connection from the pool.
2018-07-28 10:05:20,889: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:05:20,897: Fetching data for query customers_proc_yoy:
create or replace table `template`.`customers_proc_yoy`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  recent_order_date,
  unix_date(recent_order_date) recent_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 365 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range  

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 365 window_end_unix_date, 
    unix_date_in_range - 730 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
    GROUP BY store, customer_id, date, unix_date_in_range    

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:05:20,912: Writing runtime SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:05:20,924: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:05:20,926: Fetching data for query customers_proc_qoq:
create or replace table `template`.`customers_proc_qoq`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  recent_order_date,
  unix_date(recent_order_date) recent_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 90 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 90 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range  

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 90 window_end_unix_date, 
    unix_date_in_range - 180 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 180 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 90 )
    GROUP BY store, customer_id, date, unix_date_in_range    

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:05:20,931: Fetching data for query monthly_cohort_stats:
create or replace table `template`.`monthly_cohort_stats`
  
  as (
    WITH transactions AS (

  SELECT 
  store, 
  order_number,
  order_date,
  first_order_month,
  unix_date(order_date) d, 
  customer_id, 
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (

  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT 
date_in_range month,
unix_date_in_range, 
unix_date_in_range_bom, 
store, 
order_type,
first_order_channel,
first_order_platform,
first_order_month,
channel,
platform,
url,
campaign,
count(distinct(customer_id)) buyers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN transactions
ON transactions.d >= daterange.unix_date_in_range_bom 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_bom, store, order_type, 
first_order_channel, first_order_platform, first_order_month, channel, platform, url, campaign
  );

    
2018-07-28 10:05:21,739: Bad request while running:
create dataset
2018-07-28 10:05:21,739: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/a997efa2-eb4d-409e-8113-a1fa4eea8e9e?maxResults=0: Unrecognized name: recent_order_date; Did you mean first_order_date? at [13:3]
2018-07-28 10:05:21,740: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109216048>]}
2018-07-28 10:05:21,741: Bad request while running:
create dataset
2018-07-28 10:05:21,741: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/fa84b87e-311f-4931-ba2b-bc1b269c2ad4?maxResults=0: Unrecognized name: recent_order_date; Did you mean first_order_date? at [13:3]
2018-07-28 10:05:21,741: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10768c048>]}
2018-07-28 10:05:21,741: Bad request while running:
create dataset
2018-07-28 10:05:21,742: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/05b12655-e4ff-470d-ba22-1ffa88eac1a3?maxResults=0: Unrecognized name: order_type; Did you mean order_date? at [35:1]
2018-07-28 10:05:21,742: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f3e3b7aa-32e4-4bcd-a1a5-7f0f8fcf7180', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091d9978>]}
2018-07-28 10:05:21,964: 10:05:21 | 15 of 21 ERROR creating table model template.customers_proc_qoq...... [ERROR in 1.11s]
2018-07-28 10:05:22,247: 10:05:22 | 17 of 21 ERROR creating table model template.customers_proc_yoy...... [ERROR in 1.10s]
2018-07-28 10:05:22,722: 10:05:22 | 16 of 21 ERROR creating table model template.monthly_cohort_stats.... [ERROR in 1.11s]
2018-07-28 10:05:22,723: 10:05:22 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 10:05:22,724: 10:05:22 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 10:05:22,725: 10:05:22 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 10:05:22,726: 10:05:22 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 10:05:22,759: 10:05:22 | 
2018-07-28 10:05:22,759: 10:05:22 | Finished running 21 table models in 84.10s.
2018-07-28 10:05:22,760: Connection 'master' was left open.
2018-07-28 10:05:22,760: 
2018-07-28 10:05:22,760: Completed with 3 errors:
2018-07-28 10:05:22,761: 
2018-07-28 10:05:22,761: Database Error in model customers_proc_qoq (models/math/buyer-segmentation/customers_proc_qoq.sql)
2018-07-28 10:05:22,761:   Unrecognized name: recent_order_date; Did you mean first_order_date? at [13:3]
2018-07-28 10:05:22,761:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/customers_proc_qoq.sql
2018-07-28 10:05:22,761: 
2018-07-28 10:05:22,761: Database Error in model customers_proc_yoy (models/math/buyer-segmentation/customers_proc_yoy.sql)
2018-07-28 10:05:22,761:   Unrecognized name: recent_order_date; Did you mean first_order_date? at [13:3]
2018-07-28 10:05:22,761:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/customers_proc_yoy.sql
2018-07-28 10:05:22,762: 
2018-07-28 10:05:22,762: Database Error in model monthly_cohort_stats (models/math/cohort-analysis/monthly_cohort_stats.sql)
2018-07-28 10:05:22,762:   Unrecognized name: order_type; Did you mean order_date? at [35:1]
2018-07-28 10:05:22,762:   compiled SQL at target/run/shopify_cohort_analysis/math/cohort-analysis/monthly_cohort_stats.sql
2018-07-28 10:05:22,762: 
Done. PASS=14 ERROR=3 SKIP=4 TOTAL=21
2018-07-28 10:05:22,764: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109048ac8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091d9c88>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1091d98d0>]}
2018-07-28 10:05:23,032: Flushing usage events
2018-07-28 10:05:23,250: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60219), raddr=('172.217.15.202', 443)>

2018-07-28 10:05:23,250: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60220), raddr=('172.217.15.202', 443)>

2018-07-28 10:05:23,251: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60215), raddr=('172.217.2.13', 443)>

2018-07-28 10:05:23,251: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60216), raddr=('172.217.2.13', 443)>

2018-07-28 10:05:23,252: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60217), raddr=('172.217.2.13', 443)>

2018-07-28 10:05:23,252: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60218), raddr=('172.217.2.13', 443)>

2018-07-28 10:05:23,254: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60214), raddr=('216.58.192.74', 443)>

2018-07-28 10:05:23,254: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60213), raddr=('172.217.2.13', 443)>

2018-07-28 10:05:23,256: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60221), raddr=('172.217.15.202', 443)>

2018-07-28 10:05:23,257: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60222), raddr=('172.217.15.202', 443)>

2018-07-28 10:10:15,654: Tracking: tracking
2018-07-28 10:10:15,659: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1075164e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107516c50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107516c88>]}
2018-07-28 10:10:17,560: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 10:10:17,591: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 10:10:17,598: Parsing get_column_values.sql
2018-07-28 10:10:17,619: Parsing get_url_parameter.sql
2018-07-28 10:10:17,625: Parsing split_part.sql
2018-07-28 10:10:17,634: Parsing table_exists.sql
2018-07-28 10:10:17,645: Parsing core.sql
2018-07-28 10:10:17,661: Parsing adapters/bigquery.sql
2018-07-28 10:10:17,670: Parsing adapters/common.sql
2018-07-28 10:10:17,704: Parsing adapters/redshift.sql
2018-07-28 10:10:17,724: Parsing adapters/snowflake.sql
2018-07-28 10:10:17,731: Parsing etc/bigquery.sql
2018-07-28 10:10:17,736: Parsing etc/datetime.sql
2018-07-28 10:10:17,768: Parsing etc/get_custom_schema.sql
2018-07-28 10:10:17,781: Parsing materializations/helpers.sql
2018-07-28 10:10:17,804: Parsing materializations/archive/archive.sql
2018-07-28 10:10:17,851: Parsing materializations/incremental/incremental.sql
2018-07-28 10:10:17,889: Parsing materializations/seed/bigquery.sql
2018-07-28 10:10:17,901: Parsing materializations/seed/seed.sql
2018-07-28 10:10:17,956: Parsing materializations/table/bigquery_table.sql
2018-07-28 10:10:17,987: Parsing materializations/table/table.sql
2018-07-28 10:10:18,017: Parsing materializations/view/bigquery_view.sql
2018-07-28 10:10:18,034: Parsing materializations/view/view.sql
2018-07-28 10:10:18,059: Parsing schema_tests/accepted_values.sql
2018-07-28 10:10:18,069: Parsing schema_tests/not_null.sql
2018-07-28 10:10:18,075: Parsing schema_tests/relationships.sql
2018-07-28 10:10:18,080: Parsing schema_tests/unique.sql
2018-07-28 10:10:18,122: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 10:10:18,127: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:10:18,130: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:10:18,133: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 10:10:18,135: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:10:18,147: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:10:18,157: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:10:18,163: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:10:18,175: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:10:18,185: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:10:18,191: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 10:10:18,194: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:10:18,197: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:10:18,200: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:10:18,204: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:10:18,210: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 10:10:18,214: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:10:18,217: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:10:18,225: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:10:18,229: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:10:18,234: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:10:18,254: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 10:10:18,259: 
2018-07-28 10:10:18,266: Acquiring new bigquery connection "master".
2018-07-28 10:10:18,266: Opening a new connection (0 currently allocated)
2018-07-28 10:10:21,130: 10:10:21 | Concurrency: 4 threads (target='template')
2018-07-28 10:10:21,130: 10:10:21 | 
2018-07-28 10:10:21,185: 10:10:21 | 1 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 10:10:21,185: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 10:10:21,190: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:10:21,185: 10:10:21 | 2 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 10:10:21,190: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:10:21,195: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:10:21,185: 10:10:21 | 3 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 10:10:21,196: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:10:21,200: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:10:21,185: 10:10:21 | 4 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 10:10:21,201: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 10:10:21,203: Acquiring new bigquery connection "stores_proc".
2018-07-28 10:10:21,209: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:10:21,210: Opening a new connection (1 currently allocated)
2018-07-28 10:10:21,211: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 10:10:21,213: Acquiring new bigquery connection "monthend_dates".
2018-07-28 10:10:21,215: Acquiring new bigquery connection "all_dates".
2018-07-28 10:10:21,216: Opening a new connection (2 currently allocated)
2018-07-28 10:10:21,219: Opening a new connection (3 currently allocated)
2018-07-28 10:10:21,225: Opening a new connection (4 currently allocated)
2018-07-28 10:10:23,969: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:10:23,971: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 10:10:24,023: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:10:24,045: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 10:10:24,047: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:10:24,052: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:10:24,055: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 10:10:24,058: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 10:10:25,429: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107659dd8>]}
2018-07-28 10:10:25,647: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107659208>]}
2018-07-28 10:10:25,664: 10:10:25 | 4 of 21 OK created table model template.all_dates.................... [OK in 4.23s]
2018-07-28 10:10:25,712: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107659908>]}
2018-07-28 10:10:25,906: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107659668>]}
2018-07-28 10:10:25,927: 10:10:25 | 3 of 21 OK created table model template.monthend_dates............... [OK in 4.45s]
2018-07-28 10:10:26,432: 10:10:26 | 1 of 21 OK created table model template.stores_proc.................. [OK in 4.53s]
2018-07-28 10:10:26,748: 10:10:26 | 2 of 21 OK created table model template.mappings_ga_proc............. [OK in 4.72s]
2018-07-28 10:10:26,749: 10:10:26 | 5 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 10:10:26,749: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:10:26,749: 10:10:26 | 6 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 10:10:26,760: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:10:26,774: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 10:10:26,779: Re-using an available connection from the pool.
2018-07-28 10:10:26,779: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:10:26,778: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 10:10:26,782: Re-using an available connection from the pool.
2018-07-28 10:10:26,783: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:10:26,749: 10:10:26 | 7 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 10:10:26,787: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:10:26,799: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 10:10:26,800: Re-using an available connection from the pool.
2018-07-28 10:10:26,801: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:10:28,283: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:10:28,430: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:10:28,436: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 10:10:28,474: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:10:28,771: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:10:28,781: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 10:10:28,993: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:10:29,218: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:10:29,218: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:10:31,188: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107676fd0>]}
2018-07-28 10:10:31,191: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107732c50>]}
2018-07-28 10:10:32,153: 10:10:32 | 7 of 21 OK created table model template.shopify_refunds_proc......... [OK in 4.40s]
2018-07-28 10:10:33,235: 10:10:33 | 6 of 21 OK created table model template.shopify_discounts_proc....... [OK in 4.43s]
2018-07-28 10:10:33,791: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107651358>]}
2018-07-28 10:10:34,058: 10:10:34 | 5 of 21 OK created table model template.shopify_customers_proc....... [OK in 7.04s]
2018-07-28 10:10:34,060: 10:10:34 | 8 of 21 START table model template.shopify_products_proc............. [RUN]
2018-07-28 10:10:34,061: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:10:34,077: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 10:10:34,077: Re-using an available connection from the pool.
2018-07-28 10:10:34,067: 10:10:34 | 9 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 10:10:34,077: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:10:34,068: 10:10:34 | 10 of 21 START table model template.agg_customers.................... [RUN]
2018-07-28 10:10:34,077: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:10:34,078: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 10:10:34,098: Acquiring new bigquery connection "ga_transactions".
2018-07-28 10:10:34,101: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:10:34,101: Re-using an available connection from the pool.
2018-07-28 10:10:34,102: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:10:34,103: Acquiring new bigquery connection "agg_customers".
2018-07-28 10:10:34,103: Re-using an available connection from the pool.
2018-07-28 10:10:34,201: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:10:34,202: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 10:10:34,830: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:10:35,057: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:10:35,057: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 10:10:35,756: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:10:35,955: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:10:35,956: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 10:10:37,299: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1056a73c8>]}
2018-07-28 10:10:37,529: 10:10:37 | 8 of 21 OK created table model template.shopify_products_proc........ [OK in 3.24s]
2018-07-28 10:10:38,530: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10426a048>]}
2018-07-28 10:10:38,769: 10:10:38 | 10 of 21 OK created table model template.agg_customers............... [OK in 4.45s]
2018-07-28 10:11:01,028: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104266978>]}
2018-07-28 10:11:01,983: 10:11:01 | 9 of 21 OK created table model template.ga_transactions.............. [OK in 26.95s]
2018-07-28 10:11:01,984: 10:11:01 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 10:11:01,985: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:11:02,008: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 10:11:02,008: Re-using an available connection from the pool.
2018-07-28 10:11:02,008: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:11:02,897: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:11:03,005: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:11:03,006: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:11:11,627: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10774cef0>]}
2018-07-28 10:11:12,432: 10:11:12 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 9.64s]
2018-07-28 10:11:12,433: 10:11:12 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 10:11:12,434: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:11:12,447: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:11:12,452: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 10:11:12,452: Re-using an available connection from the pool.
2018-07-28 10:11:12,590: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:11:12,591: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 10:11:16,698: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10776b9b0>]}
2018-07-28 10:11:17,992: 10:11:17 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 4.26s]
2018-07-28 10:11:17,994: 10:11:17 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 10:11:17,995: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:11:18,003: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:11:18,004: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 10:11:18,004: Re-using an available connection from the pool.
2018-07-28 10:11:18,114: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:11:18,115: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 10:11:22,174: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10768b9b0>]}
2018-07-28 10:11:22,426: 10:11:22 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 4.18s]
2018-07-28 10:11:22,427: 10:11:22 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 10:11:22,428: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:11:22,453: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:11:22,456: Acquiring new bigquery connection "agg_transactions".
2018-07-28 10:11:22,456: Re-using an available connection from the pool.
2018-07-28 10:11:22,576: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:11:22,578: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	recent_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 10:11:31,871: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1042614e0>]}
2018-07-28 10:11:32,120: 10:11:32 | 14 of 21 OK created table model template.agg_transactions............ [OK in 9.44s]
2018-07-28 10:11:32,122: 10:11:32 | 15 of 21 START table model template.customers_proc_qoq............... [RUN]
2018-07-28 10:11:32,122: Compiling model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:11:32,122: 10:11:32 | 16 of 21 START table model template.monthly_cohort_stats............. [RUN]
2018-07-28 10:11:32,140: Compiling model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:11:32,122: 10:11:32 | 17 of 21 START table model template.customers_proc_yoy............... [RUN]
2018-07-28 10:11:32,156: Compiling model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:11:32,148: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:11:32,174: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:11:32,177: Writing injected SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:11:32,180: Acquiring new bigquery connection "customers_proc_qoq".
2018-07-28 10:11:32,181: Re-using an available connection from the pool.
2018-07-28 10:11:32,183: Acquiring new bigquery connection "monthly_cohort_stats".
2018-07-28 10:11:32,183: Re-using an available connection from the pool.
2018-07-28 10:11:32,198: Acquiring new bigquery connection "customers_proc_yoy".
2018-07-28 10:11:32,198: Re-using an available connection from the pool.
2018-07-28 10:11:32,311: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:11:32,311: Fetching data for query customers_proc_yoy:
create or replace table `template`.`customers_proc_yoy`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 365 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range  

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 365 window_end_unix_date, 
    unix_date_in_range - 730 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
    GROUP BY store, customer_id, date, unix_date_in_range    

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:11:32,326: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:11:32,348: Writing runtime SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:11:32,350: Fetching data for query monthly_cohort_stats:
create or replace table `template`.`monthly_cohort_stats`
  
  as (
    WITH transactions AS (

  SELECT 
  store, 
  order_number,
  order_date,
  order_type,
  first_order_month,
  unix_date(order_date) d, 
  customer_id, 
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (

  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT 
date_in_range month,
unix_date_in_range, 
unix_date_in_range_bom, 
store, 
order_type,
first_order_channel,
first_order_platform,
first_order_month,
channel,
platform,
url,
campaign,
count(distinct(customer_id)) buyers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN transactions
ON transactions.d >= daterange.unix_date_in_range_bom 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_bom, store, order_type, 
first_order_channel, first_order_platform, first_order_month, channel, platform, url, campaign
  );

    
2018-07-28 10:11:32,356: Fetching data for query customers_proc_qoq:
create or replace table `template`.`customers_proc_qoq`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 90 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 90 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range  

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 90 window_end_unix_date, 
    unix_date_in_range - 180 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 180 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 90 )
    GROUP BY store, customer_id, date, unix_date_in_range    

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:11:32,676: Bad request while running:
create dataset
2018-07-28 10:11:32,676: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/ce47b20f-8ffa-41aa-956b-44864cb2f989?maxResults=0: SELECT list expression references column first_order_unix_date which is neither grouped nor aggregated at [73:5]
2018-07-28 10:11:32,676: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107665588>]}
2018-07-28 10:11:32,704: Bad request while running:
create dataset
2018-07-28 10:11:32,705: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/01a6b7fc-5132-42f6-ab38-7140ffc731ff?maxResults=0: Unrecognized name: date at [52:10]
2018-07-28 10:11:32,705: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1076865c0>]}
2018-07-28 10:11:32,903: 10:11:32 | 15 of 21 ERROR creating table model template.customers_proc_qoq...... [ERROR in 0.55s]
2018-07-28 10:11:33,143: Bad request while running:
create dataset
2018-07-28 10:11:33,143: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/71497bcc-ce9e-4790-a25e-57d9f8c2cee2?maxResults=0: SELECT list expression references column first_order_unix_date which is neither grouped nor aggregated at [73:5]
2018-07-28 10:11:33,143: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'cc3331df-d08b-4587-9265-f1779e07d6fe', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1076520f0>]}
2018-07-28 10:11:33,331: 10:11:33 | 16 of 21 ERROR creating table model template.monthly_cohort_stats.... [ERROR in 0.56s]
2018-07-28 10:11:33,590: 10:11:33 | 17 of 21 ERROR creating table model template.customers_proc_yoy...... [ERROR in 0.99s]
2018-07-28 10:11:33,590: 10:11:33 | 18 of 21 SKIP relation template.customers_proc....................... [SKIP]
2018-07-28 10:11:33,591: 10:11:33 | 19 of 21 SKIP relation template.segment_proc_customers............... [SKIP]
2018-07-28 10:11:33,591: 10:11:33 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 10:11:33,591: 10:11:33 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 10:11:33,617: 10:11:33 | 
2018-07-28 10:11:33,617: 10:11:33 | Finished running 21 table models in 75.36s.
2018-07-28 10:11:33,618: Connection 'master' was left open.
2018-07-28 10:11:33,619: 
2018-07-28 10:11:33,619: Completed with 3 errors:
2018-07-28 10:11:33,620: 
2018-07-28 10:11:33,620: Database Error in model customers_proc_qoq (models/math/buyer-segmentation/customers_proc_qoq.sql)
2018-07-28 10:11:33,620:   SELECT list expression references column first_order_unix_date which is neither grouped nor aggregated at [73:5]
2018-07-28 10:11:33,620:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/customers_proc_qoq.sql
2018-07-28 10:11:33,621: 
2018-07-28 10:11:33,621: Database Error in model monthly_cohort_stats (models/math/cohort-analysis/monthly_cohort_stats.sql)
2018-07-28 10:11:33,621:   Unrecognized name: date at [52:10]
2018-07-28 10:11:33,621:   compiled SQL at target/run/shopify_cohort_analysis/math/cohort-analysis/monthly_cohort_stats.sql
2018-07-28 10:11:33,621: 
2018-07-28 10:11:33,622: Database Error in model customers_proc_yoy (models/math/buyer-segmentation/customers_proc_yoy.sql)
2018-07-28 10:11:33,622:   SELECT list expression references column first_order_unix_date which is neither grouped nor aggregated at [73:5]
2018-07-28 10:11:33,622:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/customers_proc_yoy.sql
2018-07-28 10:11:33,622: 
Done. PASS=14 ERROR=3 SKIP=4 TOTAL=21
2018-07-28 10:11:33,623: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1075164e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107616470>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10766ea58>]}
2018-07-28 10:11:33,854: Flushing usage events
2018-07-28 10:11:34,083: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60442), raddr=('172.217.3.10', 443)>

2018-07-28 10:11:34,084: sys:1: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60443), raddr=('172.217.3.10', 443)>

2018-07-28 10:11:34,084: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60444), raddr=('172.217.3.10', 443)>

2018-07-28 10:11:34,085: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60445), raddr=('172.217.3.10', 443)>

2018-07-28 10:11:34,085: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60438), raddr=('172.217.2.13', 443)>

2018-07-28 10:11:34,085: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60437), raddr=('172.217.2.13', 443)>

2018-07-28 10:11:34,085: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60439), raddr=('172.217.2.13', 443)>

2018-07-28 10:11:34,086: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60440), raddr=('172.217.2.13', 443)>

2018-07-28 10:11:34,086: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60436), raddr=('172.217.2.10', 443)>

2018-07-28 10:11:34,086: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60433), raddr=('172.217.2.13', 443)>

2018-07-28 10:14:15,963: Tracking: tracking
2018-07-28 10:14:15,966: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110cece80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110cec278>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110cecef0>]}
2018-07-28 10:14:19,313: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 10:14:19,345: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 10:14:19,351: Parsing get_column_values.sql
2018-07-28 10:14:19,372: Parsing get_url_parameter.sql
2018-07-28 10:14:19,378: Parsing split_part.sql
2018-07-28 10:14:19,391: Parsing table_exists.sql
2018-07-28 10:14:19,403: Parsing core.sql
2018-07-28 10:14:19,422: Parsing adapters/bigquery.sql
2018-07-28 10:14:19,431: Parsing adapters/common.sql
2018-07-28 10:14:19,468: Parsing adapters/redshift.sql
2018-07-28 10:14:19,490: Parsing adapters/snowflake.sql
2018-07-28 10:14:19,497: Parsing etc/bigquery.sql
2018-07-28 10:14:19,501: Parsing etc/datetime.sql
2018-07-28 10:14:19,537: Parsing etc/get_custom_schema.sql
2018-07-28 10:14:19,546: Parsing materializations/helpers.sql
2018-07-28 10:14:19,568: Parsing materializations/archive/archive.sql
2018-07-28 10:14:19,612: Parsing materializations/incremental/incremental.sql
2018-07-28 10:14:19,656: Parsing materializations/seed/bigquery.sql
2018-07-28 10:14:19,664: Parsing materializations/seed/seed.sql
2018-07-28 10:14:19,730: Parsing materializations/table/bigquery_table.sql
2018-07-28 10:14:19,764: Parsing materializations/table/table.sql
2018-07-28 10:14:19,794: Parsing materializations/view/bigquery_view.sql
2018-07-28 10:14:19,810: Parsing materializations/view/view.sql
2018-07-28 10:14:19,832: Parsing schema_tests/accepted_values.sql
2018-07-28 10:14:19,843: Parsing schema_tests/not_null.sql
2018-07-28 10:14:19,849: Parsing schema_tests/relationships.sql
2018-07-28 10:14:19,858: Parsing schema_tests/unique.sql
2018-07-28 10:14:19,892: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 10:14:19,895: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:14:19,897: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:14:19,899: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 10:14:19,902: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:14:19,913: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:14:19,922: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:14:19,928: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:14:19,942: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:14:19,950: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:14:19,959: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 10:14:19,962: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:14:19,966: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:14:19,968: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:14:19,973: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:14:19,981: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 10:14:19,984: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:14:19,990: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:14:19,994: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:14:19,998: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:14:20,005: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:14:20,027: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 10:14:20,039: 
2018-07-28 10:14:20,047: Acquiring new bigquery connection "master".
2018-07-28 10:14:20,047: Opening a new connection (0 currently allocated)
2018-07-28 10:14:21,373: 10:14:21 | Concurrency: 4 threads (target='template')
2018-07-28 10:14:21,373: 10:14:21 | 
2018-07-28 10:14:21,484: 10:14:21 | 1 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 10:14:21,484: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 10:14:21,497: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:14:21,498: 10:14:21 | 2 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 10:14:21,498: 10:14:21 | 3 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 10:14:21,498: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 10:14:21,499: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:14:21,498: 10:14:21 | 4 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 10:14:21,518: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:14:21,506: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:14:21,518: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:14:21,515: Acquiring new bigquery connection "stores_proc".
2018-07-28 10:14:21,553: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:14:21,559: Acquiring new bigquery connection "monthend_dates".
2018-07-28 10:14:21,559: Opening a new connection (1 currently allocated)
2018-07-28 10:14:21,561: Acquiring new bigquery connection "all_dates".
2018-07-28 10:14:21,563: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 10:14:21,564: Opening a new connection (2 currently allocated)
2018-07-28 10:14:21,566: Opening a new connection (3 currently allocated)
2018-07-28 10:14:21,575: Opening a new connection (4 currently allocated)
2018-07-28 10:14:23,101: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:14:23,109: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:14:23,110: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 10:14:23,110: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 10:14:23,299: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:14:23,300: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:14:23,301: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 10:14:23,302: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 10:14:28,197: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db22400>]}
2018-07-28 10:14:28,200: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db22a58>]}
2018-07-28 10:14:28,202: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db226a0>]}
2018-07-28 10:14:28,204: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac6a90>]}
2018-07-28 10:14:29,561: 10:14:29 | 2 of 21 OK created table model template.all_dates.................... [OK in 6.70s]
2018-07-28 10:14:30,572: 10:14:30 | 4 of 21 OK created table model template.mappings_ga_proc............. [OK in 6.68s]
2018-07-28 10:14:31,258: 10:14:31 | 3 of 21 OK created table model template.monthend_dates............... [OK in 6.70s]
2018-07-28 10:14:31,675: 10:14:31 | 1 of 21 OK created table model template.stores_proc.................. [OK in 6.72s]
2018-07-28 10:14:31,676: 10:14:31 | 5 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 10:14:31,676: 10:14:31 | 6 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 10:14:31,676: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:14:31,677: 10:14:31 | 7 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 10:14:31,677: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:14:31,685: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 10:14:31,685: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:14:31,687: Re-using an available connection from the pool.
2018-07-28 10:14:31,700: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 10:14:31,700: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:14:31,701: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 10:14:31,701: Re-using an available connection from the pool.
2018-07-28 10:14:31,704: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:14:31,705: Re-using an available connection from the pool.
2018-07-28 10:14:31,708: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:14:33,685: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:14:34,563: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:14:36,008: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:14:36,008: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 10:14:37,841: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:14:37,842: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 10:14:38,034: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:14:38,188: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:14:38,189: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:14:38,548: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db01588>]}
2018-07-28 10:14:39,269: 10:14:39 | 6 of 21 OK created table model template.shopify_refunds_proc......... [OK in 6.87s]
2018-07-28 10:14:40,334: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f610320>]}
2018-07-28 10:14:41,332: 10:14:41 | 7 of 21 OK created table model template.shopify_discounts_proc....... [OK in 8.65s]
2018-07-28 10:14:43,062: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac6c88>]}
2018-07-28 10:14:43,784: 10:14:43 | 5 of 21 OK created table model template.shopify_customers_proc....... [OK in 11.39s]
2018-07-28 10:14:43,785: 10:14:43 | 8 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 10:14:43,786: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 10:14:43,786: 10:14:43 | 9 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 10:14:43,793: 10:14:43 | 10 of 21 START table model template.shopify_products_proc............ [RUN]
2018-07-28 10:14:43,798: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:14:43,799: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:14:43,850: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:14:43,870: Acquiring new bigquery connection "agg_customers".
2018-07-28 10:14:43,871: Re-using an available connection from the pool.
2018-07-28 10:14:43,885: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 10:14:43,885: Re-using an available connection from the pool.
2018-07-28 10:14:43,886: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:14:43,891: Acquiring new bigquery connection "ga_transactions".
2018-07-28 10:14:43,892: Re-using an available connection from the pool.
2018-07-28 10:14:43,892: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:14:44,073: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:14:44,077: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 10:14:44,714: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:14:44,885: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:14:44,887: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 10:14:45,899: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:14:46,107: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:14:46,110: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 10:14:51,474: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e06a20>]}
2018-07-28 10:14:51,840: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac6a90>]}
2018-07-28 10:14:52,590: 10:14:52 | 10 of 21 OK created table model template.shopify_products_proc....... [OK in 7.68s]
2018-07-28 10:14:53,223: 10:14:53 | 8 of 21 OK created table model template.agg_customers................ [OK in 8.05s]
2018-07-28 10:15:11,472: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e40fb70>]}
2018-07-28 10:15:12,068: 10:15:12 | 9 of 21 OK created table model template.ga_transactions.............. [OK in 27.67s]
2018-07-28 10:15:12,069: 10:15:12 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 10:15:12,071: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:15:12,190: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 10:15:12,190: Re-using an available connection from the pool.
2018-07-28 10:15:12,190: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:15:13,243: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:15:13,459: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:15:13,509: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:15:24,265: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac6c88>]}
2018-07-28 10:15:25,679: 10:15:25 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 12.19s]
2018-07-28 10:15:25,681: 10:15:25 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 10:15:25,681: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:15:25,695: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:15:25,696: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 10:15:25,696: Re-using an available connection from the pool.
2018-07-28 10:15:26,338: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:15:26,339: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 10:15:31,676: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e2a128>]}
2018-07-28 10:15:31,907: 10:15:31 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 5.99s]
2018-07-28 10:15:31,908: 10:15:31 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 10:15:31,908: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:15:31,916: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:15:31,919: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 10:15:31,919: Re-using an available connection from the pool.
2018-07-28 10:15:32,385: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:15:32,386: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 10:15:37,803: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac6c88>]}
2018-07-28 10:15:39,279: 10:15:39 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 5.89s]
2018-07-28 10:15:39,280: 10:15:39 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 10:15:39,280: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:15:39,296: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:15:39,300: Acquiring new bigquery connection "agg_transactions".
2018-07-28 10:15:39,300: Re-using an available connection from the pool.
2018-07-28 10:15:39,782: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:15:39,783: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	recent_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 10:15:50,011: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e2a128>]}
2018-07-28 10:15:50,325: 10:15:50 | 14 of 21 OK created table model template.agg_transactions............ [OK in 10.73s]
2018-07-28 10:15:50,326: 10:15:50 | 15 of 21 START table model template.monthly_cohort_stats............. [RUN]
2018-07-28 10:15:50,327: Compiling model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:15:50,326: 10:15:50 | 16 of 21 START table model template.customers_proc_qoq............... [RUN]
2018-07-28 10:15:50,333: Compiling model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:15:50,327: 10:15:50 | 17 of 21 START table model template.customers_proc_yoy............... [RUN]
2018-07-28 10:15:50,346: Compiling model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:15:50,379: Writing injected SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:15:50,382: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:15:50,386: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:15:50,391: Acquiring new bigquery connection "monthly_cohort_stats".
2018-07-28 10:15:50,394: Re-using an available connection from the pool.
2018-07-28 10:15:50,394: Acquiring new bigquery connection "customers_proc_yoy".
2018-07-28 10:15:50,404: Re-using an available connection from the pool.
2018-07-28 10:15:50,404: Acquiring new bigquery connection "customers_proc_qoq".
2018-07-28 10:15:50,412: Re-using an available connection from the pool.
2018-07-28 10:15:50,894: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:15:50,908: Writing runtime SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:15:50,917: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:15:50,918: Fetching data for query customers_proc_yoy:
create or replace table `template`.`customers_proc_yoy`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 365 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 365 window_end_unix_date, 
    unix_date_in_range - 730 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:15:50,918: Fetching data for query monthly_cohort_stats:
create or replace table `template`.`monthly_cohort_stats`
  
  as (
    WITH transactions AS (

  SELECT 
  store, 
  order_number,
  order_date,
  order_type,
  first_order_month,
  unix_date(order_date) d, 
  customer_id, 
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (

  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT 
date_in_range month,
unix_date_in_range, 
unix_date_in_range_bom, 
store, 
order_type,
first_order_channel,
first_order_platform,
first_order_month,
channel,
platform,
url,
campaign,
count(distinct(customer_id)) buyers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN transactions
ON transactions.d >= daterange.unix_date_in_range_bom 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY month, unix_date_in_range, unix_date_in_range_bom, store, order_type, 
first_order_channel, first_order_platform, first_order_month, channel, platform, url, campaign
  );

    
2018-07-28 10:15:50,922: Fetching data for query customers_proc_qoq:
create or replace table `template`.`customers_proc_qoq`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 90 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 90 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 90 window_end_unix_date, 
    unix_date_in_range - 180 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 180 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 90 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:15:56,411: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e34908>]}
2018-07-28 10:15:57,199: 10:15:57 | 15 of 21 OK created table model template.monthly_cohort_stats........ [OK in 6.08s]
2018-07-28 10:16:06,798: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dad37f0>]}
2018-07-28 10:16:08,634: 10:16:08 | 16 of 21 OK created table model template.customers_proc_qoq.......... [OK in 16.46s]
2018-07-28 10:16:15,910: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dad3dd8>]}
2018-07-28 10:16:16,879: 10:16:16 | 17 of 21 OK created table model template.customers_proc_yoy.......... [OK in 25.56s]
2018-07-28 10:16:16,880: 10:16:16 | 18 of 21 START table model template.customers_proc................... [RUN]
2018-07-28 10:16:16,881: Compiling model.shopify_cohort_analysis.customers_proc
2018-07-28 10:16:16,896: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:16:16,898: Acquiring new bigquery connection "customers_proc".
2018-07-28 10:16:16,899: Re-using an available connection from the pool.
2018-07-28 10:16:17,507: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:16:17,507: Fetching data for query customers_proc:
create or replace table `template`.`customers_proc`
  
  as (
    SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_qoq`

UNION ALL

SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_yoy`
  );

    
2018-07-28 10:16:49,014: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dac7e10>]}
2018-07-28 10:16:51,157: 10:16:51 | 18 of 21 OK created table model template.customers_proc.............. [OK in 32.13s]
2018-07-28 10:16:51,158: 10:16:51 | 19 of 21 START table model template.segment_proc_customers........... [RUN]
2018-07-28 10:16:51,158: Compiling model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:16:51,171: Writing injected SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:16:51,173: Acquiring new bigquery connection "segment_proc_customers".
2018-07-28 10:16:51,173: Re-using an available connection from the pool.
2018-07-28 10:16:51,382: Writing runtime SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:16:51,383: Fetching data for query segment_proc_customers:
create or replace table `template`.`segment_proc_customers`
  
  as (
    SELECT
store,
period,
customer_id,
date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct,
case when first_order_unix_date >= window_start_unix_date then 'New'
	else 'Existing' as newness_segment,
case when revenue >= revenue_90pct then 'Whale'
	when frequency <= then 'Minnow'
	else 'Bristlemouth' end as revenue_segment,
case when frequency = 1 then '1'
	when frequency = 2 then '2'
	when frequency > 2 then '3+'
	else null end as frequency_segment
FROM `growth-engines-pipeline`.`template`.`customers_proc`
  );

    
2018-07-28 10:16:51,639: Bad request while running:
create dataset
2018-07-28 10:16:51,639: 400 Syntax error: Unexpected keyword AS at [19:25]
2018-07-28 10:16:51,640: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4c7f2dd4-05b6-4aed-9877-37e932ee0651', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110e2a240>]}
2018-07-28 10:16:51,897: 10:16:51 | 19 of 21 ERROR creating table model template.segment_proc_customers.. [ERROR in 0.48s]
2018-07-28 10:16:51,899: 10:16:51 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 10:16:51,900: 10:16:51 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 10:16:51,932: 10:16:51 | 
2018-07-28 10:16:51,932: 10:16:51 | Finished running 21 table models in 151.89s.
2018-07-28 10:16:51,932: Connection 'master' was left open.
2018-07-28 10:16:51,932: 
2018-07-28 10:16:51,932: Completed with 1 errors:
2018-07-28 10:16:51,933: 
2018-07-28 10:16:51,933: Database Error in model segment_proc_customers (models/math/buyer-segmentation/segment_proc_customers.sql)
2018-07-28 10:16:51,933:   Syntax error: Unexpected keyword AS at [19:25]
2018-07-28 10:16:51,933:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/segment_proc_customers.sql
2018-07-28 10:16:51,933: 
Done. PASS=18 ERROR=1 SKIP=2 TOTAL=21
2018-07-28 10:16:51,934: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110cece80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dec4a8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e44e320>]}
2018-07-28 10:16:52,203: Flushing usage events
2018-07-28 10:16:52,482: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60517), raddr=('172.217.12.10', 443)>

2018-07-28 10:16:52,482: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60516), raddr=('172.217.12.10', 443)>

2018-07-28 10:16:52,483: sys:1: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60518), raddr=('172.217.12.10', 443)>

2018-07-28 10:16:52,483: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60519), raddr=('172.217.12.10', 443)>

2018-07-28 10:16:52,484: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60514), raddr=('172.217.2.13', 443)>

2018-07-28 10:16:52,485: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60512), raddr=('172.217.2.13', 443)>

2018-07-28 10:16:52,485: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60513), raddr=('172.217.2.13', 443)>

2018-07-28 10:16:52,485: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60515), raddr=('172.217.2.13', 443)>

2018-07-28 10:16:52,486: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60511), raddr=('172.217.11.234', 443)>

2018-07-28 10:16:52,487: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60510), raddr=('172.217.2.13', 443)>

2018-07-28 10:17:52,964: Tracking: tracking
2018-07-28 10:17:52,966: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dd5e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dd5278>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110dd5ef0>]}
2018-07-28 10:17:56,350: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 10:17:56,383: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 10:17:56,388: Parsing get_column_values.sql
2018-07-28 10:17:56,407: Parsing get_url_parameter.sql
2018-07-28 10:17:56,414: Parsing split_part.sql
2018-07-28 10:17:56,422: Parsing table_exists.sql
2018-07-28 10:17:56,435: Parsing core.sql
2018-07-28 10:17:56,457: Parsing adapters/bigquery.sql
2018-07-28 10:17:56,468: Parsing adapters/common.sql
2018-07-28 10:17:56,500: Parsing adapters/redshift.sql
2018-07-28 10:17:56,524: Parsing adapters/snowflake.sql
2018-07-28 10:17:56,531: Parsing etc/bigquery.sql
2018-07-28 10:17:56,536: Parsing etc/datetime.sql
2018-07-28 10:17:56,570: Parsing etc/get_custom_schema.sql
2018-07-28 10:17:56,582: Parsing materializations/helpers.sql
2018-07-28 10:17:56,607: Parsing materializations/archive/archive.sql
2018-07-28 10:17:56,648: Parsing materializations/incremental/incremental.sql
2018-07-28 10:17:56,689: Parsing materializations/seed/bigquery.sql
2018-07-28 10:17:56,701: Parsing materializations/seed/seed.sql
2018-07-28 10:17:56,758: Parsing materializations/table/bigquery_table.sql
2018-07-28 10:17:56,794: Parsing materializations/table/table.sql
2018-07-28 10:17:56,821: Parsing materializations/view/bigquery_view.sql
2018-07-28 10:17:56,838: Parsing materializations/view/view.sql
2018-07-28 10:17:56,864: Parsing schema_tests/accepted_values.sql
2018-07-28 10:17:56,870: Parsing schema_tests/not_null.sql
2018-07-28 10:17:56,874: Parsing schema_tests/relationships.sql
2018-07-28 10:17:56,880: Parsing schema_tests/unique.sql
2018-07-28 10:17:56,905: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 10:17:56,907: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:17:56,911: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:17:56,913: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 10:17:56,915: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:17:56,925: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:17:56,933: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:17:56,938: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:17:56,950: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:17:56,959: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:17:56,965: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 10:17:56,968: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:17:56,972: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:17:56,977: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:17:56,981: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:17:56,988: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 10:17:56,994: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:17:56,998: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:17:57,002: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:17:57,006: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:17:57,013: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:17:57,035: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 10:17:57,043: 
2018-07-28 10:17:57,050: Acquiring new bigquery connection "master".
2018-07-28 10:17:57,050: Opening a new connection (0 currently allocated)
2018-07-28 10:17:58,461: 10:17:58 | Concurrency: 4 threads (target='template')
2018-07-28 10:17:58,461: 10:17:58 | 
2018-07-28 10:17:58,523: 10:17:58 | 1 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 10:17:58,524: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 10:17:58,530: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:17:58,524: 10:17:58 | 2 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 10:17:58,524: 10:17:58 | 3 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 10:17:58,524: 10:17:58 | 4 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 10:17:58,531: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 10:17:58,531: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:17:58,531: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:17:58,536: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:17:58,542: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:17:58,551: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:17:58,552: Acquiring new bigquery connection "stores_proc".
2018-07-28 10:17:58,553: Opening a new connection (1 currently allocated)
2018-07-28 10:17:58,557: Acquiring new bigquery connection "all_dates".
2018-07-28 10:17:58,560: Acquiring new bigquery connection "monthend_dates".
2018-07-28 10:17:58,563: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 10:17:58,566: Opening a new connection (2 currently allocated)
2018-07-28 10:17:58,571: Opening a new connection (3 currently allocated)
2018-07-28 10:17:58,584: Opening a new connection (4 currently allocated)
2018-07-28 10:17:58,968: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:17:58,968: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 10:17:59,022: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:17:59,022: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 10:17:59,038: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:17:59,039: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 10:17:59,061: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:17:59,062: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 10:18:00,615: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db78630>]}
2018-07-28 10:18:00,637: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db20c18>]}
2018-07-28 10:18:00,781: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db78438>]}
2018-07-28 10:18:00,805: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db785c0>]}
2018-07-28 10:18:00,845: 10:18:00 | 3 of 21 OK created table model template.monthend_dates............... [OK in 2.08s]
2018-07-28 10:18:01,062: 10:18:01 | 2 of 21 OK created table model template.all_dates.................... [OK in 2.11s]
2018-07-28 10:18:01,272: 10:18:01 | 4 of 21 OK created table model template.mappings_ga_proc............. [OK in 2.25s]
2018-07-28 10:18:01,529: 10:18:01 | 1 of 21 OK created table model template.stores_proc.................. [OK in 2.28s]
2018-07-28 10:18:01,529: 10:18:01 | 5 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 10:18:01,529: 10:18:01 | 6 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 10:18:01,530: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:18:01,530: 10:18:01 | 7 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 10:18:01,530: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:18:01,537: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:18:01,547: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 10:18:01,554: Re-using an available connection from the pool.
2018-07-28 10:18:01,554: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:01,555: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 10:18:01,555: Re-using an available connection from the pool.
2018-07-28 10:18:01,555: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:01,560: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 10:18:01,562: Re-using an available connection from the pool.
2018-07-28 10:18:01,563: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:05,178: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:18:05,182: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:18:05,641: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:18:05,642: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 10:18:05,652: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:18:05,656: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:18:05,679: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:18:06,191: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:18:06,192: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 10:18:08,238: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbc19e8>]}
2018-07-28 10:18:08,438: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db2c278>]}
2018-07-28 10:18:08,485: 10:18:08 | 7 of 21 OK created table model template.shopify_refunds_proc......... [OK in 6.70s]
2018-07-28 10:18:08,697: 10:18:08 | 5 of 21 OK created table model template.shopify_discounts_proc....... [OK in 6.91s]
2018-07-28 10:18:10,860: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbb7c18>]}
2018-07-28 10:18:11,513: 10:18:11 | 6 of 21 OK created table model template.shopify_customers_proc....... [OK in 9.33s]
2018-07-28 10:18:11,513: 10:18:11 | 8 of 21 START table model template.shopify_products_proc............. [RUN]
2018-07-28 10:18:11,513: 10:18:11 | 9 of 21 START table model template.agg_customers..................... [RUN]
2018-07-28 10:18:11,514: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:18:11,514: 10:18:11 | 10 of 21 START table model template.ga_transactions.................. [RUN]
2018-07-28 10:18:11,514: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 10:18:11,524: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 10:18:11,524: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:18:11,526: Re-using an available connection from the pool.
2018-07-28 10:18:11,538: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:18:11,544: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:11,548: Acquiring new bigquery connection "ga_transactions".
2018-07-28 10:18:11,549: Re-using an available connection from the pool.
2018-07-28 10:18:11,550: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:11,555: Acquiring new bigquery connection "agg_customers".
2018-07-28 10:18:11,560: Re-using an available connection from the pool.
2018-07-28 10:18:11,658: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:18:11,661: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 10:18:12,335: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:18:12,550: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:18:12,551: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 10:18:13,685: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:18:13,977: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:18:13,980: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 10:18:14,781: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e438898>]}
2018-07-28 10:18:15,432: 10:18:15 | 8 of 21 OK created table model template.shopify_products_proc........ [OK in 3.27s]
2018-07-28 10:18:16,116: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4386d8>]}
2018-07-28 10:18:16,329: 10:18:16 | 9 of 21 OK created table model template.agg_customers................ [OK in 4.60s]
2018-07-28 10:18:37,609: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10db60ba8>]}
2018-07-28 10:18:38,075: 10:18:38 | 10 of 21 OK created table model template.ga_transactions............. [OK in 26.08s]
2018-07-28 10:18:38,076: 10:18:38 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 10:18:38,077: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:18:38,092: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 10:18:38,092: Re-using an available connection from the pool.
2018-07-28 10:18:38,092: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:18:38,758: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:18:38,863: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:18:38,864: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:18:49,191: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbb7c18>]}
2018-07-28 10:18:49,460: 10:18:49 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 11.11s]
2018-07-28 10:18:49,460: 10:18:49 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 10:18:49,461: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:18:49,467: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:18:49,472: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 10:18:49,472: Re-using an available connection from the pool.
2018-07-28 10:18:49,590: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:18:49,590: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 10:18:54,225: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4491d0>]}
2018-07-28 10:18:54,832: 10:18:54 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 4.76s]
2018-07-28 10:18:54,832: 10:18:54 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 10:18:54,833: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:18:54,839: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:18:54,841: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 10:18:54,841: Re-using an available connection from the pool.
2018-07-28 10:18:54,946: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:18:54,947: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 10:18:58,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbb7c18>]}
2018-07-28 10:18:59,162: 10:18:59 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 3.45s]
2018-07-28 10:18:59,162: 10:18:59 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 10:18:59,162: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:18:59,169: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:18:59,171: Acquiring new bigquery connection "agg_transactions".
2018-07-28 10:18:59,171: Re-using an available connection from the pool.
2018-07-28 10:18:59,301: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:18:59,303: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	recent_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 10:19:07,841: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4499b0>]}
2018-07-28 10:19:08,391: 10:19:08 | 14 of 21 OK created table model template.agg_transactions............ [OK in 8.68s]
2018-07-28 10:19:08,392: 10:19:08 | 15 of 21 START table model template.customers_proc_qoq............... [RUN]
2018-07-28 10:19:08,393: Compiling model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:19:08,403: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:19:08,399: 10:19:08 | 16 of 21 START table model template.monthly_cohort_stats............. [RUN]
2018-07-28 10:19:08,403: Compiling model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:19:08,411: Writing injected SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:19:08,399: 10:19:08 | 17 of 21 START table model template.customers_proc_yoy............... [RUN]
2018-07-28 10:19:08,412: Compiling model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:19:08,420: Acquiring new bigquery connection "monthly_cohort_stats".
2018-07-28 10:19:08,421: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:19:08,421: Re-using an available connection from the pool.
2018-07-28 10:19:08,424: Acquiring new bigquery connection "customers_proc_qoq".
2018-07-28 10:19:08,425: Re-using an available connection from the pool.
2018-07-28 10:19:08,432: Acquiring new bigquery connection "customers_proc_yoy".
2018-07-28 10:19:08,432: Re-using an available connection from the pool.
2018-07-28 10:19:08,592: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:19:08,597: Writing runtime SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:19:08,605: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:19:08,606: Fetching data for query customers_proc_yoy:
create or replace table `template`.`customers_proc_yoy`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 365 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 365 window_end_unix_date, 
    unix_date_in_range - 730 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:19:08,606: Fetching data for query monthly_cohort_stats:
create or replace table `template`.`monthly_cohort_stats`
  
  as (
    WITH transactions AS (

  SELECT 
  store, 
  order_number,
  order_date,
  order_type,
  first_order_month,
  unix_date(order_date) d, 
  customer_id, 
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (

  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT 
date_in_range month,
unix_date_in_range, 
unix_date_in_range_bom, 
store, 
order_type,
first_order_channel,
first_order_platform,
first_order_month,
channel,
platform,
url,
campaign,
count(distinct(customer_id)) buyers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN transactions
ON transactions.d >= daterange.unix_date_in_range_bom 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY month, unix_date_in_range, unix_date_in_range_bom, store, order_type, 
first_order_channel, first_order_platform, first_order_month, channel, platform, url, campaign
  );

    
2018-07-28 10:19:08,607: Fetching data for query customers_proc_qoq:
create or replace table `template`.`customers_proc_qoq`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 90 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 90 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 90 window_end_unix_date, 
    unix_date_in_range - 180 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 180 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 90 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:19:13,599: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dbb7978>]}
2018-07-28 10:19:14,203: 10:19:14 | 16 of 21 OK created table model template.monthly_cohort_stats........ [OK in 5.20s]
2018-07-28 10:19:21,450: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e449358>]}
2018-07-28 10:19:22,404: 10:19:22 | 15 of 21 OK created table model template.customers_proc_qoq.......... [OK in 13.06s]
2018-07-28 10:19:34,120: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dba8a58>]}
2018-07-28 10:19:34,390: 10:19:34 | 17 of 21 OK created table model template.customers_proc_yoy.......... [OK in 25.70s]
2018-07-28 10:19:34,391: 10:19:34 | 18 of 21 START table model template.customers_proc................... [RUN]
2018-07-28 10:19:34,392: Compiling model.shopify_cohort_analysis.customers_proc
2018-07-28 10:19:34,411: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:19:34,413: Acquiring new bigquery connection "customers_proc".
2018-07-28 10:19:34,413: Re-using an available connection from the pool.
2018-07-28 10:19:34,573: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:19:34,574: Fetching data for query customers_proc:
create or replace table `template`.`customers_proc`
  
  as (
    SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_qoq`

UNION ALL

SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_yoy`
  );

    
2018-07-28 10:20:01,115: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4499b0>]}
2018-07-28 10:20:03,170: 10:20:03 | 18 of 21 OK created table model template.customers_proc.............. [OK in 26.72s]
2018-07-28 10:20:03,171: 10:20:03 | 19 of 21 START table model template.segment_proc_customers........... [RUN]
2018-07-28 10:20:03,171: Compiling model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:20:03,177: Writing injected SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:20:03,181: Acquiring new bigquery connection "segment_proc_customers".
2018-07-28 10:20:03,182: Re-using an available connection from the pool.
2018-07-28 10:20:03,313: Writing runtime SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:20:03,314: Fetching data for query segment_proc_customers:
create or replace table `template`.`segment_proc_customers`
  
  as (
    SELECT
store,
period,
customer_id,
date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct,
case when first_order_unix_date >= window_start_unix_date then 'New'
	else 'Existing' end as newness_segment,
case when revenue >= revenue_90pct then 'Whale'
	when frequency <= then 'Minnow'
	else 'Bristlemouth' end as revenue_segment,
case when frequency = 1 then '1'
	when frequency = 2 then '2'
	when frequency > 2 then '3+'
	else null end as frequency_segment
FROM `growth-engines-pipeline`.`template`.`customers_proc`
  );

    
2018-07-28 10:20:03,469: Bad request while running:
create dataset
2018-07-28 10:20:03,469: 400 Syntax error: Unexpected keyword THEN at [21:27]
2018-07-28 10:20:03,470: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '88245ec0-a38a-4658-8fe5-949549ac4c36', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4357f0>]}
2018-07-28 10:20:03,723: 10:20:03 | 19 of 21 ERROR creating table model template.segment_proc_customers.. [ERROR in 0.30s]
2018-07-28 10:20:03,724: 10:20:03 | 20 of 21 SKIP relation template.segment_stats_customers_agg.......... [SKIP]
2018-07-28 10:20:03,724: 10:20:03 | 21 of 21 SKIP relation template.buyer_segment_stats.................. [SKIP]
2018-07-28 10:20:03,775: 10:20:03 | 
2018-07-28 10:20:03,775: 10:20:03 | Finished running 21 table models in 126.73s.
2018-07-28 10:20:03,775: Connection 'master' was left open.
2018-07-28 10:20:03,776: 
2018-07-28 10:20:03,776: Completed with 1 errors:
2018-07-28 10:20:03,776: 
2018-07-28 10:20:03,776: Database Error in model segment_proc_customers (models/math/buyer-segmentation/segment_proc_customers.sql)
2018-07-28 10:20:03,777:   Syntax error: Unexpected keyword THEN at [21:27]
2018-07-28 10:20:03,777:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/segment_proc_customers.sql
2018-07-28 10:20:03,777: 
Done. PASS=18 ERROR=1 SKIP=2 TOTAL=21
2018-07-28 10:20:03,778: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ed6518>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ea1128>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ea15c0>]}
2018-07-28 10:20:03,987: Flushing usage events
2018-07-28 10:20:04,146: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60685), raddr=('172.217.2.10', 443)>

2018-07-28 10:20:04,146: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60684), raddr=('172.217.1.202', 443)>

2018-07-28 10:20:04,147: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60683), raddr=('172.217.2.13', 443)>

2018-07-28 10:20:04,151: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60680), raddr=('172.217.2.13', 443)>

2018-07-28 10:20:04,152: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60682), raddr=('172.217.2.13', 443)>

2018-07-28 10:20:04,153: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60681), raddr=('172.217.2.13', 443)>

2018-07-28 10:20:04,153: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60679), raddr=('172.217.1.202', 443)>

2018-07-28 10:20:04,154: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60678), raddr=('172.217.2.13', 443)>

2018-07-28 10:20:04,154: sys:1: ResourceWarning: unclosed <socket.socket fd=19, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60686), raddr=('172.217.2.10', 443)>

2018-07-28 10:20:04,155: sys:1: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60687), raddr=('172.217.2.10', 443)>

2018-07-28 10:22:14,793: Tracking: tracking
2018-07-28 10:22:14,795: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111135358>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111135518>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111135b70>]}
2018-07-28 10:22:16,398: Loading dependency project from /usr/local/Cellar/dbt/0.10.1/libexec/lib/python3.6/site-packages/dbt/include
2018-07-28 10:22:16,430: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/shopify-cohort-analysis/dbt_modules
2018-07-28 10:22:16,440: Parsing get_column_values.sql
2018-07-28 10:22:16,461: Parsing get_url_parameter.sql
2018-07-28 10:22:16,468: Parsing split_part.sql
2018-07-28 10:22:16,477: Parsing table_exists.sql
2018-07-28 10:22:16,488: Parsing core.sql
2018-07-28 10:22:16,502: Parsing adapters/bigquery.sql
2018-07-28 10:22:16,515: Parsing adapters/common.sql
2018-07-28 10:22:16,553: Parsing adapters/redshift.sql
2018-07-28 10:22:16,575: Parsing adapters/snowflake.sql
2018-07-28 10:22:16,581: Parsing etc/bigquery.sql
2018-07-28 10:22:16,587: Parsing etc/datetime.sql
2018-07-28 10:22:16,620: Parsing etc/get_custom_schema.sql
2018-07-28 10:22:16,629: Parsing materializations/helpers.sql
2018-07-28 10:22:16,655: Parsing materializations/archive/archive.sql
2018-07-28 10:22:16,695: Parsing materializations/incremental/incremental.sql
2018-07-28 10:22:16,738: Parsing materializations/seed/bigquery.sql
2018-07-28 10:22:16,748: Parsing materializations/seed/seed.sql
2018-07-28 10:22:16,809: Parsing materializations/table/bigquery_table.sql
2018-07-28 10:22:16,846: Parsing materializations/table/table.sql
2018-07-28 10:22:16,879: Parsing materializations/view/bigquery_view.sql
2018-07-28 10:22:16,898: Parsing materializations/view/view.sql
2018-07-28 10:22:16,919: Parsing schema_tests/accepted_values.sql
2018-07-28 10:22:16,927: Parsing schema_tests/not_null.sql
2018-07-28 10:22:16,933: Parsing schema_tests/relationships.sql
2018-07-28 10:22:16,943: Parsing schema_tests/unique.sql
2018-07-28 10:22:16,997: Parsing model.shopify_cohort_analysis.all_dates
2018-07-28 10:22:17,002: Parsing model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:22:17,007: Parsing model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:22:17,010: Parsing model.shopify_cohort_analysis.stores_proc
2018-07-28 10:22:17,013: Parsing model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:22:17,023: Parsing model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:22:17,031: Parsing model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:22:17,037: Parsing model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:22:17,050: Parsing model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:22:17,063: Parsing model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:22:17,070: Parsing model.shopify_cohort_analysis.agg_customers
2018-07-28 10:22:17,074: Parsing model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:22:17,078: Parsing model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:22:17,081: Parsing model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:22:17,084: Parsing model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:22:17,092: Parsing model.shopify_cohort_analysis.customers_proc
2018-07-28 10:22:17,095: Parsing model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:22:17,099: Parsing model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:22:17,103: Parsing model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:22:17,109: Parsing model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:22:17,118: Parsing model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:22:17,137: Found 21 models, 0 tests, 0 archives, 0 analyses, 62 macros, 0 operations, 0 seed files
2018-07-28 10:22:17,143: 
2018-07-28 10:22:17,150: Acquiring new bigquery connection "master".
2018-07-28 10:22:17,150: Opening a new connection (0 currently allocated)
2018-07-28 10:22:18,626: 10:22:18 | Concurrency: 4 threads (target='template')
2018-07-28 10:22:18,626: 10:22:18 | 
2018-07-28 10:22:18,710: 10:22:18 | 1 of 21 START table model template.monthend_dates.................... [RUN]
2018-07-28 10:22:18,711: Compiling model.shopify_cohort_analysis.monthend_dates
2018-07-28 10:22:18,711: 10:22:18 | 2 of 21 START table model template.all_dates......................... [RUN]
2018-07-28 10:22:18,718: Writing injected SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:22:18,711: 10:22:18 | 3 of 21 START table model template.stores_proc....................... [RUN]
2018-07-28 10:22:18,718: Compiling model.shopify_cohort_analysis.all_dates
2018-07-28 10:22:18,718: Compiling model.shopify_cohort_analysis.stores_proc
2018-07-28 10:22:18,711: 10:22:18 | 4 of 21 START table model template.mappings_ga_proc.................. [RUN]
2018-07-28 10:22:18,724: Writing injected SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:22:18,729: Writing injected SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:22:18,730: Acquiring new bigquery connection "monthend_dates".
2018-07-28 10:22:18,731: Compiling model.shopify_cohort_analysis.mappings_ga_proc
2018-07-28 10:22:18,733: Acquiring new bigquery connection "all_dates".
2018-07-28 10:22:18,733: Opening a new connection (1 currently allocated)
2018-07-28 10:22:18,742: Writing injected SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:22:18,744: Acquiring new bigquery connection "stores_proc".
2018-07-28 10:22:18,747: Acquiring new bigquery connection "mappings_ga_proc".
2018-07-28 10:22:18,748: Opening a new connection (2 currently allocated)
2018-07-28 10:22:18,757: Opening a new connection (3 currently allocated)
2018-07-28 10:22:18,762: Opening a new connection (4 currently allocated)
2018-07-28 10:22:19,628: Writing runtime SQL for node "model.shopify_cohort_analysis.stores_proc"
2018-07-28 10:22:19,628: Fetching data for query stores_proc:
create or replace table `template`.`stores_proc`
  
  as (
    select 
store,
store_name,
account,
platform,
max(time_of_entry) time_of_entry

from  ( 

SELECT  
client store,
client_name store_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 
where client_name != ''

) 

WHERE lv = time_of_entry
group by store, store_name, account, platform
  );

    
2018-07-28 10:22:19,971: Writing runtime SQL for node "model.shopify_cohort_analysis.all_dates"
2018-07-28 10:22:19,972: Fetching data for query all_dates:
create or replace table `template`.`all_dates`
  
  as (
    SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
  );

    
2018-07-28 10:22:20,021: Writing runtime SQL for node "model.shopify_cohort_analysis.monthend_dates"
2018-07-28 10:22:20,028: Fetching data for query monthend_dates:
create or replace table `template`.`monthend_dates`
  
  as (
    SELECT
date_in_range,
date_in_range_bom,
date_in_range_bom_mom,
unix_date_in_range,
unix_date_in_range_bom,
unix_date(date_in_range_bom_mom) unix_date_in_range_bom_mom,
yyyymm,
date_in_range_yoy,
unix_date(date_in_range_yoy) unix_date_in_range_yoy

FROM
(
	SELECT 
	date_in_range,
	date_in_range_bom,
	date_sub(date_in_range_bom, INTERVAL 1 MONTH) date_in_range_bom_mom,
	date_sub(date_in_range, INTERVAL 1 YEAR) date_in_range_yoy,
	unix_date_in_range,
	unix_date(date_in_range_bom) unix_date_in_range_bom,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		date_trunc( date_in_range, MONTH) date_in_range_bom,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
  );

    
2018-07-28 10:22:20,037: Writing runtime SQL for node "model.shopify_cohort_analysis.mappings_ga_proc"
2018-07-28 10:22:20,038: Fetching data for query mappings_ga_proc:
create or replace table `template`.`mappings_ga_proc`
  
  as (
    select 
store,
account,
store_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client store,
account,
client_name store_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
group by store, account, store_name, source, medium, platform_n, channel_n, time_of_entry
  );

    
2018-07-28 10:22:21,623: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11127e898>]}
2018-07-28 10:22:21,629: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11127e668>]}
2018-07-28 10:22:22,015: 10:22:22 | 2 of 21 OK created table model template.all_dates.................... [OK in 2.90s]
2018-07-28 10:22:22,062: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111271a58>]}
2018-07-28 10:22:22,126: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11127e9b0>]}
2018-07-28 10:22:22,259: 10:22:22 | 3 of 21 OK created table model template.stores_proc.................. [OK in 2.91s]
2018-07-28 10:22:22,578: 10:22:22 | 4 of 21 OK created table model template.mappings_ga_proc............. [OK in 3.33s]
2018-07-28 10:22:22,785: 10:22:22 | 1 of 21 OK created table model template.monthend_dates............... [OK in 3.41s]
2018-07-28 10:22:22,786: 10:22:22 | 5 of 21 START table model template.shopify_refunds_proc.............. [RUN]
2018-07-28 10:22:22,787: Compiling model.shopify_cohort_analysis.shopify_refunds_proc
2018-07-28 10:22:22,786: 10:22:22 | 6 of 21 START table model template.shopify_discounts_proc............ [RUN]
2018-07-28 10:22:22,786: 10:22:22 | 7 of 21 START table model template.shopify_customers_proc............ [RUN]
2018-07-28 10:22:22,796: Compiling model.shopify_cohort_analysis.shopify_discounts_proc
2018-07-28 10:22:22,797: Compiling model.shopify_cohort_analysis.shopify_customers_proc
2018-07-28 10:22:22,804: Acquiring new bigquery connection "shopify_discounts_proc".
2018-07-28 10:22:22,814: Acquiring new bigquery connection "shopify_refunds_proc".
2018-07-28 10:22:22,817: Acquiring new bigquery connection "shopify_customers_proc".
2018-07-28 10:22:22,817: Re-using an available connection from the pool.
2018-07-28 10:22:22,817: Fetching data for query shopify_discounts_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:22,818: Re-using an available connection from the pool.
2018-07-28 10:22:22,818: Fetching data for query shopify_refunds_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:22,818: Re-using an available connection from the pool.
2018-07-28 10:22:22,819: Fetching data for query shopify_customers_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:24,140: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:22:24,219: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:22:24,239: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_customers_proc"
2018-07-28 10:22:24,241: Fetching data for query shopify_customers_proc:
create or replace table `template`.`shopify_customers_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`





with customers as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:22:24,315: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_discounts_proc"
2018-07-28 10:22:24,316: Fetching data for query shopify_discounts_proc:
create or replace table `template`.`shopify_discounts_proc`
  
  as (
    



with orders as (

	
		SELECT
		'lucadanni' store_name,
		created_at,
		order_number,
		code discount_code,
		type discount_type,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(discount_codes)
		where source_name != 'shopify_draft_order'
	
	
	

)

SELECT
store_name,
order_number,
discount_code,
discount_type
FROM orders
where lv = _sdc_sequence


  );

    
2018-07-28 10:22:24,527: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:22:24,628: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_refunds_proc"
2018-07-28 10:22:24,628: Fetching data for query shopify_refunds_proc:
create or replace table `template`.`shopify_refunds_proc`
  
  as (
    



with refunds as (

	
	SELECT
	'lucadanni' store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
    store_name,
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


  );

    
2018-07-28 10:22:26,780: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111271a58>]}
2018-07-28 10:22:27,072: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11135ce48>]}
2018-07-28 10:22:28,035: 10:22:28 | 5 of 21 OK created table model template.shopify_refunds_proc......... [OK in 3.99s]
2018-07-28 10:22:28,711: 10:22:28 | 6 of 21 OK created table model template.shopify_discounts_proc....... [OK in 4.28s]
2018-07-28 10:22:30,067: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11135ce80>]}
2018-07-28 10:22:30,294: 10:22:30 | 7 of 21 OK created table model template.shopify_customers_proc....... [OK in 7.27s]
2018-07-28 10:22:30,295: 10:22:30 | 8 of 21 START table model template.ga_transactions................... [RUN]
2018-07-28 10:22:30,295: 10:22:30 | 9 of 21 START table model template.shopify_products_proc............. [RUN]
2018-07-28 10:22:30,295: Compiling model.shopify_cohort_analysis.ga_transactions
2018-07-28 10:22:30,295: 10:22:30 | 10 of 21 START table model template.agg_customers.................... [RUN]
2018-07-28 10:22:30,296: Compiling model.shopify_cohort_analysis.shopify_products_proc
2018-07-28 10:22:30,302: Compiling model.shopify_cohort_analysis.agg_customers
2018-07-28 10:22:30,308: Acquiring new bigquery connection "ga_transactions".
2018-07-28 10:22:30,314: Writing injected SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:22:30,314: Re-using an available connection from the pool.
2018-07-28 10:22:30,314: Fetching data for query ga_transactions:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:30,332: Acquiring new bigquery connection "shopify_products_proc".
2018-07-28 10:22:30,332: Re-using an available connection from the pool.
2018-07-28 10:22:30,332: Fetching data for query shopify_products_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:30,337: Acquiring new bigquery connection "agg_customers".
2018-07-28 10:22:30,337: Re-using an available connection from the pool.
2018-07-28 10:22:30,508: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_customers"
2018-07-28 10:22:30,509: Fetching data for query agg_customers:
create or replace table `template`.`agg_customers`
  
  as (
    SELECT 
account,
store,
id,
created_at,
first_name,
last_name,
email,
split(email,'@')[SAFE_ORDINAL(2)] email_domain
FROM
`growth-engines-pipeline`.`template`.`shopify_customers_proc`
  );

    
2018-07-28 10:22:30,969: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:22:31,075: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_products_proc"
2018-07-28 10:22:31,076: Fetching data for query shopify_products_proc:
create or replace table `template`.`shopify_products_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' store_name,
	'Shopify' as lookup_platform,
	product_name,
	lower(product_type) product_type,
	product_id,
	sku,
	id variant_id,
	cast(created_at as date) created_at,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM (
		SELECT
		variants,
		product_type,
		title product_name,
		_sdc_sequence
		FROM `growth-engines-pipeline.shopify_lucadanni.products` 
		)
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.store,
b.platform,
max(product_type) product_type,
product_id,
variant_id,
sku,
created_at,
product_name
FROM products a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, store, platform, sku, variant_id, created_at, product_name


  );

    
2018-07-28 10:22:31,682: Writing injected SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:22:31,789: Writing runtime SQL for node "model.shopify_cohort_analysis.ga_transactions"
2018-07-28 10:22:31,790: Fetching data for query ga_transactions:
create or replace table `template`.`ga_transactions`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`,`growth-engines-pipeline`.`template`.`mappings_ga_proc`




with ga_report as (

	    
	    	
		   	SELECT
		   	'yandy' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   
	    	
		   	SELECT
		   	'lucadanni' as store_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			cast(date as date) date,
			lower(source) source,
			lower(medium) medium,
			lower(replace(replace(replace(campaign,' ', ''),'-',''),'_','')) campaign,
			cast(regexp_replace(transactionid, r'#|B', '') as int64) transactionid,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
date,
b.store store,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
url,
transactionid
FROM (

	SELECT 
	store_name,
	lookup_platform,
	date,
	transactionid,
	max(url) url,
	max(source) source,
	max(medium) medium,
	max(campaign) campaign
	FROM ga_report
	where lv = _sdc_sequence
	group by store_name, lookup_platform, date, transactionid

) a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.store_name = c.store_name )


  );

    
2018-07-28 10:22:33,281: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111293b38>]}
2018-07-28 10:22:33,521: 10:22:33 | 9 of 21 OK created table model template.shopify_products_proc........ [OK in 2.98s]
2018-07-28 10:22:35,032: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de03780>]}
2018-07-28 10:22:35,529: 10:22:35 | 10 of 21 OK created table model template.agg_customers............... [OK in 4.73s]
2018-07-28 10:22:56,385: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11123cbe0>]}
2018-07-28 10:22:57,385: 10:22:57 | 8 of 21 OK created table model template.ga_transactions.............. [OK in 26.09s]
2018-07-28 10:22:57,387: 10:22:57 | 11 of 21 START table model template.shopify_orders_proc.............. [RUN]
2018-07-28 10:22:57,387: Compiling model.shopify_cohort_analysis.shopify_orders_proc
2018-07-28 10:22:57,410: Acquiring new bigquery connection "shopify_orders_proc".
2018-07-28 10:22:57,411: Re-using an available connection from the pool.
2018-07-28 10:22:57,411: Fetching data for query shopify_orders_proc:


        select
            store_name as value

        from `growth-engines-pipeline`.`template`.`stores_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-07-28 10:22:58,832: Writing injected SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:22:59,267: Writing runtime SQL for node "model.shopify_cohort_analysis.shopify_orders_proc"
2018-07-28 10:22:59,268: Fetching data for query shopify_orders_proc:
create or replace table `template`.`shopify_orders_proc`
  
  as (
    -- depends_on: `growth-engines-pipeline`.`template`.`stores_proc`, `growth-engines-pipeline`.`template`.`shopify_refunds_proc`, `growth-engines-pipeline`.`template`.`shopify_discounts_proc`





with orders as (

	
	SELECT 
	store_name,
	lookup_platform,
	created_at,
	order_number,
	quantity,
	price, 
	total_order_price_undiscounted,
	total_discounts,
	total_order_shipping_price,
	total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	line_item_id,
	customer_id,
	_sdc_sequence,
	lv
	FROM (

		SELECT
		'lucadanni' store_name,
		'Shopify' as lookup_platform,
		created_at,
		order_number,
		quantity,
		cast(pre_tax_price as float64) price, 
		total_line_items_price total_order_price_undiscounted,
		total_discounts,
		cast(discounted_price as float64) total_order_shipping_price,
		total_price_usd total_order_price_incl_shipping,
		checkout_id,
		product_id, 
		landing_site,
		sku, 
		variant_title, 
		variant_id,
		_id line_item_id,
		customer.id customer_id,
		_sdc_sequence,
		first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
		FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
		cross join unnest(line_items), unnest(shipping_lines)
		where source_name != 'shopify_draft_order'
	)
	
	
	

)

SELECT
b.account,
b.store,
b.platform,
created_at,
a.order_number,
a.quantity prelim_quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as quantity,
price prelim_revenue, 
total_order_price_undiscounted,
total_discounts,
trim(lower(d.discount_code)) discount_code,
d.discount_type,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as revenue,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`template`.`stores_proc` b 
ON ( a.store_name = b.store_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id
	AND a.store_name = c.store_name )
LEFT JOIN `growth-engines-pipeline`.`template`.`shopify_discounts_proc` d
ON ( a.order_number = d.order_number 
    AND a.store_name = d.store_name )  	
where a.lv = a._sdc_sequence


  );

    
2018-07-28 10:23:10,733: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111271b00>]}
2018-07-28 10:23:10,998: 10:23:10 | 11 of 21 OK created table model template.shopify_orders_proc......... [OK in 13.35s]
2018-07-28 10:23:11,000: 10:23:11 | 12 of 21 START table model template.transaction_by_order_number...... [RUN]
2018-07-28 10:23:11,000: Compiling model.shopify_cohort_analysis.transaction_by_order_number
2018-07-28 10:23:11,008: Writing injected SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:23:11,010: Acquiring new bigquery connection "transaction_by_order_number".
2018-07-28 10:23:11,010: Re-using an available connection from the pool.
2018-07-28 10:23:11,424: Writing runtime SQL for node "model.shopify_cohort_analysis.transaction_by_order_number"
2018-07-28 10:23:11,425: Fetching data for query transaction_by_order_number:
create or replace table `template`.`transaction_by_order_number`
  
  as (
    SELECT
store,
cast(created_at as date) order_date,
order_number,
customer_id,
sum(quantity) quantity,
sum(revenue) revenue,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`template`.`shopify_orders_proc`
GROUP BY store, order_date, order_number, customer_id
  );

    
2018-07-28 10:23:16,752: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11123cbe0>]}
2018-07-28 10:23:18,320: 10:23:18 | 12 of 21 OK created table model template.transaction_by_order_number. [OK in 5.75s]
2018-07-28 10:23:18,323: 10:23:18 | 13 of 21 START table model template.customers_by_transaction......... [RUN]
2018-07-28 10:23:18,324: Compiling model.shopify_cohort_analysis.customers_by_transaction
2018-07-28 10:23:18,334: Writing injected SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:23:18,336: Acquiring new bigquery connection "customers_by_transaction".
2018-07-28 10:23:18,336: Re-using an available connection from the pool.
2018-07-28 10:23:18,789: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_by_transaction"
2018-07-28 10:23:18,789: Fetching data for query customers_by_transaction:
create or replace table `template`.`customers_by_transaction`
  
  as (
    SELECT
store,
customer_id,
order_number,
order_date,
recent_order_date,
first_order_date,
case when first_order_number = order_number then 'New'
	when date_diff(order_date, recent_order_date, DAY) <= 365 then 'Repeat'
	when date_diff(order_date, recent_order_date, DAY) > 365 then 'Reactivated'
 else '' end as order_type,
quantity,
revenue,
1 as orders,
first_order_revenue,
lifetime_revenue
FROM

(

	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	quantity,
	revenue,
	lag(order_date) over w1 recent_order_date,
	first_value(order_date) over w1 first_order_date,
	first_value(order_number) over w1 first_order_number,
	first_value(revenue) over w1 first_order_revenue,
	sum(revenue) over w2 lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`transaction_by_order_number`
	WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc),
	w2 as (PARTITION BY store, customer_id)
)
  );

    
2018-07-28 10:23:23,336: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111271b00>]}
2018-07-28 10:23:23,955: 10:23:23 | 13 of 21 OK created table model template.customers_by_transaction.... [OK in 5.01s]
2018-07-28 10:23:23,958: 10:23:23 | 14 of 21 START table model template.agg_transactions................. [RUN]
2018-07-28 10:23:23,959: Compiling model.shopify_cohort_analysis.agg_transactions
2018-07-28 10:23:23,967: Writing injected SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:23:23,968: Acquiring new bigquery connection "agg_transactions".
2018-07-28 10:23:23,968: Re-using an available connection from the pool.
2018-07-28 10:23:24,935: Writing runtime SQL for node "model.shopify_cohort_analysis.agg_transactions"
2018-07-28 10:23:24,936: Fetching data for query agg_transactions:
create or replace table `template`.`agg_transactions`
  
  as (
    with ga_transaction as (

	SELECT
	date, 
	store,
	transactionid,
	channel,
	platform,
	url,
	campaign
	FROM `growth-engines-pipeline`.`template`.`ga_transactions`
),

customers_by_transaction as (
	
	SELECT
	store,
	customer_id,
	order_number,
	order_date,
	first_order_date,
	recent_order_date,
	order_type,
	quantity,
	revenue,
	orders,
	first_order_revenue,
	lifetime_revenue
	FROM `growth-engines-pipeline`.`template`.`customers_by_transaction`
)

SELECT
store,
customer_id,
order_number,
transactionid,
order_date,
first_order_date,
format_date("%Y-%m", first_order_date) AS first_order_month,
order_type,
first_order_revenue,
lifetime_revenue,
first_value(channel) over w1 as first_order_channel,
first_value(platform) over w1 as first_order_platform,
channel,
platform,
url,
campaign,
quantity,
revenue,
orders
FROM (

	SELECT
	a.store,
	a.customer_id,
	a.order_number,
	b.transactionid,
	a.order_date, 
	a.first_order_date, 
	a.order_type,
	a.first_order_revenue,
	a.lifetime_revenue,
	b.channel,
	b.platform,
	b.url,
	b.campaign,
	a.quantity,
	a.revenue,
	a.orders
	FROM customers_by_transaction a
	LEFT JOIN ga_transaction b
	ON (
	    a.store = b.store AND
	    a.order_number = b.transactionid
	)	
)
WINDOW w1 as (PARTITION BY store, customer_id ORDER BY order_date asc)
  );

    
2018-07-28 10:23:33,629: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11123cbe0>]}
2018-07-28 10:23:34,884: 10:23:34 | 14 of 21 OK created table model template.agg_transactions............ [OK in 9.67s]
2018-07-28 10:23:34,885: 10:23:34 | 15 of 21 START table model template.monthly_cohort_stats............. [RUN]
2018-07-28 10:23:34,885: 10:23:34 | 16 of 21 START table model template.customers_proc_yoy............... [RUN]
2018-07-28 10:23:34,885: Compiling model.shopify_cohort_analysis.monthly_cohort_stats
2018-07-28 10:23:34,885: 10:23:34 | 17 of 21 START table model template.customers_proc_qoq............... [RUN]
2018-07-28 10:23:34,886: Compiling model.shopify_cohort_analysis.customers_proc_yoy
2018-07-28 10:23:34,892: Writing injected SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:23:34,892: Compiling model.shopify_cohort_analysis.customers_proc_qoq
2018-07-28 10:23:34,920: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:23:34,926: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:23:34,935: Acquiring new bigquery connection "customers_proc_yoy".
2018-07-28 10:23:34,938: Acquiring new bigquery connection "monthly_cohort_stats".
2018-07-28 10:23:34,938: Re-using an available connection from the pool.
2018-07-28 10:23:34,939: Re-using an available connection from the pool.
2018-07-28 10:23:34,942: Acquiring new bigquery connection "customers_proc_qoq".
2018-07-28 10:23:34,944: Re-using an available connection from the pool.
2018-07-28 10:23:35,699: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_yoy"
2018-07-28 10:23:35,712: Fetching data for query customers_proc_yoy:
create or replace table `template`.`customers_proc_yoy`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 365 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Year' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 365 window_end_unix_date, 
    unix_date_in_range - 730 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:23:35,712: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc_qoq"
2018-07-28 10:23:35,723: Fetching data for query customers_proc_qoq:
create or replace table `template`.`customers_proc_qoq`
  
  as (
    WITH customers AS (

  SELECT 
  store,
  customer_id,
  order_date,
  unix_date(order_date) unix_order_date, 
  first_order_date,
  unix_date(first_order_date) first_order_unix_date,
  first_order_revenue,
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
PERCENTILE_CONT(revenue, 0.90) OVER w1 AS revenue_90pct,
PERCENTILE_CONT(revenue, 0.10) OVER w1 AS revenue_10pct
FROM (
   
  SELECT 
  store,
  period,
  customer_id,
  date,
  window_end_unix_date,
  window_start_unix_date,
  first_order_unix_date,
  window_end_unix_date - unix_date(recent_order) recency_days,
  first_order_channel,
  first_order_platform,
  quantity,
  revenue, 
  frequency
  FROM 
  (  

    SELECT 
    store,
    'Rolling Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range window_end_unix_date, 
    unix_date_in_range - 90 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 90 )
    AND customers.unix_order_date <= daterange.unix_date_in_range
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

    UNION ALL

    SELECT 
    store,
    'Rolling Previous Quarter' as period,
    customer_id,
    date_in_range date,
    unix_date_in_range, 
    unix_date_in_range - 90 window_end_unix_date, 
    unix_date_in_range - 180 window_start_unix_date, 
    first_order_unix_date,
    first_order_channel,
    first_order_platform,
    max(order_date) recent_order,
    sum(quantity) as quantity,
    sum(revenue) as revenue,
    sum(orders) as frequency
    FROM daterange
    JOIN customers
    ON customers.unix_order_date > ( daterange.unix_date_in_range - 180 )
    AND customers.unix_order_date <= ( daterange.unix_date_in_range - 90 )
    GROUP BY store, customer_id, date, unix_date_in_range, window_end_unix_date, 
    window_start_unix_date, first_order_unix_date, first_order_channel, first_order_platform

  )
)
WINDOW w1 as (PARTITION BY store, period, date)
  );

    
2018-07-28 10:23:35,740: Writing runtime SQL for node "model.shopify_cohort_analysis.monthly_cohort_stats"
2018-07-28 10:23:35,740: Fetching data for query monthly_cohort_stats:
create or replace table `template`.`monthly_cohort_stats`
  
  as (
    WITH transactions AS (

  SELECT 
  store, 
  order_number,
  order_date,
  order_type,
  first_order_month,
  unix_date(order_date) d, 
  customer_id, 
  first_order_channel,
  first_order_platform,
  channel,
  platform,
  url,
  campaign,
  quantity,
  revenue,
  orders
  FROM `growth-engines-pipeline`.`template`.`agg_transactions`
),

daterange AS (

  SELECT * FROM `growth-engines-pipeline`.`template`.`monthend_dates`    
)

SELECT 
date_in_range month,
unix_date_in_range, 
unix_date_in_range_bom, 
store, 
order_type,
first_order_channel,
first_order_platform,
first_order_month,
channel,
platform,
url,
campaign,
count(distinct(customer_id)) buyers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN transactions
ON transactions.d >= daterange.unix_date_in_range_bom 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY month, unix_date_in_range, unix_date_in_range_bom, store, order_type, 
first_order_channel, first_order_platform, first_order_month, channel, platform, url, campaign
  );

    
2018-07-28 10:23:41,647: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111293ef0>]}
2018-07-28 10:23:42,252: 10:23:42 | 15 of 21 OK created table model template.monthly_cohort_stats........ [OK in 6.76s]
2018-07-28 10:23:50,340: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1112a0978>]}
2018-07-28 10:23:50,573: 10:23:50 | 17 of 21 OK created table model template.customers_proc_qoq.......... [OK in 15.45s]
2018-07-28 10:23:58,649: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa5df28>]}
2018-07-28 10:23:58,875: 10:23:58 | 16 of 21 OK created table model template.customers_proc_yoy.......... [OK in 23.76s]
2018-07-28 10:23:58,876: 10:23:58 | 18 of 21 START table model template.customers_proc................... [RUN]
2018-07-28 10:23:58,876: Compiling model.shopify_cohort_analysis.customers_proc
2018-07-28 10:23:58,888: Writing injected SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:23:58,890: Acquiring new bigquery connection "customers_proc".
2018-07-28 10:23:58,890: Re-using an available connection from the pool.
2018-07-28 10:23:59,319: Writing runtime SQL for node "model.shopify_cohort_analysis.customers_proc"
2018-07-28 10:23:59,320: Fetching data for query customers_proc:
create or replace table `template`.`customers_proc`
  
  as (
    SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_qoq`

UNION ALL

SELECT 
store,
period,
customer_id,
date,
window_end_unix_date,
window_start_unix_date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct
FROM 
`growth-engines-pipeline`.`template`.`customers_proc_yoy`
  );

    
2018-07-28 10:24:23,724: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11123cbe0>]}
2018-07-28 10:24:25,642: 10:24:25 | 18 of 21 OK created table model template.customers_proc.............. [OK in 24.85s]
2018-07-28 10:24:25,643: 10:24:25 | 19 of 21 START table model template.segment_proc_customers........... [RUN]
2018-07-28 10:24:25,644: Compiling model.shopify_cohort_analysis.segment_proc_customers
2018-07-28 10:24:25,651: Writing injected SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:24:25,655: Acquiring new bigquery connection "segment_proc_customers".
2018-07-28 10:24:25,656: Re-using an available connection from the pool.
2018-07-28 10:24:25,809: Writing runtime SQL for node "model.shopify_cohort_analysis.segment_proc_customers"
2018-07-28 10:24:25,810: Fetching data for query segment_proc_customers:
create or replace table `template`.`segment_proc_customers`
  
  as (
    SELECT
store,
period,
customer_id,
date,
first_order_unix_date,
first_order_channel,
first_order_platform,
recency_days,
frequency,
quantity,
revenue, 
revenue_90pct,
revenue_10pct,
case when first_order_unix_date >= window_start_unix_date then 'New'
	else 'Existing' end as newness_segment,
case when revenue >= revenue_90pct then 'Whale'
	when revenue <= revenue_10pct then 'Minnow'
	else 'Bristlemouth' end as revenue_segment,
case when frequency = 1 then '1'
	when frequency = 2 then '2'
	when frequency > 2 then '3+'
	else null end as frequency_segment
FROM `growth-engines-pipeline`.`template`.`customers_proc`
  );

    
2018-07-28 10:24:53,787: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa5df28>]}
2018-07-28 10:24:54,913: 10:24:54 | 19 of 21 OK created table model template.segment_proc_customers...... [OK in 28.14s]
2018-07-28 10:24:54,914: 10:24:54 | 20 of 21 START table model template.segment_stats_customers_agg...... [RUN]
2018-07-28 10:24:54,915: Compiling model.shopify_cohort_analysis.segment_stats_customers_agg
2018-07-28 10:24:54,927: Writing injected SQL for node "model.shopify_cohort_analysis.segment_stats_customers_agg"
2018-07-28 10:24:54,928: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-07-28 10:24:54,929: Re-using an available connection from the pool.
2018-07-28 10:24:55,102: Writing runtime SQL for node "model.shopify_cohort_analysis.segment_stats_customers_agg"
2018-07-28 10:24:55,103: Fetching data for query segment_stats_customers_agg:
create or replace table `template`.`segment_stats_customers_agg`
  
  as (
    WITH ty as (

	SELECT
	store,
	'Rolling YoY' as period,
	date,
	customer_id,
	first_order_channel,
	first_order_platform,
	revenue_segment as revenue_segment,
	frequency_segment as frequency_segment,
	newness_segment as newness_segment,
	recency_days as recency,
	frequency as frequency,
	revenue as revenue,
	'' as revenue_segment_prev,
	'' as frequency_segment_prev,
	'' as newness_segment_prev,
	0 as recency_prev,
	0 as frequency_prev,
	0 as revenue_prev
	FROM `growth-engines-pipeline`.`template`.`segment_proc_customers`
	WHERE period = 'Rolling Year'

),

this_month_1yr as (

	SELECT
	store,
	'Rolling YoY' as period,
	date,
	customer_id,
	first_order_channel,
	first_order_platform,	
	revenue_segment as revenue_segment,
	frequency_segment as frequency_segment,
	newness_segment as newness_segment,
	recency_days as recency,
	frequency as frequency,
	revenue as revenue,
	'' as revenue_segment_prev,
	'' as frequency_segment_prev,
	'' as newness_segment_prev,
	0 as recency_prev,
	0 as frequency_prev,
	0 as revenue_prev	
	FROM `growth-engines-pipeline`.`template`.`segment_proc_customers`
	WHERE period = 'Rolling Previous Year'

),

this_quarter as (

	SELECT
	store,
	'Rolling QoQ' as period,	
	date,
	customer_id,
	first_order_channel,
	first_order_platform,	
	revenue_segment as revenue_segment,
	frequency_segment as frequency_segment,
	newness_segment as newness_segment,
	recency_days as recency,
	frequency as frequency,
	revenue as revenue,
	'' as revenue_segment_prev,
	'' as frequency_segment_prev,
	'' as newness_segment_prev,
	0 as recency_prev,
	0 as frequency_prev,
	0 as revenue_prev	
	FROM `growth-engines-pipeline`.`template`.`segment_proc_customers`
	WHERE period = 'Rolling Quarter'

),

last_quarter as (

	SELECT
	store,
	'Rolling QoQ' as period,
	date,
	customer_id,
	first_order_channel,
	first_order_platform,	
	revenue_segment as revenue_segment,
	frequency_segment as frequency_segment,
	newness_segment as newness_segment,
	recency_days as recency,
	frequency as frequency,
	revenue as revenue,
	'' as revenue_segment_prev,
	'' as frequency_segment_prev,
	'' as newness_segment_prev,
	0 as recency_prev,
	0 as frequency_prev,
	0 as revenue_prev		
	FROM `growth-engines-pipeline`.`template`.`segment_proc_customers`
	WHERE period = 'Rolling Previous Quarter'

)

SELECT
store,
period,
date, 
customer_id,
1 as buyers,
first_order_channel,
first_order_platform,	
case when max(revenue_segment) != '' then max(revenue_segment) 
	when max(revenue_segment_prev) != '' then 'Dormant'
	else '' end as revenue_segment,
case when max(newness_segment) = 'New' then 'New since prior period' 
	else max(revenue_segment_prev) end as revenue_segment_prev,
case when max(frequency_segment) != '' then max(frequency_segment) 
	when max(frequency_segment_prev) != '' then 'Dormant'
	else '' end as frequency_segment,
case when max(newness_segment) = 'New' then 'New since prior period' 
	else max(frequency_segment_prev) end as frequency_segment_prev,
ifnull(sum(recency), 0) recency,
ifnull(sum(frequency), 0) frequency,
ifnull(sum(revenue), 0) revenue,
ifnull(sum(recency_prev), 0) recency_prev,
ifnull(sum(frequency_prev), 0) frequency_prev,
ifnull(sum(revenue_prev), 0) revenue_prev
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM this_month_1yr
	UNION ALL
	SELECT * FROM this_quarter
	UNION ALL
	SELECT * FROM last_quarter

)
GROUP BY store, period, date, customer_id, first_order_channel, first_order_platform
  );

    
2018-07-28 10:25:28,304: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11123cbe0>]}
2018-07-28 10:25:29,759: 10:25:29 | 20 of 21 OK created table model template.segment_stats_customers_agg. [OK in 33.39s]
2018-07-28 10:25:29,760: 10:25:29 | 21 of 21 START table model template.buyer_segment_stats.............. [RUN]
2018-07-28 10:25:29,761: Compiling model.shopify_cohort_analysis.buyer_segment_stats
2018-07-28 10:25:29,777: Writing injected SQL for node "model.shopify_cohort_analysis.buyer_segment_stats"
2018-07-28 10:25:29,779: Acquiring new bigquery connection "buyer_segment_stats".
2018-07-28 10:25:29,779: Re-using an available connection from the pool.
2018-07-28 10:25:29,927: Writing runtime SQL for node "model.shopify_cohort_analysis.buyer_segment_stats"
2018-07-28 10:25:29,930: Fetching data for query buyer_segment_stats:
create or replace table `template`.`buyer_segment_stats`
  
  as (
    SELECT
store,
period,
date,
'Overall' as view,
'Overall' as view_segment,
'Revenue' as segment_type,
revenue_segment as segment,
revenue_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where revenue_segment != ''
and revenue_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type

UNION ALL

SELECT
store,
date,
'First Order Channel' as view,
first_order_channel as view_segment,
'Revenue' as segment_type,
revenue_segment as segment,
revenue_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where revenue_segment != ''
and revenue_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type

UNION ALL

SELECT
store,
date,
'First Order Platform' as view,
first_order_platform as view_segment,
'Revenue' as segment_type,
revenue_segment as segment,
revenue_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where revenue_segment != ''
and revenue_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type

UNION ALL

SELECT
store,
period,
date,
'Overall' as view,
'Overall' as view_segment,
'Frequency' as segment_type,
frequency_segment as segment,
frequency_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where frequency_segment != ''
and frequency_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type

UNION ALL

SELECT
store,
date,
'First Order Channel' as view,
first_order_channel as view_segment,
'Frequency' as segment_type,
frequency_segment as segment,
frequency_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where frequency_segment != ''
and frequency_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type

UNION ALL

SELECT
store,
date,
'First Order Platform' as view,
first_order_platform as view_segment,
'Frequency' as segment_type,
frequency_segment as segment,
frequency_segment_prev as segment_prev,
sum(buyers) buyers,
case when sum(buyers) > 0 then sum(recency)/sum(buyers) else null end as  recency,
sum(frequency) frequency,
sum(revenue) revenue,
case when sum(frequency) > 0 then sum(revenue)/sum(frequency) else null end as aov,
case when sum(buyers) > 0 then sum(recency_prev)/sum(buyers) else null end as  recency_prev,
sum(frequency_prev) frequency_prev,
sum(revenue_prev) revenue_prev,
case when sum(frequency_prev) > 0 then sum(revenue_prev)/sum(frequency_prev) else null end as aov_prev
FROM `growth-engines-pipeline`.`template`.`segment_stats_customers_agg`
where frequency_segment != ''
and frequency_segment_prev != ''
GROUP BY store, date, segment, segment_prev, view, view_segment, segment_type
  );

    
2018-07-28 10:25:30,312: Bad request while running:
create dataset
2018-07-28 10:25:30,312: 400 GET https://www.googleapis.com/bigquery/v2/projects/growth-engines-pipeline/queries/1fd8bd44-789b-4ee6-a5ab-2edffdcfca83?maxResults=0: SELECT list expression references column period which is neither grouped nor aggregated at [6:1]
2018-07-28 10:25:30,313: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'c2462f6c-ed33-451d-b4f3-a3105f6da0ef', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dea91d0>]}
2018-07-28 10:25:30,542: 10:25:30 | 21 of 21 ERROR creating table model template.buyer_segment_stats..... [ERROR in 0.55s]
2018-07-28 10:25:30,566: 10:25:30 | 
2018-07-28 10:25:30,567: 10:25:30 | Finished running 21 table models in 193.42s.
2018-07-28 10:25:30,567: Connection 'master' was left open.
2018-07-28 10:25:30,567: 
2018-07-28 10:25:30,568: Completed with 1 errors:
2018-07-28 10:25:30,568: 
2018-07-28 10:25:30,568: Database Error in model buyer_segment_stats (models/math/buyer-segmentation/buyer_segment_stats.sql)
2018-07-28 10:25:30,568:   SELECT list expression references column period which is neither grouped nor aggregated at [6:1]
2018-07-28 10:25:30,569:   compiled SQL at target/run/shopify_cohort_analysis/math/buyer-segmentation/buyer_segment_stats.sql
2018-07-28 10:25:30,569: 
Done. PASS=20 ERROR=1 SKIP=0 TOTAL=21
2018-07-28 10:25:30,570: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111238438>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1112af390>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1112af048>]}
2018-07-28 10:25:31,047: Flushing usage events
2018-07-28 10:25:31,420: sys:1: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60745), raddr=('172.217.12.10', 443)>

2018-07-28 10:25:31,421: sys:1: ResourceWarning: unclosed <socket.socket fd=20, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60746), raddr=('172.217.12.10', 443)>

2018-07-28 10:25:31,421: sys:1: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60744), raddr=('172.217.3.10', 443)>

2018-07-28 10:25:31,422: sys:1: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60743), raddr=('172.217.2.13', 443)>

2018-07-28 10:25:31,424: sys:1: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60742), raddr=('172.217.2.13', 443)>

2018-07-28 10:25:31,425: sys:1: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60740), raddr=('172.217.2.13', 443)>

2018-07-28 10:25:31,425: sys:1: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60741), raddr=('172.217.2.13', 443)>

2018-07-28 10:25:31,426: sys:1: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60739), raddr=('172.217.3.10', 443)>

2018-07-28 10:25:31,426: sys:1: ResourceWarning: unclosed <socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60738), raddr=('172.217.2.13', 443)>

2018-07-28 10:25:31,427: sys:1: ResourceWarning: unclosed <socket.socket fd=21, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('10.5.50.21', 60747), raddr=('172.217.12.10', 443)>

