2018-04-06 17:21:15,745: Tracking: tracking
2018-04-06 17:21:15,752: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123e4cc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123e4eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1123e4358>]}
2018-04-06 17:21:16,465: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 17:21:16,489: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 17:21:16,492: Parsing get_column_values.sql
2018-04-06 17:21:16,511: Parsing get_url_parameter.sql
2018-04-06 17:21:16,518: Parsing split_part.sql
2018-04-06 17:21:16,527: Parsing table_exists.sql
2018-04-06 17:21:16,545: Parsing core.sql
2018-04-06 17:21:16,575: Parsing adapters/bigquery.sql
2018-04-06 17:21:16,584: Parsing adapters/common.sql
2018-04-06 17:21:16,605: Parsing adapters/postgres.sql
2018-04-06 17:21:16,611: Parsing adapters/redshift.sql
2018-04-06 17:21:16,633: Parsing etc/get_custom_schema.sql
2018-04-06 17:21:16,641: Parsing materializations/archive.sql
2018-04-06 17:21:16,676: Parsing materializations/bigquery.sql
2018-04-06 17:21:16,693: Parsing materializations/helpers.sql
2018-04-06 17:21:16,712: Parsing materializations/incremental.sql
2018-04-06 17:21:16,743: Parsing materializations/table.sql
2018-04-06 17:21:16,766: Parsing materializations/view.sql
2018-04-06 17:21:16,785: Parsing materializations/wrapper.sql
2018-04-06 17:21:16,790: Parsing schema_tests/accepted_values.sql
2018-04-06 17:21:16,797: Parsing schema_tests/not_null.sql
2018-04-06 17:21:16,802: Parsing schema_tests/relationships.sql
2018-04-06 17:21:16,807: Parsing schema_tests/unique.sql
2018-04-06 17:21:16,868: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 17:21:16,870: Parsing model.agency_data_pipeline.all_dates
2018-04-06 17:21:16,872: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 17:21:16,873: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 17:21:16,876: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:21:16,878: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:21:16,881: Acquiring new bigquery connection "master".
2018-04-06 17:21:16,881: Opening a new connection (0 currently allocated)
2018-04-06 17:21:16,889: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 17:21:16,893: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 17:21:16,899: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:21:16,902: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 17:21:16,906: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:21:16,911: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 17:21:16,917: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 17:21:16,921: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 17:21:16,925: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:21:16,931: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:21:16,936: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:21:16,940: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:21:16,944: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 17:21:16,952: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 17:21:16,958: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:21:16,963: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:21:16,969: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:21:16,971: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 17:21:16,973: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 17:21:16,989: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 17:21:17,001: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:21:17,003: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:21:17,006: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:21:17,013: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:21:17,022: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:21:17,030: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:21:17,035: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 17:21:17,038: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 17:21:17,040: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:21:17,044: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:21:17,047: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 17:21:17,049: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:21:17,051: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:21:17,054: Parsing model.agency_data_pipeline.agg_products
2018-04-06 17:21:17,055: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 17:21:17,057: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:21:17,059: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:21:17,061: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:21:17,063: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:21:17,065: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:21:17,067: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:21:17,069: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:21:17,071: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 17:21:17,074: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 17:21:17,079: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 17:21:17,081: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:21:17,083: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:21:17,086: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:21:17,088: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 17:21:17,090: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 17:21:17,092: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 17:21:17,096: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:21:17,099: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:21:17,100: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 17:21:17,103: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 17:21:17,105: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:21:17,109: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 17:21:17,111: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 17:21:17,114: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:21:17,116: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 17:21:17,119: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:21:17,121: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:21:17,123: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:21:17,127: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 17:21:17,129: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 17:21:17,131: Parsing model.agency_data_pipeline.products_proc
2018-04-06 17:21:17,133: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:21:17,135: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 17:21:17,137: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:21:17,162: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 17:21:17,221: 
2018-04-06 17:21:18,371: 17:21:18 | Concurrency: 4 threads (target='prod')
2018-04-06 17:21:18,371: 17:21:18 | 
2018-04-06 17:21:19,071: 17:21:19 | 1 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 17:21:19,072: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 17:21:19,071: 17:21:19 | 2 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 17:21:19,082: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 17:21:19,083: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:21:19,071: 17:21:19 | 3 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 17:21:19,072: 17:21:19 | 4 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 17:21:19,092: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 17:21:19,091: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 17:21:19,098: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 17:21:19,091: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 17:21:19,101: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 17:21:19,110: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 17:21:19,110: Opening a new connection (1 currently allocated)
2018-04-06 17:21:19,112: Acquiring new bigquery connection "monthend_dates".
2018-04-06 17:21:19,114: Acquiring new bigquery connection "adwords_urls".
2018-04-06 17:21:19,117: Opening a new connection (2 currently allocated)
2018-04-06 17:21:19,117: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 17:21:19,184: Opening a new connection (3 currently allocated)
2018-04-06 17:21:19,188: Opening a new connection (4 currently allocated)
2018-04-06 17:21:20,362: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 17:21:20,397: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 17:21:20,419: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 17:21:20,566: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 17:21:21,474: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e4898>]}
2018-04-06 17:21:21,772: 17:21:21 | 4 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 2.38s]
2018-04-06 17:21:21,773: 17:21:21 | 5 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 17:21:21,773: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 17:21:21,781: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 17:21:21,782: Acquiring new bigquery connection "accounts_proc".
2018-04-06 17:21:21,782: Re-using an available connection from the pool.
2018-04-06 17:21:22,464: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 17:21:22,617: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112694f28>]}
2018-04-06 17:21:22,683: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e4b38>]}
2018-04-06 17:21:22,781: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e44a8>]}
2018-04-06 17:21:22,882: 17:21:22 | 2 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 3.53s]
2018-04-06 17:21:22,884: 17:21:22 | 6 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 17:21:22,886: Compiling model.agency_data_pipeline.all_dates
2018-04-06 17:21:22,895: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 17:21:22,898: Acquiring new bigquery connection "all_dates".
2018-04-06 17:21:22,899: Re-using an available connection from the pool.
2018-04-06 17:21:23,177: 17:21:23 | 1 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 3.61s]
2018-04-06 17:21:23,178: 17:21:23 | 7 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 17:21:23,178: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 17:21:23,186: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 17:21:23,192: Acquiring new bigquery connection "ga_conversions".
2018-04-06 17:21:23,193: Re-using an available connection from the pool.
2018-04-06 17:21:23,585: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 17:21:23,639: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e4898>]}
2018-04-06 17:21:23,896: 17:21:23 | 3 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 3.69s]
2018-04-06 17:21:23,897: 17:21:23 | 8 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 17:21:23,897: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:21:23,906: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 17:21:23,911: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 17:21:23,913: Re-using an available connection from the pool.
2018-04-06 17:21:23,990: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 17:21:24,113: 17:21:24 | 5 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 1.87s]
2018-04-06 17:21:24,113: 17:21:24 | 9 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 17:21:24,114: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 17:21:24,123: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 17:21:24,124: Acquiring new bigquery connection "carts_proc".
2018-04-06 17:21:24,124: Re-using an available connection from the pool.
2018-04-06 17:21:24,584: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 17:21:24,694: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112694f28>]}
2018-04-06 17:21:24,781: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 17:21:24,899: 17:21:24 | 6 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.81s]
2018-04-06 17:21:24,899: 17:21:24 | 10 of 75 START table model agency_data_pipeline.clients_proc......... [RUN]
2018-04-06 17:21:24,899: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 17:21:24,904: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 17:21:24,906: Acquiring new bigquery connection "clients_proc".
2018-04-06 17:21:24,906: Re-using an available connection from the pool.
2018-04-06 17:21:25,188: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e4b38>]}
2018-04-06 17:21:25,485: 17:21:25 | 7 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.01s]
2018-04-06 17:21:25,485: 17:21:25 | 11 of 75 START table model agency_data_pipeline.adwords_campaigns.... [RUN]
2018-04-06 17:21:25,486: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:21:25,494: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 17:21:25,496: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 17:21:25,496: Re-using an available connection from the pool.
2018-04-06 17:21:25,638: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 17:21:25,871: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a49278>]}
2018-04-06 17:21:26,166: 17:21:26 | 9 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 1.76s]
2018-04-06 17:21:26,166: 17:21:26 | 12 of 75 START table model agency_data_pipeline.bing_ads_ads......... [RUN]
2018-04-06 17:21:26,166: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:21:26,172: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 17:21:26,173: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 17:21:26,173: Re-using an available connection from the pool.
2018-04-06 17:21:26,228: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 17:21:26,730: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a3fcc0>]}
2018-04-06 17:21:26,796: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a3cba8>]}
2018-04-06 17:21:26,812: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 17:21:26,957: 17:21:26 | 10 of 75 OK created table model agency_data_pipeline.clients_proc.... [CREATE TABLE in 1.83s]
2018-04-06 17:21:27,174: 17:21:27 | 8 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.90s]
2018-04-06 17:21:29,017: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a70400>]}
2018-04-06 17:21:29,235: 17:21:29 | 12 of 75 OK created table model agency_data_pipeline.bing_ads_ads.... [CREATE TABLE in 2.85s]
2018-04-06 17:21:29,526: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a3ca20>]}
2018-04-06 17:21:29,820: 17:21:29 | 11 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.04s]
2018-04-06 17:21:29,820: 17:21:29 | 13 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 17:21:29,821: 17:21:29 | 14 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 17:21:29,821: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:21:29,821: 17:21:29 | 15 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 17:21:29,821: 17:21:29 | 16 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 17:21:29,821: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:21:29,827: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 17:21:29,827: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:21:29,827: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 17:21:29,834: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 17:21:29,841: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 17:21:29,849: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 17:21:29,850: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 17:21:29,851: Re-using an available connection from the pool.
2018-04-06 17:21:29,851: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:29,853: Re-using an available connection from the pool.
2018-04-06 17:21:29,859: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:29,856: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 17:21:29,866: Re-using an available connection from the pool.
2018-04-06 17:21:29,868: Re-using an available connection from the pool.
2018-04-06 17:21:30,580: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
ifnull(trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])),'') as source,
ifnull(trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)]),'')) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:21:30,580: Bad request while running:
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
ifnull(trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])),'') as source,
ifnull(trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)]),'')) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:21:30,580: 400 No matching signature for function IFNULL for argument types: STRING. Supported signature: IFNULL(ANY, ANY) at [7:1]
2018-04-06 17:21:30,581: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126b4080>]}
2018-04-06 17:21:30,631: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 17:21:30,878: 17:21:30 | 14 of 75 ERROR creating table model agency_data_pipeline.ga_mcf_proc. [ERROR in 0.76s]
2018-04-06 17:21:30,879: 17:21:30 | 17 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 17:21:30,879: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:21:30,888: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 17:21:30,889: Re-using an available connection from the pool.
2018-04-06 17:21:30,889: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:31,020: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 17:21:31,102: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 17:21:31,249: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 17:21:31,750: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		     UNION ALL 
	   
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 17:21:31,776: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 17:21:31,796: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11264d3c8>]}
2018-04-06 17:21:31,987: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 17:21:32,103: 17:21:32 | 13 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 1.98s]
2018-04-06 17:21:32,103: 17:21:32 | 18 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 17:21:32,104: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 17:21:32,110: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 17:21:32,111: Acquiring new bigquery connection "adwords_ads".
2018-04-06 17:21:32,111: Re-using an available connection from the pool.
2018-04-06 17:21:32,765: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 17:21:33,938: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a49c18>]}
2018-04-06 17:21:34,009: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d0748>]}
2018-04-06 17:21:34,202: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d0198>]}
2018-04-06 17:21:34,649: 17:21:34 | 16 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 4.11s]
2018-04-06 17:21:34,650: 17:21:34 | 19 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 17:21:34,651: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:21:34,658: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 17:21:34,659: Re-using an available connection from the pool.
2018-04-06 17:21:34,659: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:34,872: 17:21:34 | 15 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.18s]
2018-04-06 17:21:34,874: 17:21:34 | 20 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 17:21:34,877: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:21:34,889: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 17:21:34,893: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 17:21:34,893: Re-using an available connection from the pool.
2018-04-06 17:21:35,039: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 17:21:35,127: 17:21:35 | 17 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.32s]
2018-04-06 17:21:35,650: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 17:21:35,787: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_yandy.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:21:36,113: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11264d3c8>]}
2018-04-06 17:21:36,330: 17:21:36 | 18 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 4.01s]
2018-04-06 17:21:37,854: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a49518>]}
2018-04-06 17:21:38,133: 17:21:38 | 20 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.98s]
2018-04-06 17:21:39,084: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126b46d8>]}
2018-04-06 17:21:39,378: 17:21:39 | 19 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 4.43s]
2018-04-06 17:21:39,380: 17:21:39 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 17:21:39,380: 17:21:39 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 17:21:39,381: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 17:21:39,381: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:21:39,411: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 17:21:39,412: Acquiring new bigquery connection "fb_ads".
2018-04-06 17:21:39,412: Re-using an available connection from the pool.
2018-04-06 17:21:39,412: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:39,413: Re-using an available connection from the pool.
2018-04-06 17:21:39,413: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:39,810: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 17:21:39,810: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 17:21:40,473: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		      UNION ALL 
	   
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:21:40,526: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 17:21:42,702: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a3ca20>]}
2018-04-06 17:21:43,037: 17:21:43 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.32s]
2018-04-06 17:21:46,157: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a63438>]}
2018-04-06 17:21:46,516: 17:21:46 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.78s]
2018-04-06 17:21:46,516: 17:21:46 | 23 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 17:21:46,517: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:21:46,523: 17:21:46 | 24 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 17:21:46,537: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 17:21:46,539: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 17:21:46,549: Re-using an available connection from the pool.
2018-04-06 17:21:46,524: 17:21:46 | 25 of 75 SKIP relation agency_data_pipeline.ga_mcf_stats............. [SKIP]
2018-04-06 17:21:46,551: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:46,573: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 17:21:46,536: 17:21:46 | 26 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 17:21:46,579: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 17:21:46,569: 17:21:46 | 27 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 17:21:46,584: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:21:46,584: Re-using an available connection from the pool.
2018-04-06 17:21:46,584: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:21:46,610: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 17:21:46,628: Re-using an available connection from the pool.
2018-04-06 17:21:46,629: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:46,659: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 17:21:46,663: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 17:21:46,664: Re-using an available connection from the pool.
2018-04-06 17:21:46,929: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 17:21:47,046: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 17:21:47,260: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 17:21:47,318: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 17:21:47,673: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 17:21:47,695: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 17:21:49,495: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124e2470>]}
2018-04-06 17:21:49,706: 17:21:49 | 26 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.91s]
2018-04-06 17:21:49,900: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124ee0b8>]}
2018-04-06 17:21:50,106: 17:21:50 | 27 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.32s]
2018-04-06 17:21:52,889: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124e14e0>]}
2018-04-06 17:21:53,250: 17:21:53 | 24 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 6.35s]
2018-04-06 17:21:56,547: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d4f60>]}
2018-04-06 17:21:56,840: 17:21:56 | 23 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 10.03s]
2018-04-06 17:21:56,842: 17:21:56 | 28 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 17:21:56,842: 17:21:56 | 29 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 17:21:56,842: 17:21:56 | 30 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 17:21:56,843: 17:21:56 | 31 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 17:21:56,843: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 17:21:56,843: Compiling model.agency_data_pipeline.agg_products
2018-04-06 17:21:56,843: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 17:21:56,844: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 17:21:56,853: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 17:21:56,865: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 17:21:56,869: Acquiring new bigquery connection "ga_transactions".
2018-04-06 17:21:56,874: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 17:21:56,874: Re-using an available connection from the pool.
2018-04-06 17:21:56,876: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 17:21:56,876: Acquiring new bigquery connection "agg_products".
2018-04-06 17:21:56,876: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:56,877: Re-using an available connection from the pool.
2018-04-06 17:21:56,877: Acquiring new bigquery connection "adwords_join".
2018-04-06 17:21:56,878: Re-using an available connection from the pool.
2018-04-06 17:21:56,882: Re-using an available connection from the pool.
2018-04-06 17:21:57,575: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 17:21:57,622: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 17:21:57,635: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 17:21:58,017: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:58,711: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d0cc0>]}
2018-04-06 17:21:59,069: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'yandy'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:21:59,075: 17:21:59 | 29 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.87s]
2018-04-06 17:21:59,076: 17:21:59 | 32 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 17:21:59,076: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 17:21:59,093: Acquiring new bigquery connection "ga_traffic".
2018-04-06 17:21:59,093: Re-using an available connection from the pool.
2018-04-06 17:21:59,093: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:22:00,218: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:22:00,381: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 17:22:00,542: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 17:22:01,005: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124d0550>]}
2018-04-06 17:22:01,151: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'yandy' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:22:01,230: 17:22:01 | 31 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 4.16s]
2018-04-06 17:22:01,267: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:22:05,244: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a28630>]}
2018-04-06 17:22:05,548: 17:22:05 | 28 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 8.40s]
2018-04-06 17:22:10,142: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112647a58>]}
2018-04-06 17:22:10,502: 17:22:10 | 32 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 11.07s]
2018-04-06 17:22:20,034: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126b46a0>]}
2018-04-06 17:22:20,356: 17:22:20 | 30 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 23.19s]
2018-04-06 17:22:20,357: 17:22:20 | 33 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 17:22:20,358: 17:22:20 | 34 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 17:22:20,358: 17:22:20 | 35 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 17:22:20,358: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:22:20,358: 17:22:20 | 36 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 17:22:20,371: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:22:20,359: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:22:20,373: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 17:22:20,359: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 17:22:20,379: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 17:22:20,384: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 17:22:20,390: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 17:22:20,392: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 17:22:20,392: Re-using an available connection from the pool.
2018-04-06 17:22:20,394: Acquiring new bigquery connection "adwords_stats".
2018-04-06 17:22:20,394: Re-using an available connection from the pool.
2018-04-06 17:22:20,394: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 17:22:20,396: Re-using an available connection from the pool.
2018-04-06 17:22:20,397: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 17:22:20,399: Re-using an available connection from the pool.
2018-04-06 17:22:20,986: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 17:22:21,008: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 17:22:21,048: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 17:22:21,073: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 17:22:22,097: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126f15f8>]}
2018-04-06 17:22:22,396: 17:22:22 | 33 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.74s]
2018-04-06 17:22:22,396: 17:22:22 | 37 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 17:22:22,396: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:22:22,404: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 17:22:22,405: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 17:22:22,405: Re-using an available connection from the pool.
2018-04-06 17:22:23,074: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 17:22:23,266: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126944e0>]}
2018-04-06 17:22:23,279: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126b4da0>]}
2018-04-06 17:22:23,562: 17:22:23 | 34 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.91s]
2018-04-06 17:22:23,852: 17:22:23 | 35 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.92s]
2018-04-06 17:22:25,377: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a70160>]}
2018-04-06 17:22:25,626: 17:22:25 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 5.01s]
2018-04-06 17:22:33,043: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126e4978>]}
2018-04-06 17:22:33,782: 17:22:33 | 37 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 10.65s]
2018-04-06 17:22:33,784: 17:22:33 | 38 of 75 SKIP relation agency_data_pipeline.agg_ga_transaction....... [SKIP]
2018-04-06 17:22:33,785: 17:22:33 | 39 of 75 SKIP relation agency_data_pipeline.agg_ga_campaign.......... [SKIP]
2018-04-06 17:22:33,785: 17:22:33 | 40 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 17:22:33,786: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:22:33,793: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 17:22:33,794: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 17:22:33,794: Re-using an available connection from the pool.
2018-04-06 17:22:34,468: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 17:22:37,796: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a94c18>]}
2018-04-06 17:22:38,025: 17:22:38 | 40 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.01s]
2018-04-06 17:22:38,026: 17:22:38 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 17:22:38,026: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:22:38,031: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 17:22:38,032: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 17:22:38,032: Re-using an available connection from the pool.
2018-04-06 17:22:38,767: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 17:22:43,173: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112694f28>]}
2018-04-06 17:22:43,473: 17:22:43 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 5.15s]
2018-04-06 17:22:43,475: 17:22:43 | 42 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 17:22:43,476: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 17:22:43,475: 17:22:43 | 43 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 17:22:43,484: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 17:22:43,484: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 17:22:43,476: 17:22:43 | 44 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 17:22:43,492: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 17:22:43,493: Compiling model.agency_data_pipeline.products_proc
2018-04-06 17:22:43,495: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 17:22:43,503: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 17:22:43,503: Re-using an available connection from the pool.
2018-04-06 17:22:43,506: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 17:22:43,509: Acquiring new bigquery connection "products_proc".
2018-04-06 17:22:43,510: Re-using an available connection from the pool.
2018-04-06 17:22:43,512: Re-using an available connection from the pool.
2018-04-06 17:22:44,025: Model SQL (customers_products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:22:44,028: Bad request while running:
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:22:44,029: 400 Table name "customers" cannot be resolved: dataset name is missing.
2018-04-06 17:22:44,031: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126f1898>]}
2018-04-06 17:22:44,193: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 17:22:44,252: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 17:22:44,330: 17:22:44 | 42 of 75 ERROR creating table model agency_data_pipeline.customers_products_proc [ERROR in 0.55s]
2018-04-06 17:22:46,388: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a8a5f8>]}
2018-04-06 17:22:46,679: 17:22:46 | 43 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.90s]
2018-04-06 17:22:50,827: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a28518>]}
2018-04-06 17:22:51,055: 17:22:51 | 44 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 7.33s]
2018-04-06 17:22:51,056: 17:22:51 | 45 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 17:22:51,056: 17:22:51 | 46 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 17:22:51,056: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 17:22:51,057: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:22:51,067: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 17:22:51,069: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 17:22:51,070: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 17:22:51,070: Re-using an available connection from the pool.
2018-04-06 17:22:51,072: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 17:22:51,073: Re-using an available connection from the pool.
2018-04-06 17:22:51,722: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:22:51,756: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 17:22:53,910: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a8a5f8>]}
2018-04-06 17:22:53,968: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112694f28>]}
2018-04-06 17:22:54,127: 17:22:54 | 46 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.85s]
2018-04-06 17:22:54,482: 17:22:54 | 45 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.91s]
2018-04-06 17:22:54,483: 17:22:54 | 47 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 17:22:54,483: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:22:54,483: 17:22:54 | 48 of 75 SKIP relation agency_data_pipeline.agg_transaction.......... [SKIP]
2018-04-06 17:22:54,501: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 17:22:54,503: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 17:22:54,503: Re-using an available connection from the pool.
2018-04-06 17:22:55,162: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 17:22:57,346: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1126f15f8>]}
2018-04-06 17:22:57,645: 17:22:57 | 47 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 2.86s]
2018-04-06 17:22:57,646: 17:22:57 | 49 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 17:22:57,647: 17:22:57 | 50 of 75 SKIP relation agency_data_pipeline.agg_transaction_daily.... [SKIP]
2018-04-06 17:22:57,647: 17:22:57 | 51 of 75 SKIP relation agency_data_pipeline.customers_first_purchase_proc [SKIP]
2018-04-06 17:22:57,647: 17:22:57 | 52 of 75 SKIP relation agency_data_pipeline.customers_first_purchase_product_type_proc [SKIP]
2018-04-06 17:22:57,648: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 17:22:57,657: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 17:22:57,658: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 17:22:57,658: Re-using an available connection from the pool.
2018-04-06 17:22:58,245: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 17:22:59,350: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x112694f28>]}
2018-04-06 17:22:59,561: 17:22:59 | 49 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 1.70s]
2018-04-06 17:22:59,562: 17:22:59 | 53 of 75 SKIP relation agency_data_pipeline.customers_proc........... [SKIP]
2018-04-06 17:22:59,563: 17:22:59 | 54 of 75 SKIP relation agency_data_pipeline.growth_customer_0_365.... [SKIP]
2018-04-06 17:22:59,564: 17:22:59 | 55 of 75 SKIP relation agency_data_pipeline.retention_730_plus....... [SKIP]
2018-04-06 17:22:59,564: 17:22:59 | 56 of 75 SKIP relation agency_data_pipeline.retention_365_730........ [SKIP]
2018-04-06 17:22:59,565: 17:22:59 | 57 of 75 SKIP relation agency_data_pipeline.retention_0_365.......... [SKIP]
2018-04-06 17:22:59,566: 17:22:59 | 58 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 17:22:59,566: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:22:59,566: 17:22:59 | 59 of 75 SKIP relation agency_data_pipeline.segment_proc_customers... [SKIP]
2018-04-06 17:22:59,576: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 17:22:59,577: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 17:22:59,577: Re-using an available connection from the pool.
2018-04-06 17:23:00,206: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 17:23:03,550: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114a3fb38>]}
2018-04-06 17:23:03,773: 17:23:03 | 58 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.98s]
2018-04-06 17:23:03,774: 17:23:03 | 60 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_agg [SKIP]
2018-04-06 17:23:03,775: 17:23:03 | 61 of 75 SKIP relation agency_data_pipeline.retention_0_365_rebuy.... [SKIP]
2018-04-06 17:23:03,776: 17:23:03 | 62 of 75 SKIP relation agency_data_pipeline.segment_stats_customers.. [SKIP]
2018-04-06 17:23:03,776: 17:23:03 | 63 of 75 SKIP relation agency_data_pipeline.retention_stats_rebuy_rate [SKIP]
2018-04-06 17:23:03,777: 17:23:03 | 64 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 17:23:03,777: 17:23:03 | 65 of 75 SKIP relation agency_data_pipeline.retention_0_365_reactivated [SKIP]
2018-04-06 17:23:03,779: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:23:03,778: 17:23:03 | 66 of 75 SKIP relation agency_data_pipeline.retention_0_365_new...... [SKIP]
2018-04-06 17:23:03,786: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 17:23:03,789: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 17:23:03,790: Re-using an available connection from the pool.
2018-04-06 17:23:04,469: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 17:23:07,762: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '8aa484d2-02bf-41b2-92c9-60c9ef60bfd0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124f53c8>]}
2018-04-06 17:23:08,535: 17:23:08 | 64 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.98s]
2018-04-06 17:23:08,538: 17:23:08 | 67 of 75 SKIP relation agency_data_pipeline.segment_list_customers... [SKIP]
2018-04-06 17:23:08,539: 17:23:08 | 68 of 75 SKIP relation agency_data_pipeline.segment_proc_customers_products [SKIP]
2018-04-06 17:23:08,539: 17:23:08 | 69 of 75 SKIP relation agency_data_pipeline.growth_customer_0_365_segment [SKIP]
2018-04-06 17:23:08,539: 17:23:08 | 70 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products_agg [SKIP]
2018-04-06 17:23:08,540: 17:23:08 | 71 of 75 SKIP relation agency_data_pipeline.growth_date_union........ [SKIP]
2018-04-06 17:23:08,540: 17:23:08 | 72 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products [SKIP]
2018-04-06 17:23:08,540: 17:23:08 | 73 of 75 SKIP relation agency_data_pipeline.retention_stats.......... [SKIP]
2018-04-06 17:23:08,541: 17:23:08 | 74 of 75 SKIP relation agency_data_pipeline.growth_stats............. [SKIP]
2018-04-06 17:23:08,542: 17:23:08 | 75 of 75 SKIP relation agency_data_pipeline.agg_campaign............. [SKIP]
2018-04-06 17:23:08,565: 17:23:08 | 
2018-04-06 17:23:08,566: 17:23:08 | Finished running 75 table models in 110.19s.
2018-04-06 17:23:08,566: Connection 'master' was left open.
2018-04-06 17:23:08,567: 
2018-04-06 17:23:08,567: Completed with 2 errors:
2018-04-06 17:23:08,568: 
2018-04-06 17:23:08,568: Database Error in model ga_mcf_proc (models/base/ga-mcf/ga_mcf_proc.sql)
2018-04-06 17:23:08,568:   No matching signature for function IFNULL for argument types: STRING. Supported signature: IFNULL(ANY, ANY) at [7:1]
2018-04-06 17:23:08,568:   compiled SQL at target/compiled/agency_data_pipeline/base/ga-mcf/ga_mcf_proc.sql
2018-04-06 17:23:08,568: 
2018-04-06 17:23:08,569: Database Error in model customers_products_proc (models/segmentation/customers-products/customers_products_proc.sql)
2018-04-06 17:23:08,569:   Table name "customers" cannot be resolved: dataset name is missing.
2018-04-06 17:23:08,569:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers-products/customers_products_proc.sql
2018-04-06 17:23:08,570: 
Done. PASS=45 ERROR=2 SKIP=28 TOTAL=75
2018-04-06 17:23:08,570: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1125f1630>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124b39e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1124b3be0>]}
2018-04-06 17:23:09,087: Flushing usage events
2018-04-06 17:31:48,729: Tracking: tracking
2018-04-06 17:31:48,731: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e304588>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e304828>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e304ba8>]}
2018-04-06 17:31:49,585: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 17:31:49,613: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 17:31:49,619: Parsing get_column_values.sql
2018-04-06 17:31:49,638: Parsing get_url_parameter.sql
2018-04-06 17:31:49,646: Parsing split_part.sql
2018-04-06 17:31:49,656: Parsing table_exists.sql
2018-04-06 17:31:49,667: Parsing core.sql
2018-04-06 17:31:49,684: Parsing adapters/bigquery.sql
2018-04-06 17:31:49,694: Parsing adapters/common.sql
2018-04-06 17:31:49,713: Parsing adapters/postgres.sql
2018-04-06 17:31:49,718: Parsing adapters/redshift.sql
2018-04-06 17:31:49,791: Parsing etc/get_custom_schema.sql
2018-04-06 17:31:49,804: Parsing materializations/archive.sql
2018-04-06 17:31:49,850: Parsing materializations/bigquery.sql
2018-04-06 17:31:49,871: Parsing materializations/helpers.sql
2018-04-06 17:31:49,898: Parsing materializations/incremental.sql
2018-04-06 17:31:49,938: Parsing materializations/table.sql
2018-04-06 17:31:49,969: Parsing materializations/view.sql
2018-04-06 17:31:49,992: Parsing materializations/wrapper.sql
2018-04-06 17:31:50,001: Parsing schema_tests/accepted_values.sql
2018-04-06 17:31:50,010: Parsing schema_tests/not_null.sql
2018-04-06 17:31:50,014: Parsing schema_tests/relationships.sql
2018-04-06 17:31:50,019: Parsing schema_tests/unique.sql
2018-04-06 17:31:50,093: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 17:31:50,096: Parsing model.agency_data_pipeline.all_dates
2018-04-06 17:31:50,097: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 17:31:50,099: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 17:31:50,102: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:31:50,104: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:31:50,107: Acquiring new bigquery connection "master".
2018-04-06 17:31:50,107: Opening a new connection (0 currently allocated)
2018-04-06 17:31:50,113: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 17:31:50,116: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 17:31:50,119: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:31:50,121: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 17:31:50,123: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:31:50,127: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 17:31:50,130: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 17:31:50,132: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 17:31:50,135: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:31:50,140: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:31:50,146: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:31:50,149: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:31:50,152: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 17:31:50,163: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 17:31:50,172: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:31:50,182: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:31:50,188: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:31:50,192: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 17:31:50,194: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 17:31:50,212: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 17:31:50,228: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:31:50,232: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:31:50,235: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:31:50,244: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:31:50,256: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:31:50,267: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:31:50,283: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 17:31:50,292: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 17:31:50,295: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:31:50,302: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:31:50,309: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 17:31:50,313: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:31:50,317: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:31:50,323: Parsing model.agency_data_pipeline.agg_products
2018-04-06 17:31:50,326: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 17:31:50,332: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:31:50,337: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:31:50,342: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:31:50,347: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:31:50,352: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:31:50,356: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:31:50,361: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:31:50,367: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 17:31:50,374: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 17:31:50,383: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 17:31:50,387: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:31:50,392: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:31:50,395: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:31:50,400: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 17:31:50,404: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 17:31:50,409: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 17:31:50,417: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:31:50,421: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:31:50,425: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 17:31:50,429: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 17:31:50,433: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:31:50,438: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 17:31:50,441: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 17:31:50,444: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:31:50,447: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 17:31:50,453: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:31:50,459: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:31:50,461: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:31:50,465: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 17:31:50,467: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 17:31:50,469: Parsing model.agency_data_pipeline.products_proc
2018-04-06 17:31:50,472: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:31:50,474: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 17:31:50,477: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:31:50,508: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 17:31:50,561: 
2018-04-06 17:31:51,746: 17:31:51 | Concurrency: 4 threads (target='prod')
2018-04-06 17:31:51,746: 17:31:51 | 
2018-04-06 17:31:52,279: 17:31:52 | 1 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 17:31:52,280: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 17:31:52,285: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 17:31:52,279: 17:31:52 | 2 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 17:31:52,285: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 17:31:52,290: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 17:31:52,280: 17:31:52 | 3 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 17:31:52,290: Compiling model.agency_data_pipeline.all_dates
2018-04-06 17:31:52,294: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 17:31:52,280: 17:31:52 | 4 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 17:31:52,295: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:31:52,301: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 17:31:52,302: Acquiring new bigquery connection "clients_proc".
2018-04-06 17:31:52,304: Acquiring new bigquery connection "accounts_proc".
2018-04-06 17:31:52,304: Acquiring new bigquery connection "all_dates".
2018-04-06 17:31:52,305: Opening a new connection (1 currently allocated)
2018-04-06 17:31:52,310: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 17:31:52,311: Opening a new connection (2 currently allocated)
2018-04-06 17:31:52,391: Opening a new connection (3 currently allocated)
2018-04-06 17:31:52,394: Opening a new connection (4 currently allocated)
2018-04-06 17:31:53,677: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 17:31:53,714: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 17:31:53,722: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 17:31:53,746: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 17:31:54,761: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472ac8>]}
2018-04-06 17:31:55,058: 17:31:55 | 3 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 2.47s]
2018-04-06 17:31:55,059: 17:31:55 | 5 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 17:31:55,059: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:31:55,072: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 17:31:55,076: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 17:31:55,076: Re-using an available connection from the pool.
2018-04-06 17:31:55,745: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 17:31:55,932: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462fd0>]}
2018-04-06 17:31:55,999: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472e80>]}
2018-04-06 17:31:56,172: 17:31:56 | 2 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 3.65s]
2018-04-06 17:31:56,176: 17:31:56 | 6 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 17:31:56,179: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 17:31:56,189: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 17:31:56,190: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 17:31:56,190: Re-using an available connection from the pool.
2018-04-06 17:31:56,528: 17:31:56 | 1 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 3.72s]
2018-04-06 17:31:56,528: 17:31:56 | 7 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 17:31:56,529: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 17:31:56,536: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 17:31:56,537: Acquiring new bigquery connection "adwords_urls".
2018-04-06 17:31:56,537: Re-using an available connection from the pool.
2018-04-06 17:31:56,946: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 17:31:57,081: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4bfcf8>]}
2018-04-06 17:31:57,238: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 17:31:57,300: 17:31:57 | 4 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.79s]
2018-04-06 17:31:57,300: 17:31:57 | 8 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 17:31:57,300: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:31:57,306: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 17:31:57,307: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 17:31:57,307: Re-using an available connection from the pool.
2018-04-06 17:31:57,991: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 17:31:58,034: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472ac8>]}
2018-04-06 17:31:58,099: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462fd0>]}
2018-04-06 17:31:58,259: 17:31:58 | 5 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 2.97s]
2018-04-06 17:31:58,260: 17:31:58 | 9 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 17:31:58,260: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:31:58,270: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 17:31:58,274: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 17:31:58,274: Re-using an available connection from the pool.
2018-04-06 17:31:58,501: 17:31:58 | 6 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 1.92s]
2018-04-06 17:31:58,502: 17:31:58 | 10 of 75 START table model agency_data_pipeline.ga_conversions....... [RUN]
2018-04-06 17:31:58,502: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 17:31:58,513: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 17:31:58,519: Acquiring new bigquery connection "ga_conversions".
2018-04-06 17:31:58,520: Re-using an available connection from the pool.
2018-04-06 17:31:59,003: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 17:31:59,165: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 17:31:59,434: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3df2b0>]}
2018-04-06 17:31:59,722: 17:31:59 | 7 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.90s]
2018-04-06 17:31:59,723: 17:31:59 | 11 of 75 START table model agency_data_pipeline.carts_proc........... [RUN]
2018-04-06 17:31:59,723: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 17:31:59,730: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 17:31:59,731: Acquiring new bigquery connection "carts_proc".
2018-04-06 17:31:59,731: Re-using an available connection from the pool.
2018-04-06 17:32:00,112: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b811908>]}
2018-04-06 17:32:00,180: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b818a58>]}
2018-04-06 17:32:00,270: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e491e10>]}
2018-04-06 17:32:00,350: 17:32:00 | 9 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 1.85s]
2018-04-06 17:32:00,352: 17:32:00 | 12 of 75 START table model agency_data_pipeline.monthend_dates....... [RUN]
2018-04-06 17:32:00,353: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 17:32:00,364: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 17:32:00,368: Acquiring new bigquery connection "monthend_dates".
2018-04-06 17:32:00,368: Re-using an available connection from the pool.
2018-04-06 17:32:00,487: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 17:32:00,660: 17:32:00 | 8 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.88s]
2018-04-06 17:32:00,964: 17:32:00 | 10 of 75 OK created table model agency_data_pipeline.ga_conversions.. [CREATE TABLE in 1.77s]
2018-04-06 17:32:00,980: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 17:32:01,586: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3df2b0>]}
2018-04-06 17:32:01,811: 17:32:01 | 11 of 75 OK created table model agency_data_pipeline.carts_proc...... [CREATE TABLE in 1.86s]
2018-04-06 17:32:02,089: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462208>]}
2018-04-06 17:32:02,382: 17:32:02 | 12 of 75 OK created table model agency_data_pipeline.monthend_dates.. [CREATE TABLE in 1.74s]
2018-04-06 17:32:02,383: 17:32:02 | 13 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 17:32:02,384: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 17:32:02,398: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 17:32:02,398: Re-using an available connection from the pool.
2018-04-06 17:32:02,399: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:02,389: 17:32:02 | 14 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 17:32:02,400: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 17:32:02,409: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 17:32:02,389: 17:32:02 | 15 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 17:32:02,409: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:32:02,414: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 17:32:02,389: 17:32:02 | 16 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 17:32:02,415: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:32:02,424: Acquiring new bigquery connection "adwords_ads".
2018-04-06 17:32:02,425: Re-using an available connection from the pool.
2018-04-06 17:32:02,426: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 17:32:02,426: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 17:32:02,428: Re-using an available connection from the pool.
2018-04-06 17:32:02,432: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 17:32:02,436: Re-using an available connection from the pool.
2018-04-06 17:32:03,088: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 17:32:03,101: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:32:03,108: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 17:32:03,686: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 17:32:04,373: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		     UNION ALL 
	   
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_boom.adcreative`
		     UNION ALL 
	   
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 17:32:05,271: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8206a0>]}
2018-04-06 17:32:05,282: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8200b8>]}
2018-04-06 17:32:05,558: 17:32:05 | 14 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.87s]
2018-04-06 17:32:05,559: 17:32:05 | 17 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 17:32:05,560: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:32:05,569: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 17:32:05,570: Re-using an available connection from the pool.
2018-04-06 17:32:05,570: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:05,777: 17:32:05 | 16 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.87s]
2018-04-06 17:32:05,778: 17:32:05 | 18 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 17:32:05,778: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:32:05,786: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 17:32:05,787: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 17:32:05,787: Re-using an available connection from the pool.
2018-04-06 17:32:05,929: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 17:32:06,474: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 17:32:06,600: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472d68>]}
2018-04-06 17:32:06,657: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_boom.ads_insights`
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 17:32:06,889: 17:32:06 | 13 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 4.22s]
2018-04-06 17:32:06,890: 17:32:06 | 19 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 17:32:06,890: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:32:06,900: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 17:32:06,900: Re-using an available connection from the pool.
2018-04-06 17:32:06,900: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:08,178: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 17:32:08,562: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e51c390>]}
2018-04-06 17:32:08,710: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8200b8>]}
2018-04-06 17:32:08,854: 17:32:08 | 15 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.15s]
2018-04-06 17:32:08,856: 17:32:08 | 20 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 17:32:08,856: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:32:08,868: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 17:32:08,869: Re-using an available connection from the pool.
2018-04-06 17:32:08,870: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:08,993: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 17:32:09,179: 17:32:09 | 18 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.93s]
2018-04-06 17:32:09,232: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 17:32:09,823: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_boom.ads_insights`
			cross join unnest(actions)
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_yandy.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:32:09,824: Bad request while running:




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_boom.ads_insights`
			cross join unnest(actions)
		     UNION ALL 
	   
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_yandy.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:32:09,824: 400 Unrecognized name: actions at [37:43]
2018-04-06 17:32:09,825: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b811fd0>]}
2018-04-06 17:32:09,939: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4df438>]}
2018-04-06 17:32:10,040: 17:32:10 | 20 of 75 ERROR creating table model agency_data_pipeline.fb_ads_insights_conversions [ERROR in 0.97s]
2018-04-06 17:32:10,329: 17:32:10 | 17 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 4.38s]
2018-04-06 17:32:11,210: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472d68>]}
2018-04-06 17:32:11,492: 17:32:11 | 19 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.32s]
2018-04-06 17:32:11,495: 17:32:11 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 17:32:11,495: 17:32:11 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 17:32:11,496: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 17:32:11,496: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:32:11,525: Acquiring new bigquery connection "fb_ads".
2018-04-06 17:32:11,525: Re-using an available connection from the pool.
2018-04-06 17:32:11,525: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:11,527: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 17:32:11,528: Re-using an available connection from the pool.
2018-04-06 17:32:11,529: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:11,930: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 17:32:11,961: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 17:32:12,532: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		      UNION ALL 
	   
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_boom.ads`
		      UNION ALL 
	   
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:32:12,532: Bad request while running:
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		      UNION ALL 
	   
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_boom.ads`
		      UNION ALL 
	   
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_yandy.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:32:12,533: 400 Unrecognized name: creative at [19:25]
2018-04-06 17:32:12,533: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b865a20>]}
2018-04-06 17:32:12,607: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 17:32:12,826: 17:32:12 | 21 of 75 ERROR creating table model agency_data_pipeline.fb_ads...... [ERROR in 1.04s]
2018-04-06 17:32:18,077: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af0b278>]}
2018-04-06 17:32:18,365: 17:32:18 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.58s]
2018-04-06 17:32:18,366: 17:32:18 | 23 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 17:32:18,366: 17:32:18 | 24 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 17:32:18,367: 17:32:18 | 25 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 17:32:18,367: 17:32:18 | 26 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 17:32:18,368: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 17:32:18,368: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:32:18,368: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:32:18,368: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:32:18,375: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 17:32:18,387: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 17:32:18,392: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 17:32:18,393: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 17:32:18,394: Re-using an available connection from the pool.
2018-04-06 17:32:18,394: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:18,395: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 17:32:18,396: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 17:32:18,396: Re-using an available connection from the pool.
2018-04-06 17:32:18,397: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 17:32:18,398: Re-using an available connection from the pool.
2018-04-06 17:32:18,400: Re-using an available connection from the pool.
2018-04-06 17:32:18,744: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 17:32:19,033: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 17:32:19,128: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 17:32:19,172: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 17:32:19,404: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 17:32:21,300: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e51c160>]}
2018-04-06 17:32:21,600: 17:32:21 | 26 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.93s]
2018-04-06 17:32:21,600: 17:32:21 | 27 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 17:32:21,601: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:32:21,617: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 17:32:21,617: Re-using an available connection from the pool.
2018-04-06 17:32:21,618: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:21,936: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 17:32:22,565: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 17:32:23,364: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472d68>]}
2018-04-06 17:32:23,547: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e491e10>]}
2018-04-06 17:32:23,658: 17:32:23 | 23 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 5.00s]
2018-04-06 17:32:23,952: 17:32:23 | 25 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.18s]
2018-04-06 17:32:24,737: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b847630>]}
2018-04-06 17:32:25,042: 17:32:25 | 27 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.14s]
2018-04-06 17:32:29,303: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af235f8>]}
2018-04-06 17:32:29,582: 17:32:29 | 24 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 10.93s]
2018-04-06 17:32:29,583: 17:32:29 | 28 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 17:32:29,584: Compiling model.agency_data_pipeline.agg_products
2018-04-06 17:32:29,583: 17:32:29 | 29 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 17:32:29,590: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 17:32:29,590: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 17:32:29,584: 17:32:29 | 30 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 17:32:29,584: 17:32:29 | 31 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 17:32:29,603: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 17:32:29,597: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 17:32:29,639: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 17:32:29,639: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 17:32:29,640: Acquiring new bigquery connection "ga_traffic".
2018-04-06 17:32:29,641: Re-using an available connection from the pool.
2018-04-06 17:32:29,640: Acquiring new bigquery connection "agg_products".
2018-04-06 17:32:29,642: Re-using an available connection from the pool.
2018-04-06 17:32:29,641: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:29,644: Acquiring new bigquery connection "adwords_join".
2018-04-06 17:32:29,645: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 17:32:29,647: Re-using an available connection from the pool.
2018-04-06 17:32:29,652: Re-using an available connection from the pool.
2018-04-06 17:32:30,313: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 17:32:30,318: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 17:32:30,336: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 17:32:30,924: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'yandy'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:31,411: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af23198>]}
2018-04-06 17:32:31,714: 17:32:31 | 28 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.83s]
2018-04-06 17:32:31,715: 17:32:31 | 32 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 17:32:31,715: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 17:32:31,728: Acquiring new bigquery connection "ga_transactions".
2018-04-06 17:32:31,728: Re-using an available connection from the pool.
2018-04-06 17:32:31,728: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:32,066: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:32,496: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10af23240>]}
2018-04-06 17:32:32,826: 17:32:32 | 30 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 2.90s]
2018-04-06 17:32:33,172: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'yandy'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:33,182: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'boom'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:33,452: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'boom'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:34,108: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'robbins_brothers'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:34,472: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:32:34,838: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 17:32:35,081: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 17:32:35,514: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'yandy' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'boom' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_boom.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:32:35,683: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'yandy' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'boom' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_boom_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'robbins_brothers' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_robbins_brothers_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:32:35,684: Bad request while running:
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'yandy' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'boom' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_boom_traffic.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'robbins_brothers' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_robbins_brothers_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:32:35,684: 400 Unrecognized name: goalcompletionsall; Did you mean goal5completions? at [91:33]
2018-04-06 17:32:35,684: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4bff60>]}
2018-04-06 17:32:35,973: 17:32:35 | 29 of 75 ERROR creating table model agency_data_pipeline.ga_traffic.. [ERROR in 6.09s]
2018-04-06 17:32:36,633: Bad request while running:
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'yandy' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_yandy.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'boom' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_boom.report` 

		     UNION ALL 
	   

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:32:36,633: 400 Bad int64 value: B547853
2018-04-06 17:32:36,634: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4bf7b8>]}
2018-04-06 17:32:36,927: 17:32:36 | 32 of 75 ERROR creating table model agency_data_pipeline.ga_transactions [ERROR in 4.92s]
2018-04-06 17:32:36,991: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b843b70>]}
2018-04-06 17:32:37,286: 17:32:37 | 31 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 7.39s]
2018-04-06 17:32:37,286: 17:32:37 | 33 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 17:32:37,287: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:32:37,286: 17:32:37 | 34 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 17:32:37,294: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 17:32:37,295: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:32:37,287: 17:32:37 | 35 of 75 SKIP relation agency_data_pipeline.fb_ads_stats............. [SKIP]
2018-04-06 17:32:37,287: 17:32:37 | 36 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 17:32:37,302: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 17:32:37,302: 17:32:37 | 37 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 17:32:37,302: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 17:32:37,303: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 17:32:37,303: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:32:37,310: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 17:32:37,321: Acquiring new bigquery connection "adwords_stats".
2018-04-06 17:32:37,310: Re-using an available connection from the pool.
2018-04-06 17:32:37,319: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 17:32:37,329: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 17:32:37,329: Re-using an available connection from the pool.
2018-04-06 17:32:37,333: Re-using an available connection from the pool.
2018-04-06 17:32:37,335: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 17:32:37,338: Re-using an available connection from the pool.
2018-04-06 17:32:37,981: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 17:32:38,022: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 17:32:38,046: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 17:32:38,049: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 17:32:40,251: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b85f470>]}
2018-04-06 17:32:40,565: 17:32:40 | 34 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 2.96s]
2018-04-06 17:32:41,317: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b847eb8>]}
2018-04-06 17:32:41,651: 17:32:41 | 36 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 4.01s]
2018-04-06 17:32:42,318: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e472518>]}
2018-04-06 17:32:42,607: 17:32:42 | 37 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 5.02s]
2018-04-06 17:32:44,624: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462828>]}
2018-04-06 17:32:45,202: 17:32:45 | 33 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 7.34s]
2018-04-06 17:32:45,203: 17:32:45 | 38 of 75 SKIP relation agency_data_pipeline.agg_ga_transaction....... [SKIP]
2018-04-06 17:32:45,203: 17:32:45 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 17:32:45,204: 17:32:45 | 40 of 75 SKIP relation agency_data_pipeline.agg_ga_campaign.......... [SKIP]
2018-04-06 17:32:45,204: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:32:45,212: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 17:32:45,213: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 17:32:45,213: Re-using an available connection from the pool.
2018-04-06 17:32:45,875: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 17:32:50,219: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462828>]}
2018-04-06 17:32:50,488: 17:32:50 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 5.01s]
2018-04-06 17:32:50,488: 17:32:50 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 17:32:50,489: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:32:50,493: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 17:32:50,494: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 17:32:50,495: Re-using an available connection from the pool.
2018-04-06 17:32:51,208: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 17:32:55,607: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b83ad68>]}
2018-04-06 17:32:55,913: 17:32:55 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 5.12s]
2018-04-06 17:32:55,915: 17:32:55 | 42 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 17:32:55,915: 17:32:55 | 43 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 17:32:55,916: 17:32:55 | 44 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 17:32:55,917: Compiling model.agency_data_pipeline.products_proc
2018-04-06 17:32:55,917: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 17:32:55,917: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 17:32:55,951: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 17:32:55,955: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 17:32:55,955: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 17:32:55,958: Acquiring new bigquery connection "products_proc".
2018-04-06 17:32:55,958: Re-using an available connection from the pool.
2018-04-06 17:32:55,959: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 17:32:55,960: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 17:32:55,962: Re-using an available connection from the pool.
2018-04-06 17:32:55,962: Re-using an available connection from the pool.
2018-04-06 17:32:56,635: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:32:56,657: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 17:32:56,683: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 17:32:58,983: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b83a208>]}
2018-04-06 17:32:59,238: 17:32:59 | 44 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 3.07s]
2018-04-06 17:33:04,316: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462828>]}
2018-04-06 17:33:04,604: 17:33:04 | 42 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 8.40s]
2018-04-06 17:33:30,114: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e4bfcf8>]}
2018-04-06 17:33:30,451: 17:33:30 | 43 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 34.20s]
2018-04-06 17:33:30,453: 17:33:30 | 45 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 17:33:30,453: 17:33:30 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 17:33:30,454: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:33:30,454: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 17:33:30,473: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 17:33:30,473: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 17:33:30,474: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 17:33:30,475: Re-using an available connection from the pool.
2018-04-06 17:33:30,476: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 17:33:30,476: Re-using an available connection from the pool.
2018-04-06 17:33:32,555: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:33:32,584: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 17:33:35,550: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b876eb8>]}
2018-04-06 17:33:35,614: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b811208>]}
2018-04-06 17:33:35,830: 17:33:35 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 5.10s]
2018-04-06 17:33:36,123: 17:33:36 | 45 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 5.16s]
2018-04-06 17:33:36,123: 17:33:36 | 47 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 17:33:36,124: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:33:36,124: 17:33:36 | 48 of 75 SKIP relation agency_data_pipeline.agg_transaction.......... [SKIP]
2018-04-06 17:33:36,136: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 17:33:36,141: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 17:33:36,141: Re-using an available connection from the pool.
2018-04-06 17:33:38,336: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 17:33:41,308: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e462828>]}
2018-04-06 17:33:41,617: 17:33:41 | 47 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 5.18s]
2018-04-06 17:33:41,618: 17:33:41 | 49 of 75 SKIP relation agency_data_pipeline.customers_first_purchase_product_type_proc [SKIP]
2018-04-06 17:33:41,618: 17:33:41 | 50 of 75 SKIP relation agency_data_pipeline.agg_transaction_daily.... [SKIP]
2018-04-06 17:33:41,619: 17:33:41 | 51 of 75 SKIP relation agency_data_pipeline.customers_first_purchase_proc [SKIP]
2018-04-06 17:33:41,619: 17:33:41 | 52 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 17:33:41,620: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 17:33:41,638: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 17:33:41,640: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 17:33:41,640: Re-using an available connection from the pool.
2018-04-06 17:33:44,054: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 17:33:45,147: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3c5f8a4f-323e-440c-b3bd-d31bb5d41e01', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e52e4e0>]}
2018-04-06 17:33:45,792: 17:33:45 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 3.53s]
2018-04-06 17:33:45,799: 17:33:45 | 53 of 75 SKIP relation agency_data_pipeline.growth_customer_0_365.... [SKIP]
2018-04-06 17:33:45,801: 17:33:45 | 54 of 75 SKIP relation agency_data_pipeline.customers_proc........... [SKIP]
2018-04-06 17:33:45,803: 17:33:45 | 55 of 75 SKIP relation agency_data_pipeline.retention_365_730........ [SKIP]
2018-04-06 17:33:45,804: 17:33:45 | 56 of 75 SKIP relation agency_data_pipeline.retention_730_plus....... [SKIP]
2018-04-06 17:33:45,804: 17:33:45 | 57 of 75 SKIP relation agency_data_pipeline.retention_0_365.......... [SKIP]
2018-04-06 17:33:45,806: 17:33:45 | 58 of 75 SKIP relation agency_data_pipeline.segment_proc_customers... [SKIP]
2018-04-06 17:33:45,806: 17:33:45 | 59 of 75 SKIP relation agency_data_pipeline.agg_platforms_union...... [SKIP]
2018-04-06 17:33:45,807: 17:33:45 | 60 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_agg [SKIP]
2018-04-06 17:33:45,807: 17:33:45 | 61 of 75 SKIP relation agency_data_pipeline.retention_0_365_rebuy.... [SKIP]
2018-04-06 17:33:45,808: 17:33:45 | 62 of 75 SKIP relation agency_data_pipeline.agg_platforms_client..... [SKIP]
2018-04-06 17:33:45,808: 17:33:45 | 63 of 75 SKIP relation agency_data_pipeline.retention_stats_rebuy_rate [SKIP]
2018-04-06 17:33:45,809: 17:33:45 | 64 of 75 SKIP relation agency_data_pipeline.segment_stats_customers.. [SKIP]
2018-04-06 17:33:45,809: 17:33:45 | 65 of 75 SKIP relation agency_data_pipeline.retention_0_365_reactivated [SKIP]
2018-04-06 17:33:45,809: 17:33:45 | 66 of 75 SKIP relation agency_data_pipeline.retention_0_365_new...... [SKIP]
2018-04-06 17:33:45,813: 17:33:45 | 67 of 75 SKIP relation agency_data_pipeline.segment_list_customers... [SKIP]
2018-04-06 17:33:45,814: 17:33:45 | 68 of 75 SKIP relation agency_data_pipeline.segment_proc_customers_products [SKIP]
2018-04-06 17:33:45,815: 17:33:45 | 69 of 75 SKIP relation agency_data_pipeline.growth_customer_0_365_segment [SKIP]
2018-04-06 17:33:45,816: 17:33:45 | 70 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products_agg [SKIP]
2018-04-06 17:33:45,816: 17:33:45 | 71 of 75 SKIP relation agency_data_pipeline.growth_date_union........ [SKIP]
2018-04-06 17:33:45,817: 17:33:45 | 72 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products [SKIP]
2018-04-06 17:33:45,817: 17:33:45 | 73 of 75 SKIP relation agency_data_pipeline.growth_stats............. [SKIP]
2018-04-06 17:33:45,818: 17:33:45 | 74 of 75 SKIP relation agency_data_pipeline.retention_stats.......... [SKIP]
2018-04-06 17:33:45,819: 17:33:45 | 75 of 75 SKIP relation agency_data_pipeline.agg_campaign............. [SKIP]
2018-04-06 17:33:45,886: 17:33:45 | 
2018-04-06 17:33:45,886: 17:33:45 | Finished running 75 table models in 114.13s.
2018-04-06 17:33:45,887: Connection 'master' was left open.
2018-04-06 17:33:45,887: 
2018-04-06 17:33:45,888: Completed with 4 errors:
2018-04-06 17:33:45,888: 
2018-04-06 17:33:45,888: Database Error in model fb_ads_insights_conversions (models/base/fb-ads/fb_ads_insights_conversions.sql)
2018-04-06 17:33:45,888:   Unrecognized name: actions at [37:43]
2018-04-06 17:33:45,888:   compiled SQL at target/compiled/agency_data_pipeline/base/fb-ads/fb_ads_insights_conversions.sql
2018-04-06 17:33:45,888: 
2018-04-06 17:33:45,888: Database Error in model fb_ads (models/base/fb-ads/fb_ads.sql)
2018-04-06 17:33:45,889:   Unrecognized name: creative at [19:25]
2018-04-06 17:33:45,889:   compiled SQL at target/compiled/agency_data_pipeline/base/fb-ads/fb_ads.sql
2018-04-06 17:33:45,889: 
2018-04-06 17:33:45,889: Database Error in model ga_traffic (models/base/ga/ga_traffic.sql)
2018-04-06 17:33:45,889:   Unrecognized name: goalcompletionsall; Did you mean goal5completions? at [91:33]
2018-04-06 17:33:45,889:   compiled SQL at target/compiled/agency_data_pipeline/base/ga/ga_traffic.sql
2018-04-06 17:33:45,890: 
2018-04-06 17:33:45,890: Database Error in model ga_transactions (models/base/ga/ga_transactions.sql)
2018-04-06 17:33:45,890:   Bad int64 value: B547853
2018-04-06 17:33:45,891:   compiled SQL at target/compiled/agency_data_pipeline/base/ga/ga_transactions.sql
2018-04-06 17:33:45,891: 
Done. PASS=41 ERROR=4 SKIP=30 TOTAL=75
2018-04-06 17:33:45,892: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3d39e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e3d3c18>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e304ba8>]}
2018-04-06 17:33:46,194: Flushing usage events
2018-04-06 17:43:55,056: Tracking: tracking
2018-04-06 17:43:55,096: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b5ea5c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b5ea860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b5eabe0>]}
2018-04-06 17:43:56,431: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 17:43:56,534: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 17:43:56,756: Parsing get_column_values.sql
2018-04-06 17:43:56,807: Parsing get_url_parameter.sql
2018-04-06 17:43:56,810: Parsing split_part.sql
2018-04-06 17:43:56,814: Parsing table_exists.sql
2018-04-06 17:43:56,824: Parsing core.sql
2018-04-06 17:43:56,846: Parsing adapters/bigquery.sql
2018-04-06 17:43:56,851: Parsing adapters/common.sql
2018-04-06 17:43:56,863: Parsing adapters/postgres.sql
2018-04-06 17:43:56,866: Parsing adapters/redshift.sql
2018-04-06 17:43:56,881: Parsing etc/get_custom_schema.sql
2018-04-06 17:43:56,900: Parsing materializations/archive.sql
2018-04-06 17:43:56,928: Parsing materializations/bigquery.sql
2018-04-06 17:43:56,944: Parsing materializations/helpers.sql
2018-04-06 17:43:56,968: Parsing materializations/incremental.sql
2018-04-06 17:43:56,991: Parsing materializations/table.sql
2018-04-06 17:43:57,006: Parsing materializations/view.sql
2018-04-06 17:43:57,033: Parsing materializations/wrapper.sql
2018-04-06 17:43:57,082: Parsing schema_tests/accepted_values.sql
2018-04-06 17:43:57,093: Parsing schema_tests/not_null.sql
2018-04-06 17:43:57,095: Parsing schema_tests/relationships.sql
2018-04-06 17:43:57,111: Parsing schema_tests/unique.sql
2018-04-06 17:43:57,904: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 17:43:57,907: Parsing model.agency_data_pipeline.all_dates
2018-04-06 17:43:57,908: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 17:43:57,909: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 17:43:57,910: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:43:57,912: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:43:57,913: Acquiring new bigquery connection "master".
2018-04-06 17:43:57,913: Opening a new connection (0 currently allocated)
2018-04-06 17:43:57,950: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 17:43:57,952: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 17:43:57,954: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:43:57,955: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 17:43:57,957: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:43:57,958: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 17:43:57,960: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 17:43:57,962: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 17:43:57,963: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:43:57,966: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:43:57,968: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:43:57,969: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:43:57,971: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 17:43:57,976: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 17:43:57,981: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:43:57,985: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:43:57,990: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:43:57,992: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 17:43:57,993: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 17:43:58,004: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 17:43:58,013: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:43:58,015: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:43:58,017: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:43:58,022: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:43:58,028: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:43:58,034: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:43:58,039: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 17:43:58,041: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 17:43:58,042: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:43:58,045: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:43:58,048: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 17:43:58,050: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:43:58,051: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:43:58,053: Parsing model.agency_data_pipeline.agg_products
2018-04-06 17:43:58,055: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 17:43:58,057: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:43:58,058: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:43:58,059: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:43:58,061: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:43:58,063: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:43:58,064: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:43:58,067: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:43:58,069: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 17:43:58,071: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 17:43:58,075: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 17:43:58,077: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:43:58,078: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:43:58,080: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:43:58,082: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 17:43:58,084: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 17:43:58,086: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 17:43:58,090: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:43:58,092: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:43:58,093: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 17:43:58,095: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 17:43:58,097: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:43:58,099: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 17:43:58,101: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 17:43:58,104: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:43:58,105: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 17:43:58,107: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:43:58,109: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:43:58,111: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:43:58,114: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 17:43:58,115: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 17:43:58,117: Parsing model.agency_data_pipeline.products_proc
2018-04-06 17:43:58,119: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:43:58,121: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 17:43:58,122: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:43:58,157: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 17:43:58,181: 
2018-04-06 17:43:59,267: 17:43:59 | Concurrency: 4 threads (target='prod')
2018-04-06 17:43:59,267: 17:43:59 | 
2018-04-06 17:43:59,849: 17:43:59 | 1 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 17:43:59,849: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 17:43:59,849: 17:43:59 | 2 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 17:43:59,853: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 17:43:59,849: 17:43:59 | 3 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 17:43:59,853: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:43:59,849: 17:43:59 | 4 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 17:43:59,854: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 17:43:59,858: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 17:43:59,858: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 17:43:59,862: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 17:43:59,865: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 17:43:59,887: Acquiring new bigquery connection "adwords_urls".
2018-04-06 17:43:59,888: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 17:43:59,888: Acquiring new bigquery connection "ga_conversions".
2018-04-06 17:43:59,888: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 17:43:59,889: Opening a new connection (1 currently allocated)
2018-04-06 17:43:59,890: Opening a new connection (2 currently allocated)
2018-04-06 17:43:59,937: Opening a new connection (3 currently allocated)
2018-04-06 17:43:59,972: Opening a new connection (4 currently allocated)
2018-04-06 17:44:00,941: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 17:44:00,947: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 17:44:00,994: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 17:44:01,051: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 17:44:02,051: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a85f8>]}
2018-04-06 17:44:02,246: 17:44:02 | 4 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.19s]
2018-04-06 17:44:02,246: 17:44:02 | 5 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 17:44:02,246: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:44:02,250: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 17:44:02,251: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 17:44:02,251: Re-using an available connection from the pool.
2018-04-06 17:44:02,920: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 17:44:03,152: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc395c0>]}
2018-04-06 17:44:03,211: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2048>]}
2018-04-06 17:44:03,349: 17:44:03 | 3 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 3.30s]
2018-04-06 17:44:03,350: 17:44:03 | 6 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 17:44:03,350: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:44:03,354: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 17:44:03,356: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 17:44:03,357: Re-using an available connection from the pool.
2018-04-06 17:44:03,555: 17:44:03 | 1 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 3.36s]
2018-04-06 17:44:03,555: 17:44:03 | 7 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 17:44:03,556: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:44:03,559: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 17:44:03,560: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 17:44:03,560: Re-using an available connection from the pool.
2018-04-06 17:44:04,111: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 17:44:04,342: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b7da0>]}
2018-04-06 17:44:04,356: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 17:44:04,536: 17:44:04 | 2 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 4.49s]
2018-04-06 17:44:04,536: 17:44:04 | 8 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 17:44:04,536: Compiling model.agency_data_pipeline.all_dates
2018-04-06 17:44:04,540: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 17:44:04,541: Acquiring new bigquery connection "all_dates".
2018-04-06 17:44:04,541: Re-using an available connection from the pool.
2018-04-06 17:44:05,181: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:05,197: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 17:44:05,364: 17:44:05 | 5 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.93s]
2018-04-06 17:44:05,364: 17:44:05 | 9 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 17:44:05,364: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 17:44:05,368: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 17:44:05,369: Acquiring new bigquery connection "accounts_proc".
2018-04-06 17:44:05,370: Re-using an available connection from the pool.
2018-04-06 17:44:06,028: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 17:44:06,294: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b7da0>]}
2018-04-06 17:44:06,476: 17:44:06 | 8 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.76s]
2018-04-06 17:44:06,477: 17:44:06 | 10 of 75 START table model agency_data_pipeline.carts_proc........... [RUN]
2018-04-06 17:44:06,477: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 17:44:06,480: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 17:44:06,482: Acquiring new bigquery connection "carts_proc".
2018-04-06 17:44:06,482: Re-using an available connection from the pool.
2018-04-06 17:44:06,539: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8dac88>]}
2018-04-06 17:44:06,735: 17:44:06 | 7 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.98s]
2018-04-06 17:44:06,735: 17:44:06 | 11 of 75 START table model agency_data_pipeline.clients_proc......... [RUN]
2018-04-06 17:44:06,736: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 17:44:06,739: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 17:44:06,740: Acquiring new bigquery connection "clients_proc".
2018-04-06 17:44:06,740: Re-using an available connection from the pool.
2018-04-06 17:44:07,289: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 17:44:07,301: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:07,413: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 17:44:07,484: 17:44:07 | 9 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 1.94s]
2018-04-06 17:44:07,484: 17:44:07 | 12 of 75 START table model agency_data_pipeline.monthend_dates....... [RUN]
2018-04-06 17:44:07,484: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 17:44:07,487: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 17:44:07,505: Acquiring new bigquery connection "monthend_dates".
2018-04-06 17:44:07,506: Re-using an available connection from the pool.
2018-04-06 17:44:07,515: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc395c0>]}
2018-04-06 17:44:07,710: 17:44:07 | 6 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.16s]
2018-04-06 17:44:08,094: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 17:44:08,396: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b7da0>]}
2018-04-06 17:44:08,515: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8dac88>]}
2018-04-06 17:44:08,589: 17:44:08 | 10 of 75 OK created table model agency_data_pipeline.carts_proc...... [CREATE TABLE in 1.92s]
2018-04-06 17:44:08,777: 17:44:08 | 11 of 75 OK created table model agency_data_pipeline.clients_proc.... [CREATE TABLE in 1.78s]
2018-04-06 17:44:09,193: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:09,385: 17:44:09 | 12 of 75 OK created table model agency_data_pipeline.monthend_dates.. [CREATE TABLE in 1.71s]
2018-04-06 17:44:09,386: 17:44:09 | 13 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 17:44:09,386: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:44:09,391: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 17:44:09,392: Re-using an available connection from the pool.
2018-04-06 17:44:09,391: 17:44:09 | 14 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 17:44:09,392: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:09,391: 17:44:09 | 15 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 17:44:09,392: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 17:44:09,392: 17:44:09 | 16 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 17:44:09,393: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:44:09,400: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 17:44:09,400: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:44:09,406: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 17:44:09,407: Re-using an available connection from the pool.
2018-04-06 17:44:09,413: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:09,412: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 17:44:09,415: Re-using an available connection from the pool.
2018-04-06 17:44:09,415: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:09,465: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 17:44:09,466: Re-using an available connection from the pool.
2018-04-06 17:44:10,104: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:44:10,509: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 17:44:10,632: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 17:44:11,127: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:44:11,136: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 17:44:11,165: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 17:44:11,938: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 17:44:13,372: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc358>]}
2018-04-06 17:44:13,982: 17:44:13 | 14 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.98s]
2018-04-06 17:44:13,982: 17:44:13 | 17 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 17:44:13,982: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 17:44:13,986: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 17:44:14,017: Acquiring new bigquery connection "adwords_ads".
2018-04-06 17:44:14,017: Re-using an available connection from the pool.
2018-04-06 17:44:14,153: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:44:14,352: 17:44:14 | 13 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.77s]
2018-04-06 17:44:14,352: 17:44:14 | 18 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 17:44:14,353: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:44:14,358: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 17:44:14,359: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 17:44:14,359: Re-using an available connection from the pool.
2018-04-06 17:44:14,412: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc3e2b0>]}
2018-04-06 17:44:14,483: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8940>]}
2018-04-06 17:44:14,598: 17:44:14 | 16 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 5.01s]
2018-04-06 17:44:14,598: 17:44:14 | 19 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 17:44:14,599: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:44:14,604: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 17:44:14,604: Re-using an available connection from the pool.
2018-04-06 17:44:14,605: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:14,610: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 17:44:14,792: 17:44:14 | 15 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 5.09s]
2018-04-06 17:44:14,792: 17:44:14 | 20 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 17:44:14,792: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:44:14,796: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 17:44:14,797: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 17:44:14,797: Re-using an available connection from the pool.
2018-04-06 17:44:14,959: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 17:44:15,027: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 17:44:15,399: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 17:44:15,580: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 17:44:16,835: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc358>]}
2018-04-06 17:44:17,020: 17:44:17 | 17 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.85s]
2018-04-06 17:44:17,210: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:44:17,392: 17:44:17 | 18 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.86s]
2018-04-06 17:44:17,615: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8940>]}
2018-04-06 17:44:17,786: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc5a518>]}
2018-04-06 17:44:17,799: 17:44:17 | 20 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.82s]
2018-04-06 17:44:17,985: 17:44:17 | 19 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.19s]
2018-04-06 17:44:17,985: 17:44:17 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 17:44:17,986: 17:44:17 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 17:44:17,986: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 17:44:17,986: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:44:17,992: Acquiring new bigquery connection "fb_ads".
2018-04-06 17:44:17,998: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 17:44:17,998: Re-using an available connection from the pool.
2018-04-06 17:44:17,998: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:17,999: Re-using an available connection from the pool.
2018-04-06 17:44:17,999: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:18,301: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 17:44:18,326: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 17:44:18,783: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:44:19,065: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 17:44:20,953: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:21,143: 17:44:21 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 2.97s]
2018-04-06 17:44:24,549: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:24,737: 17:44:24 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.56s]
2018-04-06 17:44:24,737: 17:44:24 | 23 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 17:44:24,737: 17:44:24 | 24 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 17:44:24,738: 17:44:24 | 25 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 17:44:24,738: 17:44:24 | 26 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 17:44:24,738: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:44:24,738: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:44:24,738: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:44:24,738: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:44:24,743: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 17:44:24,747: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 17:44:24,753: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 17:44:24,759: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 17:44:24,760: Re-using an available connection from the pool.
2018-04-06 17:44:24,760: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:24,760: Re-using an available connection from the pool.
2018-04-06 17:44:24,760: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:24,788: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 17:44:24,788: Re-using an available connection from the pool.
2018-04-06 17:44:24,788: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 17:44:24,788: Re-using an available connection from the pool.
2018-04-06 17:44:25,052: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 17:44:25,068: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 17:44:25,408: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 17:44:25,497: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 17:44:25,724: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 17:44:25,734: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 17:44:27,704: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc56358>]}
2018-04-06 17:44:27,893: 17:44:27 | 24 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.97s]
2018-04-06 17:44:27,893: 17:44:27 | 27 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 17:44:27,893: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 17:44:27,897: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 17:44:27,898: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 17:44:27,898: Re-using an available connection from the pool.
2018-04-06 17:44:27,961: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b71b9b0>]}
2018-04-06 17:44:28,152: 17:44:28 | 25 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.22s]
2018-04-06 17:44:28,533: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 17:44:29,801: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8c0320>]}
2018-04-06 17:44:29,989: 17:44:29 | 23 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.06s]
2018-04-06 17:44:34,128: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc9e8>]}
2018-04-06 17:44:34,320: 17:44:34 | 27 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 6.24s]
2018-04-06 17:44:34,745: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b73c278>]}
2018-04-06 17:44:34,931: 17:44:34 | 26 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 10.01s]
2018-04-06 17:44:34,932: 17:44:34 | 28 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 17:44:34,932: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 17:44:34,936: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 17:44:34,932: 17:44:34 | 29 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 17:44:34,937: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 17:44:34,932: 17:44:34 | 30 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 17:44:34,953: Acquiring new bigquery connection "ga_transactions".
2018-04-06 17:44:34,953: Re-using an available connection from the pool.
2018-04-06 17:44:34,932: 17:44:34 | 31 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 17:44:34,955: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 17:44:34,954: Acquiring new bigquery connection "adwords_join".
2018-04-06 17:44:34,972: Re-using an available connection from the pool.
2018-04-06 17:44:34,955: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:34,953: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 17:44:34,984: Acquiring new bigquery connection "ga_traffic".
2018-04-06 17:44:34,989: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 17:44:34,992: Re-using an available connection from the pool.
2018-04-06 17:44:34,993: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:35,032: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 17:44:35,033: Re-using an available connection from the pool.
2018-04-06 17:44:35,648: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 17:44:35,650: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 17:44:36,173: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:36,236: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:44:37,292: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 17:44:37,482: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 17:44:37,826: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:44:38,111: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:44:38,947: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:39,136: 17:44:39 | 28 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 4.01s]
2018-04-06 17:44:39,137: 17:44:39 | 32 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 17:44:39,137: Compiling model.agency_data_pipeline.agg_products
2018-04-06 17:44:39,140: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 17:44:39,141: Acquiring new bigquery connection "agg_products".
2018-04-06 17:44:39,141: Re-using an available connection from the pool.
2018-04-06 17:44:39,709: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 17:44:40,807: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:44:41,005: 17:44:41 | 32 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.67s]
2018-04-06 17:44:43,572: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b89dda0>]}
2018-04-06 17:44:43,763: 17:44:43 | 29 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.64s]
2018-04-06 17:44:44,430: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dafd0>]}
2018-04-06 17:44:44,617: 17:44:44 | 30 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 9.48s]
2018-04-06 17:44:48,762: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc5a400>]}
2018-04-06 17:44:48,973: 17:44:48 | 31 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 13.81s]
2018-04-06 17:44:48,974: 17:44:48 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 17:44:48,974: 17:44:48 | 34 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 17:44:48,974: 17:44:48 | 35 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 17:44:48,974: 17:44:48 | 36 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 17:44:48,974: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:44:48,974: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:44:48,974: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 17:44:48,974: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:44:48,979: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 17:44:48,983: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 17:44:48,987: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 17:44:48,990: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 17:44:48,993: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 17:44:48,993: Re-using an available connection from the pool.
2018-04-06 17:44:48,994: Acquiring new bigquery connection "adwords_stats".
2018-04-06 17:44:48,994: Re-using an available connection from the pool.
2018-04-06 17:44:48,996: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 17:44:48,996: Re-using an available connection from the pool.
2018-04-06 17:44:48,997: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 17:44:49,000: Re-using an available connection from the pool.
2018-04-06 17:44:49,668: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 17:44:49,684: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 17:44:49,731: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 17:44:49,757: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 17:44:51,866: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc3c8>]}
2018-04-06 17:44:51,937: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b729160>]}
2018-04-06 17:44:51,944: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc358>]}
2018-04-06 17:44:52,055: 17:44:52 | 35 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.89s]
2018-04-06 17:44:52,056: 17:44:52 | 37 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 17:44:52,057: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:44:52,061: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 17:44:52,102: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 17:44:52,102: Re-using an available connection from the pool.
2018-04-06 17:44:52,251: 17:44:52 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.96s]
2018-04-06 17:44:52,436: 17:44:52 | 34 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 2.97s]
2018-04-06 17:44:52,722: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 17:44:55,987: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b749358>]}
2018-04-06 17:44:56,171: 17:44:56 | 37 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 3.93s]
2018-04-06 17:44:56,275: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8d68>]}
2018-04-06 17:44:56,459: 17:44:56 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 7.30s]
2018-04-06 17:44:56,459: 17:44:56 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 17:44:56,459: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:44:56,464: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 17:44:56,465: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 17:44:56,465: Re-using an available connection from the pool.
2018-04-06 17:44:57,130: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 17:45:04,721: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc3c8>]}
2018-04-06 17:45:04,928: 17:45:04 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 8.26s]
2018-04-06 17:45:04,928: 17:45:04 | 39 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 17:45:04,928: 17:45:04 | 40 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 17:45:04,928: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:45:04,928: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:45:04,934: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 17:45:04,940: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 17:45:04,941: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 17:45:04,942: Re-using an available connection from the pool.
2018-04-06 17:45:04,943: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 17:45:04,943: Re-using an available connection from the pool.
2018-04-06 17:45:05,534: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 17:45:05,625: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 17:45:09,906: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b9150b8>]}
2018-04-06 17:45:10,097: 17:45:10 | 40 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.98s]
2018-04-06 17:45:14,363: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dc6f5f8>]}
2018-04-06 17:45:14,960: 17:45:14 | 39 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.44s]
2018-04-06 17:45:14,961: 17:45:14 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 17:45:14,961: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:45:14,965: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 17:45:14,966: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 17:45:14,966: Re-using an available connection from the pool.
2018-04-06 17:45:15,633: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 17:45:21,121: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc3c8>]}
2018-04-06 17:45:21,349: 17:45:21 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 6.16s]
2018-04-06 17:45:21,350: 17:45:21 | 42 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 17:45:21,350: 17:45:21 | 43 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 17:45:21,350: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 17:45:21,350: 17:45:21 | 44 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 17:45:21,350: Compiling model.agency_data_pipeline.products_proc
2018-04-06 17:45:21,354: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 17:45:21,354: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 17:45:21,358: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 17:45:21,363: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 17:45:21,364: Acquiring new bigquery connection "products_proc".
2018-04-06 17:45:21,365: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 17:45:21,365: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 17:45:21,365: Re-using an available connection from the pool.
2018-04-06 17:45:21,366: Re-using an available connection from the pool.
2018-04-06 17:45:21,366: Re-using an available connection from the pool.
2018-04-06 17:45:22,028: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 17:45:22,131: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 17:45:22,164: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:45:24,222: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8c0f60>]}
2018-04-06 17:45:24,416: 17:45:24 | 42 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.87s]
2018-04-06 17:45:28,648: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8550>]}
2018-04-06 17:45:28,841: 17:45:28 | 43 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 7.30s]
2018-04-06 17:46:01,451: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8198>]}
2018-04-06 17:46:01,634: 17:46:01 | 44 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 40.10s]
2018-04-06 17:46:01,634: 17:46:01 | 45 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 17:46:01,634: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:46:01,638: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 17:46:01,638: 17:46:01 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 17:46:01,639: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 17:46:01,643: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 17:46:01,644: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 17:46:01,645: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 17:46:01,645: Re-using an available connection from the pool.
2018-04-06 17:46:01,646: Re-using an available connection from the pool.
2018-04-06 17:46:02,381: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 17:46:02,416: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:46:04,564: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e5710>]}
2018-04-06 17:46:04,631: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6dc3c8>]}
2018-04-06 17:46:04,766: 17:46:04 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.93s]
2018-04-06 17:46:04,949: 17:46:04 | 45 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 3.00s]
2018-04-06 17:46:04,949: 17:46:04 | 47 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 17:46:04,949: 17:46:04 | 48 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 17:46:04,950: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 17:46:04,950: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:46:04,954: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 17:46:04,959: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 17:46:04,960: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 17:46:04,960: Acquiring new bigquery connection "agg_transaction".
2018-04-06 17:46:04,960: Re-using an available connection from the pool.
2018-04-06 17:46:04,961: Re-using an available connection from the pool.
2018-04-06 17:46:05,604: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 17:46:05,617: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 17:46:07,769: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:46:07,950: 17:46:07 | 48 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 2.82s]
2018-04-06 17:46:11,073: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:46:11,263: 17:46:11 | 47 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 6.12s]
2018-04-06 17:46:11,263: 17:46:11 | 49 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 17:46:11,263: 17:46:11 | 50 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 17:46:11,264: 17:46:11 | 51 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 17:46:11,264: 17:46:11 | 52 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 17:46:11,264: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:46:11,264: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:46:11,264: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 17:46:11,264: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:46:11,268: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 17:46:11,272: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 17:46:11,275: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 17:46:11,279: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 17:46:11,315: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 17:46:11,316: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 17:46:11,319: Re-using an available connection from the pool.
2018-04-06 17:46:11,317: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 17:46:11,320: Re-using an available connection from the pool.
2018-04-06 17:46:11,321: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 17:46:11,328: Re-using an available connection from the pool.
2018-04-06 17:46:11,330: Re-using an available connection from the pool.
2018-04-06 17:46:11,730: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id, product_type
2018-04-06 17:46:11,730: Bad request while running:
SELECT 
client, 
customer_id, 
product_type,
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id, product_type
2018-04-06 17:46:11,730: 400 Unrecognized name: product_type at [4:1]
2018-04-06 17:46:11,730: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6ff048>]}
2018-04-06 17:46:11,824: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 17:46:11,914: 17:46:11 | 52 of 75 ERROR creating table model agency_data_pipeline.customers_first_purchase_product_type_proc [ERROR in 0.47s]
2018-04-06 17:46:11,935: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 17:46:11,935: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 17:46:13,016: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6daf28>]}
2018-04-06 17:46:13,198: 17:46:13 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 1.75s]
2018-04-06 17:46:13,986: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b74bdd8>]}
2018-04-06 17:46:14,183: 17:46:14 | 50 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.72s]
2018-04-06 17:46:16,244: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2fd0>]}
2018-04-06 17:46:16,844: 17:46:16 | 49 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 4.98s]
2018-04-06 17:46:16,844: 17:46:16 | 53 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 17:46:16,844: 17:46:16 | 54 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 17:46:16,844: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 17:46:16,844: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:46:16,849: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 17:46:16,853: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 17:46:16,869: Acquiring new bigquery connection "customers_proc".
2018-04-06 17:46:16,869: Re-using an available connection from the pool.
2018-04-06 17:46:16,870: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 17:46:16,870: Re-using an available connection from the pool.
2018-04-06 17:46:17,820: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 17:46:17,975: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 17:46:34,104: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8c0c50>]}
2018-04-06 17:46:34,475: 17:46:34 | 54 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 17.26s]
2018-04-06 17:46:47,404: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:46:47,602: 17:46:47 | 53 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 30.56s]
2018-04-06 17:46:47,602: 17:46:47 | 55 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 17:46:47,603: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 17:46:47,607: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 17:46:47,603: 17:46:47 | 56 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 17:46:47,607: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 17:46:47,603: 17:46:47 | 57 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 17:46:47,608: Acquiring new bigquery connection "retention_365_730".
2018-04-06 17:46:47,612: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 17:46:47,612: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 17:46:47,613: Re-using an available connection from the pool.
2018-04-06 17:46:47,617: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 17:46:47,619: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 17:46:47,620: Re-using an available connection from the pool.
2018-04-06 17:46:47,622: Acquiring new bigquery connection "retention_0_365".
2018-04-06 17:46:47,622: Re-using an available connection from the pool.
2018-04-06 17:46:48,235: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 17:46:48,240: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 17:46:48,291: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 17:46:50,422: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b915128>]}
2018-04-06 17:46:50,615: 17:46:50 | 56 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.82s]
2018-04-06 17:46:51,635: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e5710>]}
2018-04-06 17:46:51,836: 17:46:51 | 55 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 4.03s]
2018-04-06 17:46:59,096: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2748>]}
2018-04-06 17:46:59,353: 17:46:59 | 57 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 11.48s]
2018-04-06 17:46:59,353: 17:46:59 | 58 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 17:46:59,353: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:46:59,358: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 17:46:59,358: 17:46:59 | 59 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 17:46:59,358: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:46:59,363: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 17:46:59,399: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 17:46:59,400: Re-using an available connection from the pool.
2018-04-06 17:46:59,400: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 17:46:59,400: Re-using an available connection from the pool.
2018-04-06 17:46:59,971: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client,
	period,
	date,
	a.customer_id,
	b.first_order_date,
	b.first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:46:59,971: Bad request while running:
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client,
	period,
	date,
	a.customer_id,
	b.first_order_date,
	b.first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:46:59,971: 400 Column name client is ambiguous at [56:36]
2018-04-06 17:46:59,971: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a82b0>]}
2018-04-06 17:46:59,993: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 17:47:00,158: 17:47:00 | 59 of 75 ERROR creating table model agency_data_pipeline.segment_proc_customers [ERROR in 0.61s]
2018-04-06 17:47:03,263: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:47:03,857: 17:47:03 | 58 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.91s]
2018-04-06 17:47:03,857: 17:47:03 | 60 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_agg [SKIP]
2018-04-06 17:47:03,857: 17:47:03 | 61 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 17:47:03,858: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:47:03,862: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 17:47:03,907: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 17:47:03,907: Re-using an available connection from the pool.
2018-04-06 17:47:04,604: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 17:47:08,952: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2fd0>]}
2018-04-06 17:47:09,134: 17:47:09 | 61 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 5.09s]
2018-04-06 17:47:09,135: 17:47:09 | 62 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 17:47:09,135: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:47:09,139: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 17:47:09,140: 17:47:09 | 63 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 17:47:09,140: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:47:09,145: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 17:47:09,146: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 17:47:09,140: 17:47:09 | 64 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 17:47:09,140: 17:47:09 | 65 of 75 SKIP relation agency_data_pipeline.segment_stats_customers.. [SKIP]
2018-04-06 17:47:09,146: Re-using an available connection from the pool.
2018-04-06 17:47:09,146: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:47:09,146: 17:47:09 | 66 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 17:47:09,147: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 17:47:09,152: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 17:47:09,153: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:47:09,154: Re-using an available connection from the pool.
2018-04-06 17:47:09,161: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 17:47:09,164: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 17:47:09,167: Re-using an available connection from the pool.
2018-04-06 17:47:09,172: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 17:47:09,175: Re-using an available connection from the pool.
2018-04-06 17:47:09,732: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 17:47:09,737: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 17:47:09,775: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 17:47:09,785: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 17:47:13,003: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6e4b70>]}
2018-04-06 17:47:13,034: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8a8198>]}
2018-04-06 17:47:13,038: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e2278>]}
2018-04-06 17:47:13,208: 17:47:13 | 63 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 3.86s]
2018-04-06 17:47:13,397: 17:47:13 | 66 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.88s]
2018-04-06 17:47:13,585: 17:47:13 | 62 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 3.90s]
2018-04-06 17:47:17,287: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e5710>]}
2018-04-06 17:47:17,472: 17:47:17 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 8.14s]
2018-04-06 17:47:17,473: 17:47:17 | 67 of 75 SKIP relation agency_data_pipeline.segment_list_customers... [SKIP]
2018-04-06 17:47:17,473: 17:47:17 | 68 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 17:47:17,474: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:47:17,474: 17:47:17 | 69 of 75 SKIP relation agency_data_pipeline.segment_proc_customers_products [SKIP]
2018-04-06 17:47:17,479: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 17:47:17,481: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 17:47:17,482: Re-using an available connection from the pool.
2018-04-06 17:47:18,118: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 17:47:33,323: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8e5710>]}
2018-04-06 17:47:33,551: 17:47:33 | 68 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 15.85s]
2018-04-06 17:47:33,552: 17:47:33 | 70 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 17:47:33,552: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 17:47:33,557: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 17:47:33,552: 17:47:33 | 71 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products_agg [SKIP]
2018-04-06 17:47:33,558: Acquiring new bigquery connection "growth_date_union".
2018-04-06 17:47:33,558: Re-using an available connection from the pool.
2018-04-06 17:47:34,407: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 17:47:35,506: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:47:35,694: 17:47:35 | 70 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 1.95s]
2018-04-06 17:47:35,731: 17:47:35 | 72 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products [SKIP]
2018-04-06 17:47:35,731: 17:47:35 | 73 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 17:47:35,732: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 17:47:35,731: 17:47:35 | 74 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 17:47:35,742: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 17:47:35,743: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 17:47:35,751: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 17:47:35,788: Acquiring new bigquery connection "retention_stats".
2018-04-06 17:47:35,789: Re-using an available connection from the pool.
2018-04-06 17:47:35,945: Acquiring new bigquery connection "growth_stats".
2018-04-06 17:47:35,945: Re-using an available connection from the pool.
2018-04-06 17:47:36,444: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 17:47:36,591: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 17:47:37,669: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8b8dd8>]}
2018-04-06 17:47:37,853: 17:47:37 | 74 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.93s]
2018-04-06 17:47:40,773: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b8b8ef0>]}
2018-04-06 17:47:40,957: 17:47:40 | 73 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 5.04s]
2018-04-06 17:47:40,957: 17:47:40 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 17:47:40,957: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 17:47:40,962: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 17:47:40,963: Acquiring new bigquery connection "agg_campaign".
2018-04-06 17:47:40,963: Re-using an available connection from the pool.
2018-04-06 17:47:41,609: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 17:47:53,530: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f7f8bb1-1ee1-4363-aa62-a2789f7eab64', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b7e2390>]}
2018-04-06 17:47:53,722: 17:47:53 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 12.57s]
2018-04-06 17:47:53,783: 17:47:53 | 
2018-04-06 17:47:53,784: 17:47:53 | Finished running 75 table models in 234.52s.
2018-04-06 17:47:53,784: Connection 'master' was left open.
2018-04-06 17:47:53,784: 
2018-04-06 17:47:53,785: Completed with 2 errors:
2018-04-06 17:47:53,785: 
2018-04-06 17:47:53,785: Database Error in model customers_first_purchase_product_type_proc (models/segmentation/customers-products/customers_first_purchase_product_type_proc.sql)
2018-04-06 17:47:53,785:   Unrecognized name: product_type at [4:1]
2018-04-06 17:47:53,786:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers-products/customers_first_purchase_product_type_proc.sql
2018-04-06 17:47:53,786: 
2018-04-06 17:47:53,786: Database Error in model segment_proc_customers (models/segmentation/customers/segment_proc_customers.sql)
2018-04-06 17:47:53,786:   Column name client is ambiguous at [56:36]
2018-04-06 17:47:53,786:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers/segment_proc_customers.sql
2018-04-06 17:47:53,787: 
Done. PASS=67 ERROR=2 SKIP=6 TOTAL=75
2018-04-06 17:47:53,787: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b7dd8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b79e8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b6b7c88>]}
2018-04-06 17:47:53,978: Flushing usage events
2018-04-06 17:53:54,859: Tracking: tracking
2018-04-06 17:53:54,900: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d01fba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d01f978>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d01fac8>]}
2018-04-06 17:53:55,808: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 17:53:55,841: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 17:53:55,882: Parsing get_column_values.sql
2018-04-06 17:53:55,922: Parsing get_url_parameter.sql
2018-04-06 17:53:55,925: Parsing split_part.sql
2018-04-06 17:53:55,929: Parsing table_exists.sql
2018-04-06 17:53:55,938: Parsing core.sql
2018-04-06 17:53:55,961: Parsing adapters/bigquery.sql
2018-04-06 17:53:55,966: Parsing adapters/common.sql
2018-04-06 17:53:55,978: Parsing adapters/postgres.sql
2018-04-06 17:53:55,980: Parsing adapters/redshift.sql
2018-04-06 17:53:55,996: Parsing etc/get_custom_schema.sql
2018-04-06 17:53:56,015: Parsing materializations/archive.sql
2018-04-06 17:53:56,043: Parsing materializations/bigquery.sql
2018-04-06 17:53:56,059: Parsing materializations/helpers.sql
2018-04-06 17:53:56,083: Parsing materializations/incremental.sql
2018-04-06 17:53:56,106: Parsing materializations/table.sql
2018-04-06 17:53:56,121: Parsing materializations/view.sql
2018-04-06 17:53:56,148: Parsing materializations/wrapper.sql
2018-04-06 17:53:56,195: Parsing schema_tests/accepted_values.sql
2018-04-06 17:53:56,198: Parsing schema_tests/not_null.sql
2018-04-06 17:53:56,199: Parsing schema_tests/relationships.sql
2018-04-06 17:53:56,203: Parsing schema_tests/unique.sql
2018-04-06 17:53:56,897: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 17:53:56,899: Parsing model.agency_data_pipeline.all_dates
2018-04-06 17:53:56,900: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 17:53:56,902: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 17:53:56,904: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:53:56,905: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:53:56,907: Acquiring new bigquery connection "master".
2018-04-06 17:53:56,907: Opening a new connection (0 currently allocated)
2018-04-06 17:53:56,936: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 17:53:56,938: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 17:53:56,941: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:53:56,944: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 17:53:56,946: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:53:56,949: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 17:53:56,953: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 17:53:56,956: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 17:53:56,958: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:53:56,963: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:53:56,966: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:53:56,969: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:53:56,972: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 17:53:56,981: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 17:53:56,991: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:53:56,999: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:53:57,008: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:53:57,012: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 17:53:57,016: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 17:53:57,039: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 17:53:57,053: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:53:57,055: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:53:57,057: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:53:57,067: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:53:57,079: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:53:57,090: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:53:57,098: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 17:53:57,102: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 17:53:57,104: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:53:57,109: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:53:57,111: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 17:53:57,113: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:53:57,115: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:53:57,120: Parsing model.agency_data_pipeline.agg_products
2018-04-06 17:53:57,122: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 17:53:57,125: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:53:57,131: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:53:57,143: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:53:57,146: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:53:57,149: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:53:57,155: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:53:57,159: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:53:57,163: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 17:53:57,166: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 17:53:57,171: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 17:53:57,173: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:53:57,175: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:53:57,178: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:53:57,180: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 17:53:57,182: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 17:53:57,185: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 17:53:57,188: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:53:57,191: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:53:57,193: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 17:53:57,195: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 17:53:57,197: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:53:57,199: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 17:53:57,201: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 17:53:57,204: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:53:57,206: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 17:53:57,209: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:53:57,212: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:53:57,215: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:53:57,218: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 17:53:57,220: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 17:53:57,222: Parsing model.agency_data_pipeline.products_proc
2018-04-06 17:53:57,224: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:53:57,226: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 17:53:57,227: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:53:57,402: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 17:53:57,463: 
2018-04-06 17:53:58,649: 17:53:58 | Concurrency: 4 threads (target='prod')
2018-04-06 17:53:58,649: 17:53:58 | 
2018-04-06 17:53:59,307: 17:53:59 | 1 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 17:53:59,308: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 17:53:59,307: 17:53:59 | 2 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 17:53:59,315: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 17:53:59,307: 17:53:59 | 3 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 17:53:59,315: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 17:53:59,308: 17:53:59 | 4 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 17:53:59,316: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:53:59,322: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 17:53:59,322: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 17:53:59,333: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 17:53:59,339: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 17:53:59,340: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 17:53:59,341: Acquiring new bigquery connection "ga_conversions".
2018-04-06 17:53:59,342: Opening a new connection (1 currently allocated)
2018-04-06 17:53:59,343: Acquiring new bigquery connection "carts_proc".
2018-04-06 17:53:59,345: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 17:53:59,348: Opening a new connection (2 currently allocated)
2018-04-06 17:53:59,453: Opening a new connection (3 currently allocated)
2018-04-06 17:53:59,531: Opening a new connection (4 currently allocated)
2018-04-06 17:54:00,480: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 17:54:00,483: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 17:54:00,514: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 17:54:00,538: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 17:54:01,581: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:01,644: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29fd68>]}
2018-04-06 17:54:01,826: 17:54:01 | 3 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.27s]
2018-04-06 17:54:01,827: 17:54:01 | 5 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 17:54:01,827: Compiling model.agency_data_pipeline.all_dates
2018-04-06 17:54:01,831: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 17:54:01,833: Acquiring new bigquery connection "all_dates".
2018-04-06 17:54:01,833: Re-using an available connection from the pool.
2018-04-06 17:54:02,024: 17:54:02 | 2 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.33s]
2018-04-06 17:54:02,024: 17:54:02 | 6 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 17:54:02,024: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 17:54:02,028: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 17:54:02,028: Acquiring new bigquery connection "accounts_proc".
2018-04-06 17:54:02,028: Re-using an available connection from the pool.
2018-04-06 17:54:02,552: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 17:54:02,724: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 17:54:02,730: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2ab5f8>]}
2018-04-06 17:54:02,779: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2abc50>]}
2018-04-06 17:54:02,915: 17:54:02 | 4 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 3.41s]
2018-04-06 17:54:02,916: 17:54:02 | 7 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 17:54:02,917: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:54:02,921: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 17:54:02,923: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 17:54:02,923: Re-using an available connection from the pool.
2018-04-06 17:54:03,118: 17:54:03 | 1 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 3.47s]
2018-04-06 17:54:03,118: 17:54:03 | 8 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 17:54:03,118: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 17:54:03,122: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 17:54:03,122: Acquiring new bigquery connection "clients_proc".
2018-04-06 17:54:03,122: Re-using an available connection from the pool.
2018-04-06 17:54:03,603: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 17:54:03,687: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:03,733: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 17:54:03,884: 17:54:03 | 5 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.86s]
2018-04-06 17:54:03,885: 17:54:03 | 9 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 17:54:03,885: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 17:54:03,894: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 17:54:03,895: Acquiring new bigquery connection "adwords_urls".
2018-04-06 17:54:03,895: Re-using an available connection from the pool.
2018-04-06 17:54:04,591: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 17:54:04,826: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2abc50>]}
2018-04-06 17:54:04,909: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29fd68>]}
2018-04-06 17:54:05,025: 17:54:05 | 8 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 1.71s]
2018-04-06 17:54:05,106: 17:54:05 | 10 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 17:54:05,106: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:54:05,138: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 17:54:05,140: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 17:54:05,140: Re-using an available connection from the pool.
2018-04-06 17:54:05,296: 17:54:05 | 6 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 2.89s]
2018-04-06 17:54:05,297: 17:54:05 | 11 of 75 START table model agency_data_pipeline.monthend_dates....... [RUN]
2018-04-06 17:54:05,297: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 17:54:05,304: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 17:54:05,306: Acquiring new bigquery connection "monthend_dates".
2018-04-06 17:54:05,307: Re-using an available connection from the pool.
2018-04-06 17:54:05,760: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 17:54:05,913: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 17:54:06,795: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:06,853: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64aa90>]}
2018-04-06 17:54:06,983: 17:54:06 | 9 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.91s]
2018-04-06 17:54:06,983: 17:54:06 | 12 of 75 START table model agency_data_pipeline.bing_ads_ads......... [RUN]
2018-04-06 17:54:06,984: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:54:06,989: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 17:54:06,991: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 17:54:06,992: Re-using an available connection from the pool.
2018-04-06 17:54:07,268: 17:54:07 | 7 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 3.94s]
2018-04-06 17:54:07,665: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 17:54:07,977: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f62f4a8>]}
2018-04-06 17:54:08,117: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d198470>]}
2018-04-06 17:54:08,167: 17:54:08 | 10 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.87s]
2018-04-06 17:54:08,359: 17:54:08 | 11 of 75 OK created table model agency_data_pipeline.monthend_dates.. [CREATE TABLE in 2.82s]
2018-04-06 17:54:09,841: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:10,034: 17:54:10 | 12 of 75 OK created table model agency_data_pipeline.bing_ads_ads.... [CREATE TABLE in 2.86s]
2018-04-06 17:54:10,035: 17:54:10 | 13 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 17:54:10,035: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:54:10,045: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 17:54:10,045: Re-using an available connection from the pool.
2018-04-06 17:54:10,045: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:10,041: 17:54:10 | 14 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 17:54:10,045: 17:54:10 | 15 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 17:54:10,046: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:54:10,047: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:54:10,045: 17:54:10 | 16 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 17:54:10,058: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 17:54:10,063: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 17:54:10,063: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 17:54:10,064: Re-using an available connection from the pool.
2018-04-06 17:54:10,069: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 17:54:10,069: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:10,139: Acquiring new bigquery connection "adwords_ads".
2018-04-06 17:54:10,140: Re-using an available connection from the pool.
2018-04-06 17:54:10,141: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 17:54:10,142: Re-using an available connection from the pool.
2018-04-06 17:54:10,753: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 17:54:10,785: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 17:54:11,208: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 17:54:11,334: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 17:54:12,007: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 17:54:12,010: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:54:12,936: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f64cdd8>]}
2018-04-06 17:54:13,118: 17:54:13 | 16 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.87s]
2018-04-06 17:54:13,119: 17:54:13 | 17 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 17:54:13,119: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:54:13,124: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 17:54:13,124: Re-using an available connection from the pool.
2018-04-06 17:54:13,124: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:13,429: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 17:54:14,005: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 17:54:14,011: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5ee7f0>]}
2018-04-06 17:54:14,184: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d251320>]}
2018-04-06 17:54:14,198: 17:54:14 | 15 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 3.96s]
2018-04-06 17:54:14,199: 17:54:14 | 18 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 17:54:14,200: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:54:14,204: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 17:54:14,206: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 17:54:14,206: Re-using an available connection from the pool.
2018-04-06 17:54:14,399: 17:54:14 | 13 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.15s]
2018-04-06 17:54:14,399: 17:54:14 | 19 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 17:54:14,399: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:54:14,404: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 17:54:14,404: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 17:54:14,404: Re-using an available connection from the pool.
2018-04-06 17:54:14,810: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:54:15,050: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 17:54:15,257: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f619160>]}
2018-04-06 17:54:15,441: 17:54:15 | 14 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 5.21s]
2018-04-06 17:54:15,441: 17:54:15 | 20 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 17:54:15,441: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 17:54:15,446: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 17:54:15,446: Re-using an available connection from the pool.
2018-04-06 17:54:15,446: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:15,746: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 17:54:16,164: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d293438>]}
2018-04-06 17:54:16,350: 17:54:16 | 17 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.05s]
2018-04-06 17:54:16,386: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 17:54:17,221: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d251320>]}
2018-04-06 17:54:17,403: 17:54:17 | 19 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.82s]
2018-04-06 17:54:18,575: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f652748>]}
2018-04-06 17:54:18,765: 17:54:18 | 20 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.13s]
2018-04-06 17:54:19,156: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f646fd0>]}
2018-04-06 17:54:19,337: 17:54:19 | 18 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 4.96s]
2018-04-06 17:54:19,338: 17:54:19 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 17:54:19,338: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 17:54:19,344: Acquiring new bigquery connection "fb_ads".
2018-04-06 17:54:19,344: Re-using an available connection from the pool.
2018-04-06 17:54:19,338: 17:54:19 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 17:54:19,344: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:19,344: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:54:19,352: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 17:54:19,352: Re-using an available connection from the pool.
2018-04-06 17:54:19,352: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:19,672: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 17:54:19,688: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 17:54:20,337: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:54:20,339: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 17:54:22,515: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:22,712: 17:54:22 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.18s]
2018-04-06 17:54:25,774: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a710080>]}
2018-04-06 17:54:25,957: 17:54:25 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.43s]
2018-04-06 17:54:25,957: 17:54:25 | 23 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 17:54:25,957: 17:54:25 | 24 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 17:54:25,958: 17:54:25 | 25 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 17:54:25,958: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:54:25,958: 17:54:25 | 26 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 17:54:25,958: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:54:25,958: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 17:54:25,963: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 17:54:25,963: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:54:25,973: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 17:54:25,975: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 17:54:25,981: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 17:54:25,982: Re-using an available connection from the pool.
2018-04-06 17:54:25,982: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 17:54:25,982: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:25,983: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 17:54:25,983: Re-using an available connection from the pool.
2018-04-06 17:54:25,984: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:25,985: Re-using an available connection from the pool.
2018-04-06 17:54:25,985: Re-using an available connection from the pool.
2018-04-06 17:54:26,313: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 17:54:26,348: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 17:54:26,568: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 17:54:26,617: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 17:54:26,995: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 17:54:27,102: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 17:54:30,403: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7101d0>]}
2018-04-06 17:54:30,589: 17:54:30 | 26 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 4.44s]
2018-04-06 17:54:30,590: 17:54:30 | 27 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 17:54:30,590: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:54:30,594: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 17:54:30,595: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 17:54:30,595: Re-using an available connection from the pool.
2018-04-06 17:54:30,969: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7217f0>]}
2018-04-06 17:54:31,157: 17:54:31 | 23 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.01s]
2018-04-06 17:54:31,193: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 17:54:31,981: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29fdd8>]}
2018-04-06 17:54:32,164: 17:54:32 | 25 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 6.02s]
2018-04-06 17:54:33,374: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a707ef0>]}
2018-04-06 17:54:33,564: 17:54:33 | 27 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.78s]
2018-04-06 17:54:35,675: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a721390>]}
2018-04-06 17:54:35,860: 17:54:35 | 24 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 9.72s]
2018-04-06 17:54:35,861: 17:54:35 | 28 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 17:54:35,861: 17:54:35 | 29 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 17:54:35,861: 17:54:35 | 30 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 17:54:35,861: 17:54:35 | 31 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 17:54:35,861: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 17:54:35,861: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 17:54:35,861: Compiling model.agency_data_pipeline.agg_products
2018-04-06 17:54:35,861: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 17:54:35,866: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 17:54:35,876: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 17:54:35,879: Acquiring new bigquery connection "ga_transactions".
2018-04-06 17:54:35,890: Acquiring new bigquery connection "ga_traffic".
2018-04-06 17:54:35,890: Re-using an available connection from the pool.
2018-04-06 17:54:35,890: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:35,891: Re-using an available connection from the pool.
2018-04-06 17:54:35,891: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:35,912: Acquiring new bigquery connection "adwords_join".
2018-04-06 17:54:35,913: Acquiring new bigquery connection "agg_products".
2018-04-06 17:54:35,913: Re-using an available connection from the pool.
2018-04-06 17:54:35,913: Re-using an available connection from the pool.
2018-04-06 17:54:36,467: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 17:54:36,518: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 17:54:37,031: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:37,133: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:54:38,194: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 17:54:38,528: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 17:54:38,638: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a725e48>]}
2018-04-06 17:54:38,811: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:54:38,830: 17:54:38 | 30 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 2.78s]
2018-04-06 17:54:38,830: 17:54:38 | 32 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 17:54:38,830: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 17:54:38,834: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 17:54:38,835: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 17:54:38,835: Re-using an available connection from the pool.
2018-04-06 17:54:39,271: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:54:39,448: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 17:54:40,843: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a707ba8>]}
2018-04-06 17:54:41,032: 17:54:41 | 28 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 4.98s]
2018-04-06 17:54:45,838: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a73da90>]}
2018-04-06 17:54:46,024: 17:54:46 | 29 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 9.98s]
2018-04-06 17:54:46,988: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f603eb8>]}
2018-04-06 17:54:47,175: 17:54:47 | 32 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 8.16s]
2018-04-06 17:54:49,608: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a710710>]}
2018-04-06 17:54:49,794: 17:54:49 | 31 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 13.75s]
2018-04-06 17:54:49,794: 17:54:49 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 17:54:49,795: 17:54:49 | 34 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 17:54:49,795: 17:54:49 | 35 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 17:54:49,795: 17:54:49 | 36 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 17:54:49,795: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:54:49,795: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 17:54:49,795: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:54:49,795: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:54:49,800: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 17:54:49,804: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 17:54:49,808: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 17:54:49,811: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 17:54:49,874: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 17:54:49,874: Re-using an available connection from the pool.
2018-04-06 17:54:49,877: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 17:54:49,878: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 17:54:49,881: Acquiring new bigquery connection "adwords_stats".
2018-04-06 17:54:49,881: Re-using an available connection from the pool.
2018-04-06 17:54:49,885: Re-using an available connection from the pool.
2018-04-06 17:54:49,885: Re-using an available connection from the pool.
2018-04-06 17:54:50,511: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 17:54:50,519: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 17:54:50,526: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 17:54:50,578: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 17:54:52,666: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:52,724: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d198470>]}
2018-04-06 17:54:53,251: 17:54:53 | 34 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.87s]
2018-04-06 17:54:53,251: 17:54:53 | 37 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 17:54:53,252: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:54:53,256: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 17:54:53,258: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 17:54:53,258: Re-using an available connection from the pool.
2018-04-06 17:54:53,446: 17:54:53 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.93s]
2018-04-06 17:54:53,824: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 17:54:53,886: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f603dd8>]}
2018-04-06 17:54:54,074: 17:54:54 | 35 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 4.09s]
2018-04-06 17:54:54,917: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d1b2c88>]}
2018-04-06 17:54:55,103: 17:54:55 | 37 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.67s]
2018-04-06 17:54:56,977: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f6469b0>]}
2018-04-06 17:54:57,169: 17:54:57 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 7.18s]
2018-04-06 17:54:57,170: 17:54:57 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 17:54:57,170: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:54:57,175: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 17:54:57,225: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 17:54:57,225: Re-using an available connection from the pool.
2018-04-06 17:54:57,863: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 17:55:03,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d251630>]}
2018-04-06 17:55:03,472: 17:55:03 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 6.11s]
2018-04-06 17:55:03,472: 17:55:03 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 17:55:03,473: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:55:03,473: 17:55:03 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 17:55:03,477: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 17:55:03,477: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:55:03,482: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 17:55:03,483: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 17:55:03,483: Re-using an available connection from the pool.
2018-04-06 17:55:03,483: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 17:55:03,483: Re-using an available connection from the pool.
2018-04-06 17:55:04,110: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 17:55:04,112: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 17:55:08,423: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5f28d0>]}
2018-04-06 17:55:08,614: 17:55:08 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.95s]
2018-04-06 17:55:36,572: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2cb400>]}
2018-04-06 17:55:36,754: 17:55:36 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 33.10s]
2018-04-06 17:55:36,755: 17:55:36 | 41 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 17:55:36,755: 17:55:36 | 42 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 17:55:36,755: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:55:36,755: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:55:36,759: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 17:55:36,762: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 17:55:36,764: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 17:55:36,765: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 17:55:36,765: Re-using an available connection from the pool.
2018-04-06 17:55:36,765: Re-using an available connection from the pool.
2018-04-06 17:55:37,193: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 17:55:37,193: Bad request while running:
SELECT 
client, 
customer_id, 
product_type,
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 17:55:37,194: 400 Unrecognized name: date at [5:10]
2018-04-06 17:55:37,194: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a710cc0>]}
2018-04-06 17:55:37,383: 17:55:37 | 41 of 75 ERROR creating table model agency_data_pipeline.customers_first_purchase_product_type_proc [ERROR in 0.44s]
2018-04-06 17:55:37,419: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 17:55:41,748: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29f470>]}
2018-04-06 17:55:41,934: 17:55:41 | 42 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 4.99s]
2018-04-06 17:55:41,935: 17:55:41 | 43 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 17:55:41,935: 17:55:41 | 44 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 17:55:41,935: 17:55:41 | 45 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 17:55:41,935: Compiling model.agency_data_pipeline.products_proc
2018-04-06 17:55:41,935: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 17:55:41,935: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 17:55:41,940: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 17:55:41,944: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 17:55:41,949: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 17:55:41,950: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 17:55:41,950: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 17:55:41,950: Re-using an available connection from the pool.
2018-04-06 17:55:41,951: Acquiring new bigquery connection "products_proc".
2018-04-06 17:55:41,951: Re-using an available connection from the pool.
2018-04-06 17:55:41,953: Re-using an available connection from the pool.
2018-04-06 17:55:42,526: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:55:42,619: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 17:55:42,656: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 17:55:44,811: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f5ee6a0>]}
2018-04-06 17:55:44,997: 17:55:44 | 44 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.88s]
2018-04-06 17:55:52,469: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d2ab208>]}
2018-04-06 17:55:52,654: 17:55:52 | 43 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 10.53s]
2018-04-06 17:56:20,125: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7440f0>]}
2018-04-06 17:56:20,732: 17:56:20 | 45 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 38.19s]
2018-04-06 17:56:20,733: 17:56:20 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 17:56:20,733: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 17:56:20,733: 17:56:20 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 17:56:20,737: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 17:56:20,737: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:56:20,741: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 17:56:20,742: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 17:56:20,742: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 17:56:20,742: Re-using an available connection from the pool.
2018-04-06 17:56:20,743: Re-using an available connection from the pool.
2018-04-06 17:56:21,374: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 17:56:21,375: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:56:23,544: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10d29f470>]}
2018-04-06 17:56:23,554: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a744128>]}
2018-04-06 17:56:23,977: 17:56:23 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.81s]
2018-04-06 17:56:24,162: 17:56:24 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.82s]
2018-04-06 17:56:24,162: 17:56:24 | 48 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 17:56:24,162: 17:56:24 | 49 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 17:56:24,162: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 17:56:24,162: 17:56:24 | 50 of 75 SKIP relation agency_data_pipeline.segment_proc_customers_products [SKIP]
2018-04-06 17:56:24,163: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:56:24,167: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 17:56:24,172: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 17:56:24,173: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 17:56:24,174: Re-using an available connection from the pool.
2018-04-06 17:56:24,175: Acquiring new bigquery connection "agg_transaction".
2018-04-06 17:56:24,176: Re-using an available connection from the pool.
2018-04-06 17:56:24,766: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 17:56:24,785: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 17:56:26,970: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f65e940>]}
2018-04-06 17:56:27,158: 17:56:27 | 49 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 2.81s]
2018-04-06 17:56:30,158: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a7440f0>]}
2018-04-06 17:56:30,341: 17:56:30 | 48 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 6.00s]
2018-04-06 17:56:30,341: 17:56:30 | 51 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 17:56:30,341: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 17:56:30,341: 17:56:30 | 52 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 17:56:30,346: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 17:56:30,341: 17:56:30 | 53 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products_agg [SKIP]
2018-04-06 17:56:30,346: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:56:30,341: 17:56:30 | 54 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 17:56:30,353: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 17:56:30,353: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:56:30,359: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 17:56:30,360: Re-using an available connection from the pool.
2018-04-06 17:56:30,361: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 17:56:30,362: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 17:56:30,362: Re-using an available connection from the pool.
2018-04-06 17:56:30,364: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 17:56:30,365: Re-using an available connection from the pool.
2018-04-06 17:56:30,889: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 17:56:30,900: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 17:56:30,962: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 17:56:33,039: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a745358>]}
2018-04-06 17:56:33,151: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a744128>]}
2018-04-06 17:56:33,228: 17:56:33 | 54 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.69s]
2018-04-06 17:56:33,417: 17:56:33 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.81s]
2018-04-06 17:56:35,200: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '504604f8-65e6-4c4c-baea-285092872019', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10a721f60>]}
2018-04-06 17:56:35,404: 17:56:35 | 52 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 4.85s]
2018-04-06 17:56:35,405: 17:56:35 | 55 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 17:56:35,405: 17:56:35 | 56 of 75 SKIP relation agency_data_pipeline.segment_stats_customers_products [SKIP]
2018-04-06 17:56:35,405: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:56:35,405: 17:56:35 | 57 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 17:56:35,410: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 17:56:35,410: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 17:56:35,415: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 17:56:35,451: Acquiring new bigquery connection "customers_proc".
2018-04-06 17:56:35,451: Re-using an available connection from the pool.
2018-04-06 17:56:35,452: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 17:56:35,453: Re-using an available connection from the pool.
2018-04-06 17:56:36,080: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 17:56:36,109: 17:56:36 | The bigquery adapter does not support query cancellation. Some queries may still be running!
2018-04-06 17:56:36,109: Connection 'master' was left open.
2018-04-06 17:56:36,110: Connection 'customers_proc' was left open.
2018-04-06 17:56:36,110: ctrl-c
2018-04-06 17:56:50,350: Tracking: tracking
2018-04-06 17:56:50,350: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e8af98>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e8afd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113e8ab38>]}
2018-04-06 17:56:50,833: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 17:56:50,865: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 17:56:50,883: Parsing get_column_values.sql
2018-04-06 17:56:50,922: Parsing get_url_parameter.sql
2018-04-06 17:56:50,926: Parsing split_part.sql
2018-04-06 17:56:50,930: Parsing table_exists.sql
2018-04-06 17:56:50,940: Parsing core.sql
2018-04-06 17:56:50,962: Parsing adapters/bigquery.sql
2018-04-06 17:56:50,967: Parsing adapters/common.sql
2018-04-06 17:56:50,979: Parsing adapters/postgres.sql
2018-04-06 17:56:50,982: Parsing adapters/redshift.sql
2018-04-06 17:56:51,006: Parsing etc/get_custom_schema.sql
2018-04-06 17:56:51,011: Parsing materializations/archive.sql
2018-04-06 17:56:51,043: Parsing materializations/bigquery.sql
2018-04-06 17:56:51,060: Parsing materializations/helpers.sql
2018-04-06 17:56:51,084: Parsing materializations/incremental.sql
2018-04-06 17:56:51,107: Parsing materializations/table.sql
2018-04-06 17:56:51,124: Parsing materializations/view.sql
2018-04-06 17:56:51,149: Parsing materializations/wrapper.sql
2018-04-06 17:56:51,195: Parsing schema_tests/accepted_values.sql
2018-04-06 17:56:51,199: Parsing schema_tests/not_null.sql
2018-04-06 17:56:51,200: Parsing schema_tests/relationships.sql
2018-04-06 17:56:51,204: Parsing schema_tests/unique.sql
2018-04-06 17:56:51,820: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 17:56:51,822: Parsing model.agency_data_pipeline.all_dates
2018-04-06 17:56:51,823: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 17:56:51,825: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 17:56:51,827: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:56:51,828: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:56:51,830: Acquiring new bigquery connection "master".
2018-04-06 17:56:51,830: Opening a new connection (0 currently allocated)
2018-04-06 17:56:51,831: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 17:56:51,832: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 17:56:51,834: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:56:51,835: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 17:56:51,837: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:56:51,838: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 17:56:51,840: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 17:56:51,842: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 17:56:51,843: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:56:51,846: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:56:51,848: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:56:51,849: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:56:51,851: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 17:56:51,855: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 17:56:51,861: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:56:51,865: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:56:51,870: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:56:51,872: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 17:56:51,874: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 17:56:51,884: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 17:56:51,892: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:56:51,894: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:56:51,896: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:56:51,901: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:56:51,908: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:56:51,913: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:56:51,918: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 17:56:51,920: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 17:56:51,921: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:56:51,924: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:56:51,926: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 17:56:51,927: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 17:56:51,929: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 17:56:51,932: Parsing model.agency_data_pipeline.agg_products
2018-04-06 17:56:51,933: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 17:56:51,935: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:56:51,937: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:56:51,938: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:56:51,940: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:56:51,941: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:56:51,943: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:56:51,945: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 17:56:51,947: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 17:56:51,949: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 17:56:51,954: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 17:56:51,955: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 17:56:51,958: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 17:56:51,960: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 17:56:51,961: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 17:56:51,963: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 17:56:51,965: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 17:56:51,969: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 17:56:51,971: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:56:51,972: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 17:56:51,974: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 17:56:51,976: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 17:56:51,979: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 17:56:51,980: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 17:56:51,983: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:56:51,984: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 17:56:51,987: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:56:51,989: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:56:51,990: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:56:51,993: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 17:56:51,994: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 17:56:51,995: Parsing model.agency_data_pipeline.products_proc
2018-04-06 17:56:51,998: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:56:51,999: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 17:56:52,001: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:56:52,020: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 17:56:52,050: 
2018-04-06 17:56:52,767: 17:56:52 | Concurrency: 4 threads (target='prod')
2018-04-06 17:56:52,767: 17:56:52 | 
2018-04-06 17:56:53,145: 17:56:53 | 1 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 17:56:53,146: 17:56:53 | 2 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 17:56:53,146: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 17:56:53,146: 17:56:53 | 3 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 17:56:53,146: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 17:56:53,146: 17:56:53 | 4 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 17:56:53,150: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 17:56:53,150: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 17:56:53,154: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 17:56:53,154: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 17:56:53,158: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 17:56:53,162: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 17:56:53,214: Acquiring new bigquery connection "clients_proc".
2018-04-06 17:56:53,214: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 17:56:53,215: Opening a new connection (1 currently allocated)
2018-04-06 17:56:53,217: Acquiring new bigquery connection "ga_conversions".
2018-04-06 17:56:53,218: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 17:56:53,218: Opening a new connection (2 currently allocated)
2018-04-06 17:56:53,256: Opening a new connection (3 currently allocated)
2018-04-06 17:56:53,294: Opening a new connection (4 currently allocated)
2018-04-06 17:56:54,124: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 17:56:54,133: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 17:56:54,163: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 17:56:54,202: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 17:56:55,202: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b085c0>]}
2018-04-06 17:56:55,208: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114045780>]}
2018-04-06 17:56:55,392: 17:56:55 | 3 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.05s]
2018-04-06 17:56:55,393: 17:56:55 | 5 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 17:56:55,394: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 17:56:55,398: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 17:56:55,400: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 17:56:55,400: Re-using an available connection from the pool.
2018-04-06 17:56:55,586: 17:56:55 | 2 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 2.06s]
2018-04-06 17:56:55,586: 17:56:55 | 6 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 17:56:55,586: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 17:56:55,591: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 17:56:55,592: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 17:56:55,592: Re-using an available connection from the pool.
2018-04-06 17:56:56,027: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 17:56:56,198: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 17:56:56,393: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114045a20>]}
2018-04-06 17:56:56,582: 17:56:56 | 1 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 3.25s]
2018-04-06 17:56:56,582: 17:56:56 | 7 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 17:56:56,582: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 17:56:56,586: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 17:56:56,586: Acquiring new bigquery connection "monthend_dates".
2018-04-06 17:56:56,586: Re-using an available connection from the pool.
2018-04-06 17:56:57,196: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 17:56:57,408: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110afc2b0>]}
2018-04-06 17:56:57,592: 17:56:57 | 4 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.25s]
2018-04-06 17:56:57,592: 17:56:57 | 8 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 17:56:57,593: Compiling model.agency_data_pipeline.all_dates
2018-04-06 17:56:57,596: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 17:56:57,598: Acquiring new bigquery connection "all_dates".
2018-04-06 17:56:57,598: Re-using an available connection from the pool.
2018-04-06 17:56:58,177: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 17:56:58,209: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b085c0>]}
2018-04-06 17:56:58,283: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114045a20>]}
2018-04-06 17:56:58,396: 17:56:58 | 5 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.82s]
2018-04-06 17:56:58,397: 17:56:58 | 9 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 17:56:58,397: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 17:56:58,401: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 17:56:58,404: Acquiring new bigquery connection "adwords_urls".
2018-04-06 17:56:58,404: Re-using an available connection from the pool.
2018-04-06 17:56:58,592: 17:56:58 | 7 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 1.70s]
2018-04-06 17:56:58,592: 17:56:58 | 10 of 75 START table model agency_data_pipeline.accounts_proc........ [RUN]
2018-04-06 17:56:58,593: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 17:56:58,596: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 17:56:58,597: Acquiring new bigquery connection "accounts_proc".
2018-04-06 17:56:58,597: Re-using an available connection from the pool.
2018-04-06 17:56:59,041: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 17:56:59,224: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 17:56:59,260: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b3d320>]}
2018-04-06 17:56:59,445: 17:56:59 | 8 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.67s]
2018-04-06 17:56:59,445: 17:56:59 | 11 of 75 START table model agency_data_pipeline.carts_proc........... [RUN]
2018-04-06 17:56:59,445: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 17:56:59,449: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 17:56:59,450: Acquiring new bigquery connection "carts_proc".
2018-04-06 17:56:59,450: Re-using an available connection from the pool.
2018-04-06 17:56:59,467: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b597f0>]}
2018-04-06 17:56:59,653: 17:56:59 | 6 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 3.88s]
2018-04-06 17:56:59,654: 17:56:59 | 12 of 75 START table model agency_data_pipeline.conversion_goals_proc [RUN]
2018-04-06 17:56:59,654: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 17:56:59,658: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 17:56:59,659: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 17:56:59,659: Re-using an available connection from the pool.
2018-04-06 17:57:00,084: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 17:57:00,318: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114010f98>]}
2018-04-06 17:57:00,341: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 17:57:00,503: 17:57:00 | 10 of 75 OK created table model agency_data_pipeline.accounts_proc... [CREATE TABLE in 1.73s]
2018-04-06 17:57:01,183: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b59b00>]}
2018-04-06 17:57:01,212: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f90208>]}
2018-04-06 17:57:01,369: 17:57:01 | 11 of 75 OK created table model agency_data_pipeline.carts_proc...... [CREATE TABLE in 1.74s]
2018-04-06 17:57:01,561: 17:57:01 | 9 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.81s]
2018-04-06 17:57:02,517: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113fc3a90>]}
2018-04-06 17:57:02,705: 17:57:02 | 12 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.86s]
2018-04-06 17:57:02,706: 17:57:02 | 13 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 17:57:02,706: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 17:57:02,710: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 17:57:02,711: 17:57:02 | 14 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 17:57:02,711: 17:57:02 | 15 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 17:57:02,711: 17:57:02 | 16 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 17:57:02,711: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 17:57:02,711: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 17:57:02,711: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 17:57:02,716: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 17:57:02,719: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 17:57:02,720: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 17:57:02,728: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 17:57:02,729: Acquiring new bigquery connection "adwords_ads".
2018-04-06 17:57:02,730: Re-using an available connection from the pool.
2018-04-06 17:57:02,733: Re-using an available connection from the pool.
2018-04-06 17:57:02,734: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:02,735: Re-using an available connection from the pool.
2018-04-06 17:57:02,740: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 17:57:02,740: Re-using an available connection from the pool.
2018-04-06 17:57:03,318: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 17:57:03,340: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 17:57:03,388: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 17:57:03,897: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 17:57:04,655: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 17:57:05,500: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b3d5f8>]}
2018-04-06 17:57:05,569: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b22128>]}
2018-04-06 17:57:05,684: 17:57:05 | 13 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.79s]
2018-04-06 17:57:05,686: 17:57:05 | 17 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 17:57:05,687: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 17:57:05,692: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 17:57:05,692: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 17:57:05,692: Re-using an available connection from the pool.
2018-04-06 17:57:05,876: 17:57:05 | 14 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.86s]
2018-04-06 17:57:05,876: 17:57:05 | 18 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 17:57:05,876: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 17:57:05,883: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 17:57:05,883: Re-using an available connection from the pool.
2018-04-06 17:57:05,884: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:06,414: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 17:57:06,843: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b59cc0>]}
2018-04-06 17:57:07,043: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 17:57:07,078: 17:57:07 | 16 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.13s]
2018-04-06 17:57:07,079: 17:57:07 | 19 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 17:57:07,079: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 17:57:07,090: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 17:57:07,090: Re-using an available connection from the pool.
2018-04-06 17:57:07,091: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:07,388: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 17:57:07,637: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 17:57:08,003: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 17:57:08,598: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093c18>]}
2018-04-06 17:57:08,768: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11406b128>]}
2018-04-06 17:57:08,782: 17:57:08 | 17 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.91s]
2018-04-06 17:57:08,784: 17:57:08 | 20 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 17:57:08,785: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 17:57:08,790: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 17:57:08,791: Re-using an available connection from the pool.
2018-04-06 17:57:08,791: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:08,976: 17:57:08 | 15 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.06s]
2018-04-06 17:57:09,215: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 17:57:09,797: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11402f748>]}
2018-04-06 17:57:09,801: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 17:57:09,981: 17:57:09 | 18 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.92s]
2018-04-06 17:57:11,270: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b3dbe0>]}
2018-04-06 17:57:11,460: 17:57:11 | 19 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 4.19s]
2018-04-06 17:57:11,991: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093c18>]}
2018-04-06 17:57:12,202: 17:57:12 | 20 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.21s]
2018-04-06 17:57:12,203: 17:57:12 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 17:57:12,203: 17:57:12 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 17:57:12,203: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 17:57:12,203: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 17:57:12,215: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 17:57:12,215: Acquiring new bigquery connection "fb_ads".
2018-04-06 17:57:12,215: Re-using an available connection from the pool.
2018-04-06 17:57:12,215: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:12,216: Re-using an available connection from the pool.
2018-04-06 17:57:12,216: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:12,533: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 17:57:12,679: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 17:57:13,176: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 17:57:13,265: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 17:57:15,419: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a880b8>]}
2018-04-06 17:57:15,608: 17:57:15 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.22s]
2018-04-06 17:57:17,506: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110aa1128>]}
2018-04-06 17:57:17,694: 17:57:17 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 5.30s]
2018-04-06 17:57:17,695: 17:57:17 | 23 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 17:57:17,695: 17:57:17 | 24 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 17:57:17,695: 17:57:17 | 25 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 17:57:17,695: 17:57:17 | 26 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 17:57:17,695: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 17:57:17,695: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 17:57:17,695: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 17:57:17,696: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 17:57:17,699: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 17:57:17,706: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 17:57:17,713: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 17:57:17,717: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 17:57:17,717: Re-using an available connection from the pool.
2018-04-06 17:57:17,718: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:17,719: Re-using an available connection from the pool.
2018-04-06 17:57:17,719: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:17,721: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 17:57:17,721: Re-using an available connection from the pool.
2018-04-06 17:57:17,722: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 17:57:17,723: Re-using an available connection from the pool.
2018-04-06 17:57:18,041: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 17:57:18,081: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 17:57:18,289: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 17:57:18,300: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 17:57:18,650: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 17:57:18,858: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 17:57:20,445: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110aa8a90>]}
2018-04-06 17:57:20,636: 17:57:20 | 26 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.75s]
2018-04-06 17:57:20,637: 17:57:20 | 27 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 17:57:20,637: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 17:57:20,641: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 17:57:20,642: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 17:57:20,642: Re-using an available connection from the pool.
2018-04-06 17:57:20,832: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b109e8>]}
2018-04-06 17:57:21,395: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 17:57:21,413: 17:57:21 | 24 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.14s]
2018-04-06 17:57:22,629: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b104a8>]}
2018-04-06 17:57:22,814: 17:57:22 | 23 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 4.93s]
2018-04-06 17:57:26,845: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110aa8a90>]}
2018-04-06 17:57:27,040: 17:57:27 | 27 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 6.21s]
2018-04-06 17:57:27,576: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f52f28>]}
2018-04-06 17:57:27,761: 17:57:27 | 25 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 9.88s]
2018-04-06 17:57:27,762: 17:57:27 | 28 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 17:57:27,762: 17:57:27 | 29 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 17:57:27,762: 17:57:27 | 30 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 17:57:27,762: 17:57:27 | 31 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 17:57:27,762: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 17:57:27,762: Compiling model.agency_data_pipeline.agg_products
2018-04-06 17:57:27,763: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 17:57:27,763: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 17:57:27,767: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 17:57:27,771: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 17:57:27,785: Acquiring new bigquery connection "ga_transactions".
2018-04-06 17:57:27,791: Acquiring new bigquery connection "ga_traffic".
2018-04-06 17:57:27,792: Re-using an available connection from the pool.
2018-04-06 17:57:27,792: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:27,792: Acquiring new bigquery connection "adwords_join".
2018-04-06 17:57:27,792: Re-using an available connection from the pool.
2018-04-06 17:57:27,793: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:27,793: Re-using an available connection from the pool.
2018-04-06 17:57:27,795: Acquiring new bigquery connection "agg_products".
2018-04-06 17:57:27,796: Re-using an available connection from the pool.
2018-04-06 17:57:28,382: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 17:57:28,477: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 17:57:28,893: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:29,083: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 17:57:29,461: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:57:29,646: 17:57:29 | 29 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.70s]
2018-04-06 17:57:29,646: 17:57:29 | 32 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 17:57:29,646: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 17:57:29,650: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 17:57:29,651: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 17:57:29,651: Re-using an available connection from the pool.
2018-04-06 17:57:30,054: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 17:57:30,223: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 17:57:30,662: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 17:57:30,758: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 17:57:30,834: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 17:57:31,769: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b3de10>]}
2018-04-06 17:57:32,374: 17:57:32 | 28 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 4.01s]
2018-04-06 17:57:36,102: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b104e0>]}
2018-04-06 17:57:36,295: 17:57:36 | 30 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.34s]
2018-04-06 17:57:38,333: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:57:38,512: 17:57:38 | 32 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 8.69s]
2018-04-06 17:57:40,567: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a88e10>]}
2018-04-06 17:57:40,748: 17:57:40 | 31 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 12.80s]
2018-04-06 17:57:40,749: 17:57:40 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 17:57:40,749: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 17:57:40,754: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 17:57:40,749: 17:57:40 | 34 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 17:57:40,754: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 17:57:40,759: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 17:57:40,749: 17:57:40 | 35 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 17:57:40,759: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 17:57:40,749: 17:57:40 | 36 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 17:57:40,765: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 17:57:40,765: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 17:57:40,771: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 17:57:40,787: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 17:57:40,787: Re-using an available connection from the pool.
2018-04-06 17:57:40,790: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 17:57:40,791: Re-using an available connection from the pool.
2018-04-06 17:57:40,795: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 17:57:40,795: Re-using an available connection from the pool.
2018-04-06 17:57:40,835: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 17:57:40,835: Re-using an available connection from the pool.
2018-04-06 17:57:41,359: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 17:57:41,392: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 17:57:41,394: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 17:57:41,447: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 17:57:42,455: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08eb8>]}
2018-04-06 17:57:42,640: 17:57:42 | 35 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.70s]
2018-04-06 17:57:42,640: 17:57:42 | 37 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 17:57:42,640: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 17:57:42,645: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 17:57:42,646: Acquiring new bigquery connection "adwords_stats".
2018-04-06 17:57:42,646: Re-using an available connection from the pool.
2018-04-06 17:57:43,266: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 17:57:43,554: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f52f28>]}
2018-04-06 17:57:43,759: 17:57:43 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.80s]
2018-04-06 17:57:44,703: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110a884a8>]}
2018-04-06 17:57:44,885: 17:57:44 | 34 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 3.95s]
2018-04-06 17:57:45,451: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08eb8>]}
2018-04-06 17:57:45,647: 17:57:45 | 37 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.81s]
2018-04-06 17:57:48,944: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:57:49,132: 17:57:49 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 8.18s]
2018-04-06 17:57:49,132: 17:57:49 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 17:57:49,132: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 17:57:49,137: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 17:57:49,138: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 17:57:49,138: Re-using an available connection from the pool.
2018-04-06 17:57:49,758: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 17:57:54,104: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08ef0>]}
2018-04-06 17:57:54,287: 17:57:54 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 4.97s]
2018-04-06 17:57:54,287: 17:57:54 | 39 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 17:57:54,288: 17:57:54 | 40 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 17:57:54,288: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 17:57:54,288: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 17:57:54,297: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 17:57:54,298: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 17:57:54,597: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 17:57:54,597: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 17:57:54,597: Re-using an available connection from the pool.
2018-04-06 17:57:54,597: Re-using an available connection from the pool.
2018-04-06 17:57:55,189: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 17:57:55,208: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 17:58:00,701: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140932b0>]}
2018-04-06 17:58:00,887: 17:58:00 | 40 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 6.41s]
2018-04-06 17:58:03,888: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:58:04,074: 17:58:04 | 39 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.60s]
2018-04-06 17:58:04,075: 17:58:04 | 41 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 17:58:04,075: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 17:58:04,080: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 17:58:04,075: 17:58:04 | 42 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 17:58:04,081: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 17:58:04,085: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 17:58:04,086: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 17:58:04,087: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 17:58:04,087: Re-using an available connection from the pool.
2018-04-06 17:58:04,087: Re-using an available connection from the pool.
2018-04-06 17:58:04,625: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 17:58:04,724: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 17:58:07,940: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b60320>]}
2018-04-06 17:58:08,128: 17:58:08 | 41 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.86s]
2018-04-06 17:58:09,030: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b34eb8>]}
2018-04-06 17:58:09,218: 17:58:09 | 42 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 4.95s]
2018-04-06 17:58:09,218: 17:58:09 | 43 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 17:58:09,218: 17:58:09 | 44 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 17:58:09,218: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 17:58:09,218: 17:58:09 | 45 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 17:58:09,219: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 17:58:09,222: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 17:58:09,223: Compiling model.agency_data_pipeline.products_proc
2018-04-06 17:58:09,230: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 17:58:09,235: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 17:58:09,237: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 17:58:09,237: Re-using an available connection from the pool.
2018-04-06 17:58:09,238: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 17:58:09,238: Re-using an available connection from the pool.
2018-04-06 17:58:09,239: Acquiring new bigquery connection "products_proc".
2018-04-06 17:58:09,240: Re-using an available connection from the pool.
2018-04-06 17:58:09,819: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 17:58:09,842: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 17:58:09,853: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 17:58:11,976: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:58:12,160: 17:58:12 | 43 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.76s]
2018-04-06 17:58:17,443: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b34be0>]}
2018-04-06 17:58:17,630: 17:58:17 | 45 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 8.22s]
2018-04-06 17:58:47,043: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ac6390>]}
2018-04-06 17:58:47,687: 17:58:47 | 44 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 37.82s]
2018-04-06 17:58:47,687: 17:58:47 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 17:58:47,687: 17:58:47 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 17:58:47,688: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 17:58:47,688: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 17:58:47,692: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 17:58:47,695: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 17:58:47,696: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 17:58:47,696: Re-using an available connection from the pool.
2018-04-06 17:58:47,697: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 17:58:47,697: Re-using an available connection from the pool.
2018-04-06 17:58:49,872: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 17:58:49,880: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 17:58:52,778: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ac6438>]}
2018-04-06 17:58:52,785: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110ac6358>]}
2018-04-06 17:58:52,970: 17:58:52 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 5.09s]
2018-04-06 17:58:53,158: 17:58:53 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 5.10s]
2018-04-06 17:58:53,158: 17:58:53 | 48 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 17:58:53,158: 17:58:53 | 49 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 17:58:53,159: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 17:58:53,159: 17:58:53 | 50 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 17:58:53,159: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 17:58:53,164: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 17:58:53,164: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 17:58:53,169: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 17:58:53,173: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 17:58:53,182: Acquiring new bigquery connection "agg_transaction".
2018-04-06 17:58:53,182: Re-using an available connection from the pool.
2018-04-06 17:58:53,185: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 17:58:53,185: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 17:58:53,185: Re-using an available connection from the pool.
2018-04-06 17:58:53,185: Re-using an available connection from the pool.
2018-04-06 17:58:54,800: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 17:58:55,320: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 17:58:55,331: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 17:58:58,196: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:58:58,410: 17:58:58 | 48 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 5.04s]
2018-04-06 17:59:02,621: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110afc4a8>]}
2018-04-06 17:59:02,815: 17:59:02 | 50 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 9.46s]
2018-04-06 17:59:25,984: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110aa8e80>]}
2018-04-06 17:59:26,372: 17:59:26 | 49 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 32.83s]
2018-04-06 17:59:26,373: 17:59:26 | 51 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 17:59:26,374: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 17:59:26,373: 17:59:26 | 52 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 17:59:26,379: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 17:59:26,380: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 17:59:26,373: 17:59:26 | 53 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 17:59:26,373: 17:59:26 | 54 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 17:59:26,387: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 17:59:26,387: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 17:59:26,387: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 17:59:26,395: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 17:59:26,396: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 17:59:26,437: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 17:59:26,443: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 17:59:26,444: Re-using an available connection from the pool.
2018-04-06 17:59:26,445: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 17:59:26,448: Re-using an available connection from the pool.
2018-04-06 17:59:26,451: Re-using an available connection from the pool.
2018-04-06 17:59:26,486: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 17:59:26,486: Re-using an available connection from the pool.
2018-04-06 17:59:28,090: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 17:59:28,566: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 17:59:28,567: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 17:59:28,603: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 17:59:30,015: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b2d198>]}
2018-04-06 17:59:30,202: 17:59:30 | 53 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 3.63s]
2018-04-06 17:59:31,477: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11402f748>]}
2018-04-06 17:59:31,666: 17:59:31 | 51 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 5.10s]
2018-04-06 17:59:32,934: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114010f98>]}
2018-04-06 17:59:33,158: 17:59:33 | 52 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 6.55s]
2018-04-06 17:59:56,156: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 17:59:56,853: 17:59:56 | 54 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 29.77s]
2018-04-06 17:59:56,853: 17:59:56 | 55 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 17:59:56,854: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 17:59:56,858: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 17:59:56,858: 17:59:56 | 56 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 17:59:56,858: 17:59:56 | 57 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 17:59:56,858: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 17:59:56,858: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 17:59:56,862: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 17:59:56,867: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 17:59:57,048: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 17:59:57,049: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 17:59:57,049: Re-using an available connection from the pool.
2018-04-06 17:59:57,050: Re-using an available connection from the pool.
2018-04-06 17:59:57,106: Acquiring new bigquery connection "customers_proc".
2018-04-06 17:59:57,106: Re-using an available connection from the pool.
2018-04-06 17:59:57,876: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy,
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, period, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 17:59:57,988: Bad request while running:
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy,
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, period, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 17:59:57,988: 400 Syntax error: Trailing comma before the FROM clause is not allowed at [21:1]
2018-04-06 17:59:57,989: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11402f080>]}
2018-04-06 17:59:58,067: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 17:59:58,077: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 17:59:58,174: 17:59:58 | 56 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers_products [ERROR in 1.13s]
2018-04-06 18:00:16,491: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140938d0>]}
2018-04-06 18:00:16,684: 18:00:16 | 55 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 19.64s]
2018-04-06 18:00:29,628: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b59f60>]}
2018-04-06 18:00:29,812: 18:00:29 | 57 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 32.77s]
2018-04-06 18:00:29,812: 18:00:29 | 58 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:00:29,812: 18:00:29 | 59 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:00:29,812: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:00:29,812: 18:00:29 | 60 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:00:29,813: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:00:29,818: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:00:29,818: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:00:29,823: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:00:29,827: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:00:29,840: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:00:29,840: Re-using an available connection from the pool.
2018-04-06 18:00:29,841: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:00:29,841: Re-using an available connection from the pool.
2018-04-06 18:00:29,842: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:00:29,842: Re-using an available connection from the pool.
2018-04-06 18:00:30,466: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:00:30,498: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:00:30,533: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:00:32,640: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b60898>]}
2018-04-06 18:00:32,835: 18:00:32 | 59 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.83s]
2018-04-06 18:00:34,936: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f760f0>]}
2018-04-06 18:00:35,120: 18:00:35 | 58 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 5.12s]
2018-04-06 18:00:44,876: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b59f60>]}
2018-04-06 18:00:45,093: 18:00:45 | 60 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 15.06s]
2018-04-06 18:00:45,093: 18:00:45 | 61 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:00:45,093: 18:00:45 | 62 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:00:45,093: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:00:45,093: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:00:45,098: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:00:45,104: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:00:45,105: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:00:45,105: Re-using an available connection from the pool.
2018-04-06 18:00:45,106: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:00:45,106: Re-using an available connection from the pool.
2018-04-06 18:00:45,643: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:00:45,735: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:00:49,016: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f8acc0>]}
2018-04-06 18:00:49,237: 18:00:49 | 61 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.92s]
2018-04-06 18:01:19,191: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140938d0>]}
2018-04-06 18:01:19,863: 18:01:19 | 62 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 34.10s]
2018-04-06 18:01:19,864: 18:01:19 | 63 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:01:19,864: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:01:19,869: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:01:19,869: 18:01:19 | 64 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:01:19,870: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:01:19,874: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:01:19,875: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:01:19,875: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:01:19,875: Re-using an available connection from the pool.
2018-04-06 18:01:19,876: Re-using an available connection from the pool.
2018-04-06 18:01:20,469: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:01:20,531: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:01:24,829: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f8acc0>]}
2018-04-06 18:01:25,012: 18:01:25 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 4.96s]
2018-04-06 18:01:45,476: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113fc3a90>]}
2018-04-06 18:01:45,662: 18:01:45 | 63 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 25.61s]
2018-04-06 18:01:45,662: 18:01:45 | 65 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 18:01:45,662: 18:01:45 | 66 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 18:01:45,662: 18:01:45 | 67 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 18:01:45,663: 18:01:45 | 68 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 18:01:45,663: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:01:45,663: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:01:45,663: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:01:45,663: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:01:45,668: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 18:01:45,673: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 18:01:45,677: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 18:01:45,680: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 18:01:45,725: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 18:01:45,726: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 18:01:45,727: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 18:01:45,726: Re-using an available connection from the pool.
2018-04-06 18:01:45,726: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 18:01:45,728: Re-using an available connection from the pool.
2018-04-06 18:01:45,728: Re-using an available connection from the pool.
2018-04-06 18:01:45,730: Re-using an available connection from the pool.
2018-04-06 18:01:46,284: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy,
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, period, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:01:46,284: Bad request while running:
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy,
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, period, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:01:46,284: 400 Syntax error: Trailing comma before the FROM clause is not allowed at [20:1]
2018-04-06 18:01:46,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093b00>]}
2018-04-06 18:01:46,384: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 18:01:46,441: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 18:01:46,464: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 18:01:46,469: 18:01:46 | 68 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers [ERROR in 0.62s]
2018-04-06 18:01:46,469: 18:01:46 | 69 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 18:01:46,470: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:01:46,474: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 18:01:46,475: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 18:01:46,475: Re-using an available connection from the pool.
2018-04-06 18:01:47,100: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 18:01:48,688: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1140938d0>]}
2018-04-06 18:01:48,878: 18:01:48 | 65 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 3.03s]
2018-04-06 18:01:49,638: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113fc3f60>]}
2018-04-06 18:01:49,821: 18:01:49 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 3.98s]
2018-04-06 18:01:50,779: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114045390>]}
2018-04-06 18:01:50,972: 18:01:50 | 67 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 5.12s]
2018-04-06 18:01:56,834: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093b00>]}
2018-04-06 18:01:57,022: 18:01:57 | 69 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 10.36s]
2018-04-06 18:01:57,022: 18:01:57 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 18:01:57,022: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 18:01:57,027: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 18:01:57,028: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 18:01:57,028: Re-using an available connection from the pool.
2018-04-06 18:01:57,712: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 18:02:36,687: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08cc0>]}
2018-04-06 18:02:37,365: 18:02:37 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 39.67s]
2018-04-06 18:02:37,365: 18:02:37 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 18:02:37,365: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:02:37,370: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 18:02:37,371: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 18:02:37,371: Re-using an available connection from the pool.
2018-04-06 18:02:38,095: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 18:02:58,628: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093b00>]}
2018-04-06 18:02:59,028: 18:02:59 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 21.26s]
2018-04-06 18:02:59,029: 18:02:59 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 18:02:59,029: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 18:02:59,034: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 18:02:59,423: Acquiring new bigquery connection "growth_date_union".
2018-04-06 18:02:59,423: Re-using an available connection from the pool.
2018-04-06 18:03:00,146: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 18:03:01,259: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08cc0>]}
2018-04-06 18:03:01,448: 18:03:01 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 2.23s]
2018-04-06 18:03:01,448: 18:03:01 | 73 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 18:03:01,449: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 18:03:01,455: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 18:03:01,455: 18:03:01 | 74 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 18:03:01,456: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 18:03:01,463: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 18:03:01,478: Acquiring new bigquery connection "retention_stats".
2018-04-06 18:03:01,478: Re-using an available connection from the pool.
2018-04-06 18:03:01,479: Acquiring new bigquery connection "growth_stats".
2018-04-06 18:03:01,479: Re-using an available connection from the pool.
2018-04-06 18:03:02,186: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 18:03:02,317: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 18:03:03,364: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11406bb00>]}
2018-04-06 18:03:03,547: 18:03:03 | 74 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.91s]
2018-04-06 18:03:08,815: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x114093b00>]}
2018-04-06 18:03:09,002: 18:03:09 | 73 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 7.37s]
2018-04-06 18:03:09,002: 18:03:09 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 18:03:09,002: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 18:03:09,007: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 18:03:09,007: Acquiring new bigquery connection "agg_campaign".
2018-04-06 18:03:09,007: Re-using an available connection from the pool.
2018-04-06 18:03:09,700: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:03:23,759: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2011decf-caa2-47d4-851b-d53dd080c155', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110b08cc0>]}
2018-04-06 18:03:23,949: 18:03:23 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 14.76s]
2018-04-06 18:03:24,010: 18:03:24 | 
2018-04-06 18:03:24,011: 18:03:24 | Finished running 75 table models in 391.24s.
2018-04-06 18:03:24,011: Connection 'master' was left open.
2018-04-06 18:03:24,012: 
2018-04-06 18:03:24,012: Completed with 2 errors:
2018-04-06 18:03:24,012: 
2018-04-06 18:03:24,012: Database Error in model segment_stats_customers_products (models/segmentation/customers-products/segment_stats_customers_products.sql)
2018-04-06 18:03:24,012:   Syntax error: Trailing comma before the FROM clause is not allowed at [21:1]
2018-04-06 18:03:24,012:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers-products/segment_stats_customers_products.sql
2018-04-06 18:03:24,012: 
2018-04-06 18:03:24,013: Database Error in model segment_stats_customers (models/segmentation/customers/segment_stats_customers.sql)
2018-04-06 18:03:24,013:   Syntax error: Trailing comma before the FROM clause is not allowed at [20:1]
2018-04-06 18:03:24,013:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers/segment_stats_customers.sql
2018-04-06 18:03:24,013: 
Done. PASS=73 ERROR=2 SKIP=0 TOTAL=75
2018-04-06 18:03:24,014: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f52e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f52ba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x113f52dd8>]}
2018-04-06 18:03:24,198: Flushing usage events
2018-04-06 18:03:53,306: Tracking: tracking
2018-04-06 18:03:53,306: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104cf6fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104cf6e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104cf6b38>]}
2018-04-06 18:03:54,148: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 18:03:54,178: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 18:03:54,207: Parsing get_column_values.sql
2018-04-06 18:03:54,247: Parsing get_url_parameter.sql
2018-04-06 18:03:54,250: Parsing split_part.sql
2018-04-06 18:03:54,254: Parsing table_exists.sql
2018-04-06 18:03:54,264: Parsing core.sql
2018-04-06 18:03:54,286: Parsing adapters/bigquery.sql
2018-04-06 18:03:54,291: Parsing adapters/common.sql
2018-04-06 18:03:54,303: Parsing adapters/postgres.sql
2018-04-06 18:03:54,306: Parsing adapters/redshift.sql
2018-04-06 18:03:54,321: Parsing etc/get_custom_schema.sql
2018-04-06 18:03:54,340: Parsing materializations/archive.sql
2018-04-06 18:03:54,368: Parsing materializations/bigquery.sql
2018-04-06 18:03:54,384: Parsing materializations/helpers.sql
2018-04-06 18:03:54,409: Parsing materializations/incremental.sql
2018-04-06 18:03:54,433: Parsing materializations/table.sql
2018-04-06 18:03:54,448: Parsing materializations/view.sql
2018-04-06 18:03:54,473: Parsing materializations/wrapper.sql
2018-04-06 18:03:54,520: Parsing schema_tests/accepted_values.sql
2018-04-06 18:03:54,523: Parsing schema_tests/not_null.sql
2018-04-06 18:03:54,524: Parsing schema_tests/relationships.sql
2018-04-06 18:03:54,528: Parsing schema_tests/unique.sql
2018-04-06 18:03:55,167: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 18:03:55,168: Parsing model.agency_data_pipeline.all_dates
2018-04-06 18:03:55,169: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 18:03:55,170: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 18:03:55,173: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:03:55,174: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:03:55,175: Acquiring new bigquery connection "master".
2018-04-06 18:03:55,175: Opening a new connection (0 currently allocated)
2018-04-06 18:03:55,205: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 18:03:55,207: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 18:03:55,208: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:03:55,210: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 18:03:55,211: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:03:55,213: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 18:03:55,215: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 18:03:55,216: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 18:03:55,217: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:03:55,220: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:03:55,222: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:03:55,223: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:03:55,225: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 18:03:55,230: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 18:03:55,235: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:03:55,239: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:03:55,244: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:03:55,246: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 18:03:55,247: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 18:03:55,259: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 18:03:55,266: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:03:55,268: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:03:55,270: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:03:55,276: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:03:55,282: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:03:55,287: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:03:55,291: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 18:03:55,294: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 18:03:55,295: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:03:55,298: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:03:55,300: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 18:03:55,302: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:03:55,303: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:03:55,306: Parsing model.agency_data_pipeline.agg_products
2018-04-06 18:03:55,307: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 18:03:55,309: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:03:55,310: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:03:55,312: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:03:55,314: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:03:55,315: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:03:55,317: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:03:55,319: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:03:55,321: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 18:03:55,323: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 18:03:55,328: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 18:03:55,330: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:03:55,332: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:03:55,334: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:03:55,335: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 18:03:55,337: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 18:03:55,339: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 18:03:55,342: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:03:55,344: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:03:55,346: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 18:03:55,348: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 18:03:55,350: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:03:55,352: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:03:55,353: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:03:55,356: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:03:55,357: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 18:03:55,360: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:03:55,362: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:03:55,364: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:03:55,366: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 18:03:55,367: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 18:03:55,369: Parsing model.agency_data_pipeline.products_proc
2018-04-06 18:03:55,371: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:03:55,373: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 18:03:55,374: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:03:55,393: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 18:03:55,423: 
2018-04-06 18:03:56,520: 18:03:56 | Concurrency: 4 threads (target='prod')
2018-04-06 18:03:56,520: 18:03:56 | 
2018-04-06 18:03:56,885: 18:03:56 | 1 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 18:03:56,886: 18:03:56 | 2 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 18:03:56,886: 18:03:56 | 3 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 18:03:56,886: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 18:03:56,886: 18:03:56 | 4 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 18:03:56,886: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 18:03:56,886: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:03:56,890: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 18:03:56,890: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 18:03:56,893: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 18:03:56,898: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 18:03:56,902: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 18:03:56,938: Acquiring new bigquery connection "monthend_dates".
2018-04-06 18:03:56,939: Opening a new connection (1 currently allocated)
2018-04-06 18:03:57,141: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 18:03:57,142: Acquiring new bigquery connection "carts_proc".
2018-04-06 18:03:57,143: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 18:03:57,145: Opening a new connection (2 currently allocated)
2018-04-06 18:03:57,184: Opening a new connection (3 currently allocated)
2018-04-06 18:03:57,232: Opening a new connection (4 currently allocated)
2018-04-06 18:03:58,069: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 18:03:58,116: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 18:03:58,127: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 18:03:58,200: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 18:03:59,159: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104db8ef0>]}
2018-04-06 18:03:59,364: 18:03:59 | 1 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 2.27s]
2018-04-06 18:03:59,365: 18:03:59 | 5 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 18:03:59,365: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 18:03:59,369: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 18:03:59,369: Acquiring new bigquery connection "adwords_urls".
2018-04-06 18:03:59,369: Re-using an available connection from the pool.
2018-04-06 18:03:59,987: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 18:04:00,277: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0978>]}
2018-04-06 18:04:00,278: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b0048>]}
2018-04-06 18:04:00,425: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0748>]}
2018-04-06 18:04:00,465: 18:04:00 | 3 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 3.39s]
2018-04-06 18:04:00,465: 18:04:00 | 6 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 18:04:00,465: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 18:04:00,469: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 18:04:00,471: Acquiring new bigquery connection "ga_conversions".
2018-04-06 18:04:00,471: Re-using an available connection from the pool.
2018-04-06 18:04:00,661: 18:04:00 | 4 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 3.39s]
2018-04-06 18:04:00,661: 18:04:00 | 7 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 18:04:00,662: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 18:04:00,666: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 18:04:00,668: Acquiring new bigquery connection "accounts_proc".
2018-04-06 18:04:00,669: Re-using an available connection from the pool.
2018-04-06 18:04:00,859: 18:04:00 | 2 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 3.54s]
2018-04-06 18:04:00,859: 18:04:00 | 8 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 18:04:00,859: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:04:00,864: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 18:04:00,864: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 18:04:00,865: Re-using an available connection from the pool.
2018-04-06 18:04:01,164: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 18:04:01,273: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 18:04:01,475: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 18:04:02,247: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0978>]}
2018-04-06 18:04:02,430: 18:04:02 | 6 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 1.78s]
2018-04-06 18:04:02,430: 18:04:02 | 9 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 18:04:02,430: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:04:02,434: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 18:04:02,435: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 18:04:02,435: Re-using an available connection from the pool.
2018-04-06 18:04:03,148: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 18:04:03,309: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104db8ef0>]}
2018-04-06 18:04:03,456: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:04:03,492: 18:04:03 | 5 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 3.94s]
2018-04-06 18:04:03,492: 18:04:03 | 10 of 75 START table model agency_data_pipeline.all_dates............ [RUN]
2018-04-06 18:04:03,493: Compiling model.agency_data_pipeline.all_dates
2018-04-06 18:04:03,496: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 18:04:03,498: Acquiring new bigquery connection "all_dates".
2018-04-06 18:04:03,499: Re-using an available connection from the pool.
2018-04-06 18:04:03,690: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0748>]}
2018-04-06 18:04:03,691: 18:04:03 | 7 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 2.79s]
2018-04-06 18:04:03,691: 18:04:03 | 11 of 75 START table model agency_data_pipeline.clients_proc......... [RUN]
2018-04-06 18:04:03,692: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 18:04:03,695: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 18:04:03,697: Acquiring new bigquery connection "clients_proc".
2018-04-06 18:04:03,698: Re-using an available connection from the pool.
2018-04-06 18:04:03,880: 18:04:03 | 8 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.83s]
2018-04-06 18:04:03,881: 18:04:03 | 12 of 75 START table model agency_data_pipeline.adwords_campaigns.... [RUN]
2018-04-06 18:04:03,881: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:04:03,884: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 18:04:03,885: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 18:04:03,885: Re-using an available connection from the pool.
2018-04-06 18:04:04,082: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 18:04:04,309: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 18:04:04,542: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 18:04:05,171: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104db8ef0>]}
2018-04-06 18:04:05,306: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072bb630>]}
2018-04-06 18:04:05,356: 18:04:05 | 10 of 75 OK created table model agency_data_pipeline.all_dates....... [CREATE TABLE in 1.68s]
2018-04-06 18:04:05,397: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:04:05,549: 18:04:05 | 9 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.88s]
2018-04-06 18:04:05,738: 18:04:05 | 11 of 75 OK created table model agency_data_pipeline.clients_proc.... [CREATE TABLE in 1.71s]
2018-04-06 18:04:07,825: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107321e10>]}
2018-04-06 18:04:08,013: 18:04:08 | 12 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 3.94s]
2018-04-06 18:04:08,013: 18:04:08 | 13 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 18:04:08,014: 18:04:08 | 14 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 18:04:08,014: 18:04:08 | 15 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 18:04:08,014: 18:04:08 | 16 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 18:04:08,014: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 18:04:08,014: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:04:08,014: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:04:08,014: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:04:08,018: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 18:04:08,022: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 18:04:08,027: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 18:04:08,031: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 18:04:08,032: Acquiring new bigquery connection "adwords_ads".
2018-04-06 18:04:08,033: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 18:04:08,033: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 18:04:08,034: Re-using an available connection from the pool.
2018-04-06 18:04:08,034: Re-using an available connection from the pool.
2018-04-06 18:04:08,034: Re-using an available connection from the pool.
2018-04-06 18:04:08,052: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 18:04:08,052: Re-using an available connection from the pool.
2018-04-06 18:04:08,647: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 18:04:08,659: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 18:04:08,674: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 18:04:08,726: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 18:04:10,809: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b0080>]}
2018-04-06 18:04:10,832: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072d3048>]}
2018-04-06 18:04:11,021: 18:04:11 | 15 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.79s]
2018-04-06 18:04:11,022: 18:04:11 | 17 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 18:04:11,023: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 18:04:11,028: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 18:04:11,029: Re-using an available connection from the pool.
2018-04-06 18:04:11,029: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:11,213: 18:04:11 | 14 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.82s]
2018-04-06 18:04:11,213: 18:04:11 | 18 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 18:04:11,213: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:04:11,218: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 18:04:11,218: Re-using an available connection from the pool.
2018-04-06 18:04:11,218: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:11,989: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0358>]}
2018-04-06 18:04:12,120: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 18:04:12,180: 18:04:12 | 13 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 3.98s]
2018-04-06 18:04:12,180: 18:04:12 | 19 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 18:04:12,181: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:04:12,191: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 18:04:12,191: Re-using an available connection from the pool.
2018-04-06 18:04:12,191: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:12,407: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 18:04:12,747: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 18:04:12,955: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1ca20>]}
2018-04-06 18:04:13,096: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 18:04:13,142: 18:04:13 | 16 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 4.94s]
2018-04-06 18:04:13,142: 18:04:13 | 20 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 18:04:13,143: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:04:13,148: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 18:04:13,148: Re-using an available connection from the pool.
2018-04-06 18:04:13,148: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:13,274: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 18:04:13,505: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 18:04:14,116: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 18:04:14,913: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b0080>]}
2018-04-06 18:04:15,103: 18:04:15 | 17 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.89s]
2018-04-06 18:04:15,256: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f24908>]}
2018-04-06 18:04:15,455: 18:04:15 | 18 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 4.04s]
2018-04-06 18:04:15,825: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 18:04:17,349: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1ca20>]}
2018-04-06 18:04:17,530: 18:04:17 | 20 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 4.21s]
2018-04-06 18:04:17,996: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0358>]}
2018-04-06 18:04:18,180: 18:04:18 | 19 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 5.82s]
2018-04-06 18:04:18,181: 18:04:18 | 21 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 18:04:18,181: 18:04:18 | 22 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 18:04:18,181: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:04:18,181: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 18:04:18,187: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 18:04:18,192: Acquiring new bigquery connection "fb_ads".
2018-04-06 18:04:18,192: Re-using an available connection from the pool.
2018-04-06 18:04:18,192: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:18,193: Re-using an available connection from the pool.
2018-04-06 18:04:18,193: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:18,491: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 18:04:18,599: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 18:04:19,136: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 18:04:19,231: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 18:04:21,312: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0978>]}
2018-04-06 18:04:21,494: 18:04:21 | 22 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.13s]
2018-04-06 18:04:24,618: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072bb668>]}
2018-04-06 18:04:24,797: 18:04:24 | 21 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.44s]
2018-04-06 18:04:24,797: 18:04:24 | 23 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 18:04:24,798: 18:04:24 | 24 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 18:04:24,798: 18:04:24 | 25 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 18:04:24,798: 18:04:24 | 26 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 18:04:24,798: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:04:24,798: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 18:04:24,798: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:04:24,798: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:04:24,802: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 18:04:24,806: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 18:04:24,817: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 18:04:24,817: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 18:04:24,817: Re-using an available connection from the pool.
2018-04-06 18:04:24,817: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:24,895: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 18:04:24,895: Re-using an available connection from the pool.
2018-04-06 18:04:24,895: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 18:04:24,896: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 18:04:24,898: Re-using an available connection from the pool.
2018-04-06 18:04:24,899: Re-using an available connection from the pool.
2018-04-06 18:04:25,191: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 18:04:25,501: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 18:04:25,503: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 18:04:25,565: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 18:04:25,812: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 18:04:27,977: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107347748>]}
2018-04-06 18:04:28,170: 18:04:28 | 25 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.18s]
2018-04-06 18:04:28,170: 18:04:28 | 27 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 18:04:28,170: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:04:28,178: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 18:04:28,178: Re-using an available connection from the pool.
2018-04-06 18:04:28,178: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:28,529: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 18:04:28,758: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0358>]}
2018-04-06 18:04:28,954: 18:04:28 | 23 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 3.96s]
2018-04-06 18:04:29,376: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 18:04:29,916: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f24860>]}
2018-04-06 18:04:30,100: 18:04:30 | 26 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.12s]
2018-04-06 18:04:30,884: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107352160>]}
2018-04-06 18:04:31,064: 18:04:31 | 24 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 6.09s]
2018-04-06 18:04:36,935: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107352630>]}
2018-04-06 18:04:37,118: 18:04:37 | 27 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 8.76s]
2018-04-06 18:04:37,119: 18:04:37 | 28 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 18:04:37,119: 18:04:37 | 29 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 18:04:37,119: 18:04:37 | 30 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 18:04:37,119: 18:04:37 | 31 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 18:04:37,119: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 18:04:37,119: Compiling model.agency_data_pipeline.agg_products
2018-04-06 18:04:37,119: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 18:04:37,120: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 18:04:37,130: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 18:04:37,134: Acquiring new bigquery connection "ga_traffic".
2018-04-06 18:04:37,143: Acquiring new bigquery connection "ga_transactions".
2018-04-06 18:04:37,147: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 18:04:37,147: Re-using an available connection from the pool.
2018-04-06 18:04:37,148: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:37,148: Re-using an available connection from the pool.
2018-04-06 18:04:37,148: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:37,152: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 18:04:37,152: Re-using an available connection from the pool.
2018-04-06 18:04:37,153: Acquiring new bigquery connection "agg_products".
2018-04-06 18:04:37,154: Re-using an available connection from the pool.
2018-04-06 18:04:37,725: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 18:04:37,754: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 18:04:38,329: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:39,605: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 18:04:39,923: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072e47b8>]}
2018-04-06 18:04:39,987: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:04:40,120: 18:04:40 | 29 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 2.80s]
2018-04-06 18:04:40,120: 18:04:40 | 32 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 18:04:40,120: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 18:04:40,125: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 18:04:40,125: Acquiring new bigquery connection "adwords_join".
2018-04-06 18:04:40,125: Re-using an available connection from the pool.
2018-04-06 18:04:40,459: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 18:04:40,512: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 18:04:41,241: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 18:04:44,223: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104eb8860>]}
2018-04-06 18:04:44,403: 18:04:44 | 31 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 7.10s]
2018-04-06 18:04:46,672: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104eb8080>]}
2018-04-06 18:04:46,855: 18:04:46 | 30 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 9.55s]
2018-04-06 18:04:49,098: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072bb668>]}
2018-04-06 18:04:49,313: 18:04:49 | 28 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 11.98s]
2018-04-06 18:05:22,510: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 18:05:26,845: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072e47b8>]}
2018-04-06 18:05:27,439: 18:05:27 | 32 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 46.72s]
2018-04-06 18:05:27,440: 18:05:27 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 18:05:27,440: 18:05:27 | 34 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 18:05:27,440: 18:05:27 | 35 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 18:05:27,440: 18:05:27 | 36 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 18:05:27,440: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:05:27,440: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:05:27,440: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:05:27,441: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:05:27,450: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 18:05:27,451: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 18:05:27,454: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 18:05:27,458: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 18:05:27,459: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 18:05:27,460: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 18:05:27,460: Re-using an available connection from the pool.
2018-04-06 18:05:27,460: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 18:05:27,461: Re-using an available connection from the pool.
2018-04-06 18:05:27,462: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 18:05:27,462: Re-using an available connection from the pool.
2018-04-06 18:05:27,464: Re-using an available connection from the pool.
2018-04-06 18:05:28,081: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 18:05:28,096: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 18:05:28,096: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 18:05:28,125: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 18:05:29,166: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1073036d8>]}
2018-04-06 18:05:29,354: 18:05:29 | 36 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.73s]
2018-04-06 18:05:29,354: 18:05:29 | 37 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 18:05:29,354: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 18:05:29,358: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 18:05:29,359: Acquiring new bigquery connection "adwords_stats".
2018-04-06 18:05:29,359: Re-using an available connection from the pool.
2018-04-06 18:05:30,023: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 18:05:31,376: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:05:31,566: 18:05:31 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 3.94s]
2018-04-06 18:05:32,249: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072f6828>]}
2018-04-06 18:05:32,421: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10733cf60>]}
2018-04-06 18:05:32,440: 18:05:32 | 37 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.89s]
2018-04-06 18:05:32,629: 18:05:32 | 35 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 4.98s]
2018-04-06 18:05:35,663: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10733cf98>]}
2018-04-06 18:05:35,875: 18:05:35 | 34 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 8.22s]
2018-04-06 18:05:35,876: 18:05:35 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 18:05:35,876: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:05:35,881: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 18:05:35,887: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 18:05:35,887: Re-using an available connection from the pool.
2018-04-06 18:05:36,518: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 18:05:40,867: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072e47b8>]}
2018-04-06 18:05:41,054: 18:05:41 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 4.99s]
2018-04-06 18:05:41,054: 18:05:41 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 18:05:41,055: 18:05:41 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 18:05:41,055: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:05:41,055: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:05:41,059: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 18:05:41,063: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 18:05:41,064: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 18:05:41,065: Re-using an available connection from the pool.
2018-04-06 18:05:41,065: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 18:05:41,065: Re-using an available connection from the pool.
2018-04-06 18:05:41,659: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 18:05:41,678: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:05:46,014: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072cac18>]}
2018-04-06 18:05:46,197: 18:05:46 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.96s]
2018-04-06 18:05:50,298: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b00b8>]}
2018-04-06 18:05:50,489: 18:05:50 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.24s]
2018-04-06 18:05:50,489: 18:05:50 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 18:05:50,489: 18:05:50 | 42 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 18:05:50,489: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:05:50,489: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:05:50,493: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 18:05:50,497: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 18:05:50,544: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 18:05:50,544: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 18:05:50,544: Re-using an available connection from the pool.
2018-04-06 18:05:50,545: Re-using an available connection from the pool.
2018-04-06 18:05:51,121: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 18:05:51,140: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 18:05:54,358: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10733c5f8>]}
2018-04-06 18:05:54,542: 18:05:54 | 42 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.87s]
2018-04-06 18:05:57,635: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072e47b8>]}
2018-04-06 18:05:57,826: 18:05:57 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 7.15s]
2018-04-06 18:05:57,826: 18:05:57 | 43 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 18:05:57,826: 18:05:57 | 44 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 18:05:57,826: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 18:05:57,826: 18:05:57 | 45 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 18:05:57,827: Compiling model.agency_data_pipeline.products_proc
2018-04-06 18:05:57,831: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 18:05:57,831: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 18:05:57,835: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 18:05:57,840: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 18:05:57,841: Acquiring new bigquery connection "products_proc".
2018-04-06 18:05:57,841: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 18:05:57,841: Re-using an available connection from the pool.
2018-04-06 18:05:57,842: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 18:05:57,842: Re-using an available connection from the pool.
2018-04-06 18:05:57,843: Re-using an available connection from the pool.
2018-04-06 18:05:58,416: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 18:05:58,447: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 18:05:58,490: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 18:06:00,594: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107352eb8>]}
2018-04-06 18:06:00,786: 18:06:00 | 45 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.76s]
2018-04-06 18:06:07,116: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0390>]}
2018-04-06 18:06:07,297: 18:06:07 | 44 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 9.29s]
2018-04-06 18:06:33,553: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107355358>]}
2018-04-06 18:06:34,139: 18:06:34 | 43 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 35.73s]
2018-04-06 18:06:34,139: 18:06:34 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 18:06:34,139: 18:06:34 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 18:06:34,140: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 18:06:34,140: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:06:34,144: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 18:06:34,147: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 18:06:34,148: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 18:06:34,149: Re-using an available connection from the pool.
2018-04-06 18:06:34,150: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 18:06:34,150: Re-using an available connection from the pool.
2018-04-06 18:06:34,805: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 18:06:34,807: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 18:06:36,971: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0390>]}
2018-04-06 18:06:37,013: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:06:37,188: 18:06:37 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.83s]
2018-04-06 18:06:37,371: 18:06:37 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.87s]
2018-04-06 18:06:37,372: 18:06:37 | 48 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 18:06:37,372: 18:06:37 | 49 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 18:06:37,372: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 18:06:37,372: 18:06:37 | 50 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 18:06:37,372: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:06:37,377: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 18:06:37,377: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:06:37,381: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 18:06:37,386: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 18:06:37,387: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 18:06:37,388: Re-using an available connection from the pool.
2018-04-06 18:06:37,389: Acquiring new bigquery connection "agg_transaction".
2018-04-06 18:06:37,389: Re-using an available connection from the pool.
2018-04-06 18:06:37,390: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 18:06:37,391: Re-using an available connection from the pool.
2018-04-06 18:06:37,990: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 18:06:38,014: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 18:06:38,015: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 18:06:41,276: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107347470>]}
2018-04-06 18:06:41,460: 18:06:41 | 49 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 3.90s]
2018-04-06 18:06:43,439: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072b00b8>]}
2018-04-06 18:06:43,625: 18:06:43 | 48 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 6.07s]
2018-04-06 18:07:13,707: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b04d30>]}
2018-04-06 18:07:13,897: 18:07:13 | 50 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 36.33s]
2018-04-06 18:07:13,897: 18:07:13 | 51 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 18:07:13,897: 18:07:13 | 52 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 18:07:13,897: 18:07:13 | 53 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 18:07:13,898: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 18:07:13,898: 18:07:13 | 54 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 18:07:13,898: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:07:13,898: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:07:13,902: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 18:07:13,902: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:07:13,906: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 18:07:13,910: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 18:07:13,915: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 18:07:13,916: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 18:07:13,916: Re-using an available connection from the pool.
2018-04-06 18:07:13,917: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 18:07:13,918: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 18:07:13,918: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 18:07:13,919: Re-using an available connection from the pool.
2018-04-06 18:07:13,920: Re-using an available connection from the pool.
2018-04-06 18:07:13,922: Re-using an available connection from the pool.
2018-04-06 18:07:14,594: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 18:07:14,599: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 18:07:14,617: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 18:07:14,766: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 18:07:16,925: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:07:17,238: 18:07:17 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 3.03s]
2018-04-06 18:07:17,865: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f322b0>]}
2018-04-06 18:07:18,048: 18:07:18 | 53 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 3.97s]
2018-04-06 18:07:18,946: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1073557f0>]}
2018-04-06 18:07:19,126: 18:07:19 | 52 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 5.05s]
2018-04-06 18:07:40,582: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x107355828>]}
2018-04-06 18:07:41,174: 18:07:41 | 54 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 26.68s]
2018-04-06 18:07:41,174: 18:07:41 | 55 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 18:07:41,174: 18:07:41 | 56 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 18:07:41,175: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:07:41,175: 18:07:41 | 57 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 18:07:41,175: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:07:41,179: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 18:07:41,179: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 18:07:41,183: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 18:07:41,188: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 18:07:41,189: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 18:07:41,189: Acquiring new bigquery connection "customers_proc".
2018-04-06 18:07:41,189: Re-using an available connection from the pool.
2018-04-06 18:07:41,190: Re-using an available connection from the pool.
2018-04-06 18:07:41,192: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 18:07:41,192: Re-using an available connection from the pool.
2018-04-06 18:07:41,632: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, period, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:07:41,632: Bad request while running:
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, period, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:07:41,632: 400 Unrecognized name: period at [22:18]
2018-04-06 18:07:41,632: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f240b8>]}
2018-04-06 18:07:41,807: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 18:07:41,815: 18:07:41 | 56 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers_products [ERROR in 0.46s]
2018-04-06 18:07:41,879: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 18:08:00,240: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b04ba8>]}
2018-04-06 18:08:00,541: 18:08:00 | 55 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 19.07s]
2018-04-06 18:08:13,422: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0390>]}
2018-04-06 18:08:13,613: 18:08:13 | 57 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 32.24s]
2018-04-06 18:08:13,613: 18:08:13 | 58 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:08:13,614: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:08:13,618: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:08:13,613: 18:08:13 | 59 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:08:13,618: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:08:13,623: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:08:13,614: 18:08:13 | 60 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:08:13,623: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:08:13,627: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:08:13,628: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:08:13,628: Re-using an available connection from the pool.
2018-04-06 18:08:13,629: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:08:13,630: Re-using an available connection from the pool.
2018-04-06 18:08:13,631: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:08:13,632: Re-using an available connection from the pool.
2018-04-06 18:08:14,264: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:08:14,280: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:08:14,285: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:08:16,452: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f1c6d8>]}
2018-04-06 18:08:16,636: 18:08:16 | 58 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.84s]
2018-04-06 18:08:18,627: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b003c8>]}
2018-04-06 18:08:18,812: 18:08:18 | 60 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 5.00s]
2018-04-06 18:08:25,162: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b00320>]}
2018-04-06 18:08:25,346: 18:08:25 | 59 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 11.54s]
2018-04-06 18:08:25,346: 18:08:25 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:08:25,347: 18:08:25 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:08:25,347: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:08:25,347: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:08:25,351: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:08:25,356: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:08:25,357: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:08:25,357: Re-using an available connection from the pool.
2018-04-06 18:08:25,357: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:08:25,357: Re-using an available connection from the pool.
2018-04-06 18:08:25,956: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:08:25,983: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:08:29,229: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f24908>]}
2018-04-06 18:08:29,454: 18:08:29 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.88s]
2018-04-06 18:09:00,219: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0390>]}
2018-04-06 18:09:01,205: 18:09:01 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 34.87s]
2018-04-06 18:09:01,206: 18:09:01 | 63 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:09:01,206: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:09:01,206: 18:09:01 | 64 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:09:01,210: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:09:01,210: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:09:01,215: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:09:01,217: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:09:01,217: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:09:01,217: Re-using an available connection from the pool.
2018-04-06 18:09:01,218: Re-using an available connection from the pool.
2018-04-06 18:09:03,325: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:09:03,337: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:09:09,196: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072f15f8>]}
2018-04-06 18:09:09,379: 18:09:09 | 63 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 7.99s]
2018-04-06 18:09:29,832: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b04668>]}
2018-04-06 18:09:30,057: 18:09:30 | 64 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 28.62s]
2018-04-06 18:09:30,058: 18:09:30 | 65 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 18:09:30,058: 18:09:30 | 66 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 18:09:30,058: 18:09:30 | 67 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 18:09:30,058: 18:09:30 | 68 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 18:09:30,058: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:09:30,058: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:09:30,059: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:09:30,059: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:09:30,063: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 18:09:30,068: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 18:09:30,073: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 18:09:30,076: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 18:09:30,078: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 18:09:30,078: Re-using an available connection from the pool.
2018-04-06 18:09:30,078: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 18:09:30,079: Re-using an available connection from the pool.
2018-04-06 18:09:30,079: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 18:09:30,080: Re-using an available connection from the pool.
2018-04-06 18:09:30,081: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 18:09:30,081: Re-using an available connection from the pool.
2018-04-06 18:09:31,722: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, period, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:09:31,722: Bad request while running:
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, period, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:09:31,722: 400 Unrecognized name: period at [21:18]
2018-04-06 18:09:31,723: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f32ef0>]}
2018-04-06 18:09:31,917: 18:09:31 | 68 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers [ERROR in 1.66s]
2018-04-06 18:09:31,918: 18:09:31 | 69 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 18:09:31,918: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:09:31,922: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 18:09:31,923: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 18:09:31,923: Re-using an available connection from the pool.
2018-04-06 18:09:32,225: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 18:09:32,258: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 18:09:32,276: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 18:09:33,846: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 18:09:35,097: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1072c0390>]}
2018-04-06 18:09:35,103: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b04160>]}
2018-04-06 18:09:35,283: 18:09:35 | 65 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 5.04s]
2018-04-06 18:09:35,468: 18:09:35 | 67 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 5.04s]
2018-04-06 18:09:36,555: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x104f32ef0>]}
2018-04-06 18:09:36,739: 18:09:36 | 69 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 4.64s]
2018-04-06 18:09:40,993: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6f626d73-6303-4cdb-8d2c-ea7982244cd8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x101b04668>]}
2018-04-06 18:09:41,184: 18:09:41 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 10.93s]
2018-04-06 18:09:41,184: 18:09:41 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 18:09:41,184: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 18:09:41,188: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 18:09:41,206: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 18:09:41,206: Re-using an available connection from the pool.
2018-04-06 18:09:43,391: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 18:09:52,242: 18:09:52 | The bigquery adapter does not support query cancellation. Some queries may still be running!
2018-04-06 18:09:52,242: Connection 'master' was left open.
2018-04-06 18:09:52,242: ctrl-c
2018-04-06 18:10:15,288: Tracking: tracking
2018-04-06 18:10:15,288: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f667860>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f667a20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f6674e0>]}
2018-04-06 18:10:16,026: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 18:10:16,047: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 18:10:16,064: Parsing get_column_values.sql
2018-04-06 18:10:16,104: Parsing get_url_parameter.sql
2018-04-06 18:10:16,108: Parsing split_part.sql
2018-04-06 18:10:16,113: Parsing table_exists.sql
2018-04-06 18:10:16,132: Parsing core.sql
2018-04-06 18:10:16,155: Parsing adapters/bigquery.sql
2018-04-06 18:10:16,160: Parsing adapters/common.sql
2018-04-06 18:10:16,172: Parsing adapters/postgres.sql
2018-04-06 18:10:16,175: Parsing adapters/redshift.sql
2018-04-06 18:10:16,191: Parsing etc/get_custom_schema.sql
2018-04-06 18:10:16,196: Parsing materializations/archive.sql
2018-04-06 18:10:16,236: Parsing materializations/bigquery.sql
2018-04-06 18:10:16,253: Parsing materializations/helpers.sql
2018-04-06 18:10:16,277: Parsing materializations/incremental.sql
2018-04-06 18:10:16,301: Parsing materializations/table.sql
2018-04-06 18:10:16,317: Parsing materializations/view.sql
2018-04-06 18:10:16,342: Parsing materializations/wrapper.sql
2018-04-06 18:10:16,388: Parsing schema_tests/accepted_values.sql
2018-04-06 18:10:16,392: Parsing schema_tests/not_null.sql
2018-04-06 18:10:16,394: Parsing schema_tests/relationships.sql
2018-04-06 18:10:16,408: Parsing schema_tests/unique.sql
2018-04-06 18:10:17,035: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 18:10:17,038: Parsing model.agency_data_pipeline.all_dates
2018-04-06 18:10:17,039: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 18:10:17,040: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 18:10:17,042: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:10:17,043: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:10:17,045: Acquiring new bigquery connection "master".
2018-04-06 18:10:17,045: Opening a new connection (0 currently allocated)
2018-04-06 18:10:17,074: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 18:10:17,075: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 18:10:17,077: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:10:17,079: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 18:10:17,080: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:10:17,081: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 18:10:17,083: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 18:10:17,085: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 18:10:17,086: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:10:17,088: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:10:17,090: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:10:17,092: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:10:17,094: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 18:10:17,099: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 18:10:17,104: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:10:17,109: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:10:17,114: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:10:17,116: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 18:10:17,118: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 18:10:17,129: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 18:10:17,137: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:10:17,139: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:10:17,141: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:10:17,147: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:10:17,154: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:10:17,160: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:10:17,164: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 18:10:17,166: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 18:10:17,168: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:10:17,170: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:10:17,173: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 18:10:17,174: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:10:17,176: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:10:17,178: Parsing model.agency_data_pipeline.agg_products
2018-04-06 18:10:17,179: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 18:10:17,182: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:10:17,183: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:10:17,184: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:10:17,186: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:10:17,188: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:10:17,189: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:10:17,191: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:10:17,194: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 18:10:17,196: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 18:10:17,200: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 18:10:17,202: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:10:17,204: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:10:17,206: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:10:17,207: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 18:10:17,210: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 18:10:17,212: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 18:10:17,216: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:10:17,218: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:10:17,220: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 18:10:17,222: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 18:10:17,224: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:10:17,226: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:10:17,227: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:10:17,230: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:10:17,231: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 18:10:17,233: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:10:17,235: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:10:17,237: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:10:17,240: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 18:10:17,242: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 18:10:17,243: Parsing model.agency_data_pipeline.products_proc
2018-04-06 18:10:17,246: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:10:17,247: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 18:10:17,249: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:10:17,268: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 18:10:17,296: 
2018-04-06 18:10:18,388: 18:10:18 | Concurrency: 4 threads (target='prod')
2018-04-06 18:10:18,388: 18:10:18 | 
2018-04-06 18:10:18,762: 18:10:18 | 1 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 18:10:18,762: Compiling model.agency_data_pipeline.all_dates
2018-04-06 18:10:18,762: 18:10:18 | 2 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 18:10:18,766: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 18:10:18,762: 18:10:18 | 3 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 18:10:18,766: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 18:10:18,762: 18:10:18 | 4 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 18:10:18,766: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 18:10:18,770: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 18:10:18,770: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:10:18,771: Acquiring new bigquery connection "all_dates".
2018-04-06 18:10:18,774: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 18:10:18,779: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 18:10:18,779: Opening a new connection (1 currently allocated)
2018-04-06 18:10:18,780: Acquiring new bigquery connection "accounts_proc".
2018-04-06 18:10:18,782: Acquiring new bigquery connection "ga_conversions".
2018-04-06 18:10:18,784: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 18:10:18,784: Opening a new connection (2 currently allocated)
2018-04-06 18:10:18,842: Opening a new connection (3 currently allocated)
2018-04-06 18:10:18,881: Opening a new connection (4 currently allocated)
2018-04-06 18:10:19,718: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 18:10:19,727: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 18:10:19,774: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 18:10:19,790: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 18:10:20,800: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d342b0>]}
2018-04-06 18:10:20,859: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa11710>]}
2018-04-06 18:10:20,984: 18:10:20 | 2 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 2.03s]
2018-04-06 18:10:20,984: 18:10:20 | 5 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 18:10:20,985: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 18:10:20,989: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 18:10:20,992: Acquiring new bigquery connection "adwords_urls".
2018-04-06 18:10:20,992: Re-using an available connection from the pool.
2018-04-06 18:10:21,187: 18:10:21 | 1 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 2.10s]
2018-04-06 18:10:21,187: 18:10:21 | 6 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 18:10:21,187: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 18:10:21,191: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 18:10:21,192: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 18:10:21,192: Re-using an available connection from the pool.
2018-04-06 18:10:21,618: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 18:10:21,839: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 18:10:21,871: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9a54e0>]}
2018-04-06 18:10:22,052: 18:10:22 | 3 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 3.10s]
2018-04-06 18:10:22,052: 18:10:22 | 7 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 18:10:22,052: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:10:22,056: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 18:10:22,057: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 18:10:22,058: Re-using an available connection from the pool.
2018-04-06 18:10:22,687: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 18:10:23,030: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa11a58>]}
2018-04-06 18:10:23,232: 18:10:23 | 4 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.26s]
2018-04-06 18:10:23,232: 18:10:23 | 8 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 18:10:23,232: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:10:23,236: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 18:10:23,237: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 18:10:23,237: Re-using an available connection from the pool.
2018-04-06 18:10:23,793: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa11198>]}
2018-04-06 18:10:23,849: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f97dd68>]}
2018-04-06 18:10:23,875: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 18:10:23,982: 18:10:23 | 5 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.81s]
2018-04-06 18:10:23,983: 18:10:23 | 9 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 18:10:23,984: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 18:10:23,987: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 18:10:23,990: Acquiring new bigquery connection "clients_proc".
2018-04-06 18:10:23,990: Re-using an available connection from the pool.
2018-04-06 18:10:24,001: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d7b898>]}
2018-04-06 18:10:24,171: 18:10:24 | 7 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 1.80s]
2018-04-06 18:10:24,172: 18:10:24 | 10 of 75 START table model agency_data_pipeline.monthend_dates....... [RUN]
2018-04-06 18:10:24,172: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 18:10:24,178: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 18:10:24,180: Acquiring new bigquery connection "monthend_dates".
2018-04-06 18:10:24,181: Re-using an available connection from the pool.
2018-04-06 18:10:24,367: 18:10:24 | 6 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 2.81s]
2018-04-06 18:10:24,368: 18:10:24 | 11 of 75 START table model agency_data_pipeline.bing_ads_ads......... [RUN]
2018-04-06 18:10:24,368: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:10:24,376: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 18:10:24,378: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 18:10:24,380: Re-using an available connection from the pool.
2018-04-06 18:10:24,656: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 18:10:24,750: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 18:10:25,067: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 18:10:25,749: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9d45f8>]}
2018-04-06 18:10:25,937: 18:10:25 | 9 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 1.77s]
2018-04-06 18:10:25,937: 18:10:25 | 12 of 75 START table model agency_data_pipeline.carts_proc........... [RUN]
2018-04-06 18:10:25,937: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 18:10:25,941: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 18:10:25,942: Acquiring new bigquery connection "carts_proc".
2018-04-06 18:10:25,942: Re-using an available connection from the pool.
2018-04-06 18:10:26,057: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9d4048>]}
2018-04-06 18:10:26,243: 18:10:26 | 8 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.82s]
2018-04-06 18:10:26,513: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 18:10:26,920: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f8f9160>]}
2018-04-06 18:10:27,119: 18:10:27 | 10 of 75 OK created table model agency_data_pipeline.monthend_dates.. [CREATE TABLE in 2.75s]
2018-04-06 18:10:27,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d7b898>]}
2018-04-06 18:10:27,471: 18:10:27 | 11 of 75 OK created table model agency_data_pipeline.bing_ads_ads.... [CREATE TABLE in 2.92s]
2018-04-06 18:10:27,605: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9d45f8>]}
2018-04-06 18:10:27,787: 18:10:27 | 12 of 75 OK created table model agency_data_pipeline.carts_proc...... [CREATE TABLE in 1.67s]
2018-04-06 18:10:27,787: 18:10:27 | 13 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 18:10:27,787: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:10:27,791: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 18:10:27,791: 18:10:27 | 14 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 18:10:27,792: 18:10:27 | 15 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 18:10:27,792: 18:10:27 | 16 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 18:10:27,792: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:10:27,792: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:10:27,792: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:10:27,798: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 18:10:27,798: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 18:10:27,803: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 18:10:27,807: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 18:10:27,807: Re-using an available connection from the pool.
2018-04-06 18:10:27,808: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:27,808: Re-using an available connection from the pool.
2018-04-06 18:10:27,811: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 18:10:27,812: Re-using an available connection from the pool.
2018-04-06 18:10:27,814: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:27,814: Re-using an available connection from the pool.
2018-04-06 18:10:28,386: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 18:10:28,422: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 18:10:28,937: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 18:10:29,146: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 18:10:29,610: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 18:10:29,749: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 18:10:30,548: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d71320>]}
2018-04-06 18:10:30,731: 18:10:30 | 16 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.76s]
2018-04-06 18:10:30,731: 18:10:30 | 17 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 18:10:30,732: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 18:10:30,737: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 18:10:30,737: Re-using an available connection from the pool.
2018-04-06 18:10:30,737: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:31,177: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 18:10:31,835: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 18:10:32,851: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d5da58>]}
2018-04-06 18:10:33,008: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d717f0>]}
2018-04-06 18:10:33,031: 18:10:33 | 15 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 5.06s]
2018-04-06 18:10:33,032: 18:10:33 | 18 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 18:10:33,033: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 18:10:33,037: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 18:10:33,039: Acquiring new bigquery connection "adwords_ads".
2018-04-06 18:10:33,040: Re-using an available connection from the pool.
2018-04-06 18:10:33,229: 18:10:33 | 14 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 5.22s]
2018-04-06 18:10:33,229: 18:10:33 | 19 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 18:10:33,230: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:10:33,237: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 18:10:33,243: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 18:10:33,243: Re-using an available connection from the pool.
2018-04-06 18:10:33,618: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 18:10:33,849: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 18:10:33,849: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d8ea58>]}
2018-04-06 18:10:33,987: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d74710>]}
2018-04-06 18:10:34,045: 18:10:34 | 13 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.06s]
2018-04-06 18:10:34,045: 18:10:34 | 20 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 18:10:34,047: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:10:34,052: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 18:10:34,053: Re-using an available connection from the pool.
2018-04-06 18:10:34,053: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:34,245: 18:10:34 | 17 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.26s]
2018-04-06 18:10:35,352: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 18:10:36,013: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f97d710>]}
2018-04-06 18:10:36,077: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 18:10:36,198: 18:10:36 | 19 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.78s]
2018-04-06 18:10:36,938: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d5da58>]}
2018-04-06 18:10:37,133: 18:10:37 | 18 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 3.91s]
2018-04-06 18:10:38,228: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773d30>]}
2018-04-06 18:10:38,415: 18:10:38 | 20 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.18s]
2018-04-06 18:10:38,415: 18:10:38 | 21 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 18:10:38,415: 18:10:38 | 22 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 18:10:38,416: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:10:38,416: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 18:10:38,428: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 18:10:38,428: Re-using an available connection from the pool.
2018-04-06 18:10:38,428: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:38,430: Acquiring new bigquery connection "fb_ads".
2018-04-06 18:10:38,430: Re-using an available connection from the pool.
2018-04-06 18:10:38,430: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:38,754: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 18:10:38,782: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 18:10:39,316: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 18:10:39,358: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 18:10:41,605: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f785978>]}
2018-04-06 18:10:41,876: 18:10:41 | 22 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.19s]
2018-04-06 18:10:44,790: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d9de80>]}
2018-04-06 18:10:44,979: 18:10:44 | 21 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.37s]
2018-04-06 18:10:44,979: 18:10:44 | 23 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 18:10:44,980: 18:10:44 | 24 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 18:10:44,980: 18:10:44 | 25 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 18:10:44,980: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:10:44,980: 18:10:44 | 26 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 18:10:44,980: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:10:44,980: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 18:10:44,985: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 18:10:44,985: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:10:44,989: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 18:10:44,993: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 18:10:45,000: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 18:10:45,001: Re-using an available connection from the pool.
2018-04-06 18:10:45,001: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:45,003: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 18:10:45,003: Re-using an available connection from the pool.
2018-04-06 18:10:45,005: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 18:10:45,005: Re-using an available connection from the pool.
2018-04-06 18:10:45,007: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 18:10:45,007: Re-using an available connection from the pool.
2018-04-06 18:10:45,430: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 18:10:45,602: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 18:10:45,622: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 18:10:45,628: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 18:10:46,117: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 18:10:48,933: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d9d2b0>]}
2018-04-06 18:10:49,114: 18:10:49 | 24 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 3.95s]
2018-04-06 18:10:49,114: 18:10:49 | 27 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 18:10:49,114: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:10:49,120: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 18:10:49,120: Re-using an available connection from the pool.
2018-04-06 18:10:49,120: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:49,456: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 18:10:49,937: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d9d9e8>]}
2018-04-06 18:10:50,096: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 18:10:50,121: 18:10:50 | 25 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 4.96s]
2018-04-06 18:10:52,255: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f781d68>]}
2018-04-06 18:10:52,448: 18:10:52 | 27 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.14s]
2018-04-06 18:10:54,783: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f753470>]}
2018-04-06 18:10:54,964: 18:10:54 | 26 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 9.80s]
2018-04-06 18:10:55,329: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77ce80>]}
2018-04-06 18:10:55,520: 18:10:55 | 23 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 10.35s]
2018-04-06 18:10:55,520: 18:10:55 | 28 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 18:10:55,520: 18:10:55 | 29 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 18:10:55,520: 18:10:55 | 30 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 18:10:55,521: 18:10:55 | 31 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 18:10:55,521: Compiling model.agency_data_pipeline.agg_products
2018-04-06 18:10:55,521: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 18:10:55,521: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 18:10:55,521: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 18:10:55,525: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 18:10:55,536: Acquiring new bigquery connection "ga_traffic".
2018-04-06 18:10:55,540: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 18:10:55,549: Acquiring new bigquery connection "ga_transactions".
2018-04-06 18:10:55,549: Re-using an available connection from the pool.
2018-04-06 18:10:55,549: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:55,550: Re-using an available connection from the pool.
2018-04-06 18:10:55,550: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:55,552: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 18:10:55,552: Re-using an available connection from the pool.
2018-04-06 18:10:55,558: Acquiring new bigquery connection "agg_products".
2018-04-06 18:10:55,559: Re-using an available connection from the pool.
2018-04-06 18:10:56,100: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 18:10:56,153: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 18:10:56,653: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:56,754: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:10:57,802: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 18:10:57,904: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 18:10:58,325: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c4e0>]}
2018-04-06 18:10:58,430: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 18:10:58,498: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 18:10:58,515: 18:10:58 | 28 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 2.80s]
2018-04-06 18:10:58,515: 18:10:58 | 32 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 18:10:58,515: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 18:10:58,520: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 18:10:58,521: Acquiring new bigquery connection "adwords_join".
2018-04-06 18:10:58,521: Re-using an available connection from the pool.
2018-04-06 18:10:59,116: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 18:11:02,352: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c4e0>]}
2018-04-06 18:11:02,536: 18:11:02 | 32 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 3.84s]
2018-04-06 18:11:03,808: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c908>]}
2018-04-06 18:11:03,991: 18:11:03 | 31 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.29s]
2018-04-06 18:11:04,682: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c588>]}
2018-04-06 18:11:04,866: 18:11:04 | 30 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 9.16s]
2018-04-06 18:11:08,218: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77cd30>]}
2018-04-06 18:11:08,821: 18:11:08 | 29 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 12.70s]
2018-04-06 18:11:08,821: 18:11:08 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 18:11:08,822: 18:11:08 | 34 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 18:11:08,822: 18:11:08 | 35 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 18:11:08,822: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:11:08,822: 18:11:08 | 36 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 18:11:08,822: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:11:08,822: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:11:08,827: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 18:11:08,827: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:11:08,831: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 18:11:08,835: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 18:11:08,840: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 18:11:08,842: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 18:11:08,842: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 18:11:08,843: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 18:11:08,843: Re-using an available connection from the pool.
2018-04-06 18:11:08,843: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 18:11:08,844: Re-using an available connection from the pool.
2018-04-06 18:11:08,845: Re-using an available connection from the pool.
2018-04-06 18:11:08,847: Re-using an available connection from the pool.
2018-04-06 18:11:09,384: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 18:11:09,405: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 18:11:09,496: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 18:11:09,528: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 18:11:10,879: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9a5c18>]}
2018-04-06 18:11:11,065: 18:11:11 | 34 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 2.06s]
2018-04-06 18:11:11,066: 18:11:11 | 37 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 18:11:11,066: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 18:11:11,069: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 18:11:11,071: Acquiring new bigquery connection "adwords_stats".
2018-04-06 18:11:11,071: Re-using an available connection from the pool.
2018-04-06 18:11:11,727: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 18:11:11,946: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f97dd68>]}
2018-04-06 18:11:12,130: 18:11:12 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 3.12s]
2018-04-06 18:11:13,070: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9a5cf8>]}
2018-04-06 18:11:13,254: 18:11:13 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 4.24s]
2018-04-06 18:11:13,890: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f75cf60>]}
2018-04-06 18:11:14,076: 18:11:14 | 37 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.82s]
2018-04-06 18:11:16,277: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d3cfd0>]}
2018-04-06 18:11:16,465: 18:11:16 | 35 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 7.46s]
2018-04-06 18:11:16,466: 18:11:16 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 18:11:16,466: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:11:16,470: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 18:11:16,471: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 18:11:16,471: Re-using an available connection from the pool.
2018-04-06 18:11:17,091: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 18:11:21,818: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f752c50>]}
2018-04-06 18:11:22,018: 18:11:22 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 5.35s]
2018-04-06 18:11:22,018: 18:11:22 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 18:11:22,018: 18:11:22 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 18:11:22,019: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:11:22,019: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:11:22,023: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 18:11:22,028: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 18:11:22,029: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 18:11:22,030: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 18:11:22,030: Re-using an available connection from the pool.
2018-04-06 18:11:22,031: Re-using an available connection from the pool.
2018-04-06 18:11:22,665: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:11:22,678: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 18:11:26,986: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7529e8>]}
2018-04-06 18:11:27,171: 18:11:27 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.97s]
2018-04-06 18:11:31,284: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9a54e0>]}
2018-04-06 18:11:31,469: 18:11:31 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.27s]
2018-04-06 18:11:31,469: 18:11:31 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 18:11:31,469: 18:11:31 | 42 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 18:11:31,470: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:11:31,470: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:11:31,474: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 18:11:31,478: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 18:11:31,479: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 18:11:31,480: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 18:11:31,480: Re-using an available connection from the pool.
2018-04-06 18:11:31,480: Re-using an available connection from the pool.
2018-04-06 18:11:32,093: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 18:11:32,160: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 18:11:35,380: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10fa11e48>]}
2018-04-06 18:11:35,562: 18:11:35 | 42 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.91s]
2018-04-06 18:11:39,628: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f97dd68>]}
2018-04-06 18:11:39,815: 18:11:39 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 8.16s]
2018-04-06 18:11:39,816: 18:11:39 | 43 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 18:11:39,816: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 18:11:39,820: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 18:11:39,820: 18:11:39 | 44 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 18:11:39,820: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 18:11:39,820: 18:11:39 | 45 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 18:11:39,825: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 18:11:39,825: Compiling model.agency_data_pipeline.products_proc
2018-04-06 18:11:39,830: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 18:11:39,831: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 18:11:39,831: Re-using an available connection from the pool.
2018-04-06 18:11:39,831: Acquiring new bigquery connection "products_proc".
2018-04-06 18:11:39,832: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 18:11:39,833: Re-using an available connection from the pool.
2018-04-06 18:11:39,834: Re-using an available connection from the pool.
2018-04-06 18:11:40,362: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 18:11:40,474: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 18:11:40,488: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 18:11:42,520: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9b64e0>]}
2018-04-06 18:11:42,705: 18:11:42 | 43 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.70s]
2018-04-06 18:11:46,964: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f781748>]}
2018-04-06 18:11:47,164: 18:11:47 | 45 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 7.14s]
2018-04-06 18:12:16,258: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773e80>]}
2018-04-06 18:12:16,867: 18:12:16 | 44 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 36.44s]
2018-04-06 18:12:16,868: 18:12:16 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 18:12:16,868: 18:12:16 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 18:12:16,868: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 18:12:16,868: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:12:16,872: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 18:12:16,875: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 18:12:16,877: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 18:12:16,877: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 18:12:16,878: Re-using an available connection from the pool.
2018-04-06 18:12:16,878: Re-using an available connection from the pool.
2018-04-06 18:12:17,524: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 18:12:17,539: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 18:12:19,702: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d71f60>]}
2018-04-06 18:12:19,893: 18:12:19 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.83s]
2018-04-06 18:12:20,779: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d71320>]}
2018-04-06 18:12:20,961: 18:12:20 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 3.91s]
2018-04-06 18:12:20,961: 18:12:20 | 48 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 18:12:20,961: 18:12:20 | 49 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 18:12:20,961: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:12:20,961: 18:12:20 | 50 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 18:12:20,962: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 18:12:20,966: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 18:12:20,966: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:12:20,971: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 18:12:20,976: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 18:12:20,977: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 18:12:20,977: Re-using an available connection from the pool.
2018-04-06 18:12:20,979: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 18:12:20,979: Re-using an available connection from the pool.
2018-04-06 18:12:20,982: Acquiring new bigquery connection "agg_transaction".
2018-04-06 18:12:20,982: Re-using an available connection from the pool.
2018-04-06 18:12:21,585: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 18:12:21,628: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 18:12:21,635: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 18:12:24,917: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7736a0>]}
2018-04-06 18:12:25,105: 18:12:25 | 50 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 3.95s]
2018-04-06 18:12:27,074: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d8fa20>]}
2018-04-06 18:12:27,261: 18:12:27 | 49 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 6.11s]
2018-04-06 18:12:44,286: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7922e8>]}
2018-04-06 18:12:44,470: 18:12:44 | 48 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 23.32s]
2018-04-06 18:12:44,471: 18:12:44 | 51 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 18:12:44,471: 18:12:44 | 52 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 18:12:44,471: 18:12:44 | 53 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 18:12:44,471: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:12:44,471: 18:12:44 | 54 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 18:12:44,471: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:12:44,471: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:12:44,476: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 18:12:44,476: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 18:12:44,481: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 18:12:44,485: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 18:12:44,489: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 18:12:44,490: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 18:12:44,490: Re-using an available connection from the pool.
2018-04-06 18:12:44,491: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 18:12:44,492: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 18:12:44,492: Re-using an available connection from the pool.
2018-04-06 18:12:44,493: Re-using an available connection from the pool.
2018-04-06 18:12:44,497: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 18:12:44,497: Re-using an available connection from the pool.
2018-04-06 18:12:45,104: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 18:12:45,117: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 18:12:45,119: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 18:12:45,149: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 18:12:47,295: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d8fa20>]}
2018-04-06 18:12:47,365: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9b6518>]}
2018-04-06 18:12:47,510: 18:12:47 | 53 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.82s]
2018-04-06 18:12:47,692: 18:12:47 | 54 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.89s]
2018-04-06 18:12:49,417: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d5da90>]}
2018-04-06 18:12:49,600: 18:12:49 | 51 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 4.95s]
2018-04-06 18:13:08,820: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d71b70>]}
2018-04-06 18:13:09,035: 18:13:09 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 24.35s]
2018-04-06 18:13:09,035: 18:13:09 | 55 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 18:13:09,035: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 18:13:09,040: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 18:13:09,040: 18:13:09 | 56 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 18:13:09,040: 18:13:09 | 57 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 18:13:09,040: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:13:09,041: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:13:09,045: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 18:13:09,049: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 18:13:09,051: Acquiring new bigquery connection "customers_proc".
2018-04-06 18:13:09,051: Re-using an available connection from the pool.
2018-04-06 18:13:09,053: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 18:13:09,054: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 18:13:09,055: Re-using an available connection from the pool.
2018-04-06 18:13:09,057: Re-using an available connection from the pool.
2018-04-06 18:13:09,524: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:13:09,670: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 18:13:09,721: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 18:13:19,265: Bad request while running:
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:13:19,265: 400 division by zero
2018-04-06 18:13:19,266: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7735c0>]}
2018-04-06 18:13:19,821: 18:13:19 | 56 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers_products [ERROR in 10.23s]
2018-04-06 18:13:29,180: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d63c50>]}
2018-04-06 18:13:29,370: 18:13:29 | 57 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 20.14s]
2018-04-06 18:13:48,513: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d8fb38>]}
2018-04-06 18:13:48,695: 18:13:48 | 55 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 39.48s]
2018-04-06 18:13:48,696: 18:13:48 | 58 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:13:48,696: 18:13:48 | 59 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:13:48,696: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:13:48,696: 18:13:48 | 60 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:13:48,696: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:13:48,701: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:13:48,701: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:13:48,705: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:13:48,709: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:13:48,711: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:13:48,711: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:13:48,711: Re-using an available connection from the pool.
2018-04-06 18:13:48,712: Re-using an available connection from the pool.
2018-04-06 18:13:48,713: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:13:48,714: Re-using an available connection from the pool.
2018-04-06 18:13:50,863: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:13:50,880: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:13:50,889: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:13:53,832: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773cf8>]}
2018-04-06 18:13:54,012: 18:13:54 | 59 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 5.14s]
2018-04-06 18:13:55,324: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d5da90>]}
2018-04-06 18:13:55,517: 18:13:55 | 58 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 6.63s]
2018-04-06 18:13:59,773: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7734a8>]}
2018-04-06 18:13:59,960: 18:13:59 | 60 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 11.07s]
2018-04-06 18:13:59,960: 18:13:59 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:13:59,960: 18:13:59 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:13:59,960: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:13:59,961: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:13:59,965: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:13:59,970: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:13:59,971: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:13:59,971: Re-using an available connection from the pool.
2018-04-06 18:13:59,973: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:13:59,973: Re-using an available connection from the pool.
2018-04-06 18:14:02,193: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:14:02,195: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:14:05,152: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f9a5d68>]}
2018-04-06 18:14:05,337: 18:14:05 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 5.19s]
2018-04-06 18:14:34,768: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d5db00>]}
2018-04-06 18:14:35,360: 18:14:35 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 34.81s]
2018-04-06 18:14:35,361: 18:14:35 | 63 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:14:35,361: 18:14:35 | 64 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:14:35,361: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:14:35,361: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:14:35,365: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:14:35,370: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:14:35,372: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:14:35,372: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:14:35,372: Re-using an available connection from the pool.
2018-04-06 18:14:35,372: Re-using an available connection from the pool.
2018-04-06 18:14:37,508: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:14:37,526: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:14:42,461: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7857b8>]}
2018-04-06 18:14:42,644: 18:14:42 | 63 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 7.10s]
2018-04-06 18:14:59,774: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f75cd68>]}
2018-04-06 18:14:59,964: 18:14:59 | 64 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 24.41s]
2018-04-06 18:14:59,964: 18:14:59 | 65 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 18:14:59,965: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:14:59,969: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 18:14:59,964: 18:14:59 | 66 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 18:14:59,969: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:14:59,974: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 18:14:59,965: 18:14:59 | 67 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 18:14:59,974: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:14:59,978: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 18:14:59,965: 18:14:59 | 68 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 18:14:59,979: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 18:14:59,979: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:14:59,980: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 18:14:59,981: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 18:14:59,981: Re-using an available connection from the pool.
2018-04-06 18:14:59,989: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 18:14:59,990: Re-using an available connection from the pool.
2018-04-06 18:14:59,993: Re-using an available connection from the pool.
2018-04-06 18:14:59,996: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 18:14:59,996: Re-using an available connection from the pool.
2018-04-06 18:15:00,604: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 18:15:00,640: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 18:15:00,667: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 18:15:00,735: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 18:15:02,816: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f7854a8>]}
2018-04-06 18:15:03,008: 18:15:03 | 67 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.84s]
2018-04-06 18:15:03,008: 18:15:03 | 69 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 18:15:03,009: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:15:03,013: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 18:15:03,013: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 18:15:03,013: Re-using an available connection from the pool.
2018-04-06 18:15:03,498: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:15:04,000: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d3ca58>]}
2018-04-06 18:15:04,189: 18:15:04 | 65 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 4.04s]
2018-04-06 18:15:04,977: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d4ff98>]}
2018-04-06 18:15:05,161: 18:15:05 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 5.01s]
2018-04-06 18:15:11,351: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x111d71b70>]}
2018-04-06 18:15:11,540: 18:15:11 | 68 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 11.37s]
2018-04-06 18:15:16,463: Bad request while running:
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
sum(revenue_365)/sum(frequency_365) aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
sum(revenue_mom)/sum(frequency_mom) aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
sum(revenue_yoy)/sum(frequency_yoy) aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:15:16,463: 400 division by zero
2018-04-06 18:15:16,463: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c4a8>]}
2018-04-06 18:15:16,649: 18:15:16 | 69 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers [ERROR in 13.45s]
2018-04-06 18:15:16,649: 18:15:16 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 18:15:16,649: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 18:15:16,653: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 18:15:16,654: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 18:15:16,654: Re-using an available connection from the pool.
2018-04-06 18:15:17,250: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 18:15:53,210: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773e48>]}
2018-04-06 18:15:53,787: 18:15:53 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 36.56s]
2018-04-06 18:15:53,787: 18:15:53 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 18:15:53,787: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:15:53,792: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 18:15:53,793: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 18:15:53,793: Re-using an available connection from the pool.
2018-04-06 18:15:54,512: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 18:16:10,854: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c4a8>]}
2018-04-06 18:16:11,040: 18:16:11 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 17.07s]
2018-04-06 18:16:11,041: 18:16:11 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 18:16:11,041: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 18:16:11,046: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 18:16:11,046: Acquiring new bigquery connection "growth_date_union".
2018-04-06 18:16:11,046: Re-using an available connection from the pool.
2018-04-06 18:16:11,770: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 18:16:13,951: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773e48>]}
2018-04-06 18:16:14,140: 18:16:14 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 2.91s]
2018-04-06 18:16:14,140: 18:16:14 | 73 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 18:16:14,141: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 18:16:14,141: 18:16:14 | 74 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 18:16:14,149: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 18:16:14,149: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 18:16:14,155: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 18:16:14,156: Acquiring new bigquery connection "growth_stats".
2018-04-06 18:16:14,156: Re-using an available connection from the pool.
2018-04-06 18:16:14,157: Acquiring new bigquery connection "retention_stats".
2018-04-06 18:16:14,157: Re-using an available connection from the pool.
2018-04-06 18:16:14,792: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 18:16:14,862: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 18:16:15,886: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f77c4a8>]}
2018-04-06 18:16:16,070: 18:16:16 | 73 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.75s]
2018-04-06 18:16:20,272: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f753208>]}
2018-04-06 18:16:20,461: 18:16:20 | 74 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 6.12s]
2018-04-06 18:16:20,461: 18:16:20 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 18:16:20,461: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 18:16:20,466: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 18:16:20,467: Acquiring new bigquery connection "agg_campaign".
2018-04-06 18:16:20,467: Re-using an available connection from the pool.
2018-04-06 18:16:21,111: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:16:32,995: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9bf290fb-d3d9-43fa-a615-d8208fc7b0c5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f773e48>]}
2018-04-06 18:16:33,182: 18:16:33 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 12.53s]
2018-04-06 18:16:33,186: 18:16:33 | 
2018-04-06 18:16:33,186: 18:16:33 | Finished running 75 table models in 374.80s.
2018-04-06 18:16:33,186: Connection 'master' was left open.
2018-04-06 18:16:33,186: 
2018-04-06 18:16:33,187: Completed with 2 errors:
2018-04-06 18:16:33,187: 
2018-04-06 18:16:33,187: Database Error in model segment_stats_customers_products (models/segmentation/customers-products/segment_stats_customers_products.sql)
2018-04-06 18:16:33,187:   division by zero
2018-04-06 18:16:33,187:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers-products/segment_stats_customers_products.sql
2018-04-06 18:16:33,187: 
2018-04-06 18:16:33,187: Database Error in model segment_stats_customers (models/segmentation/customers/segment_stats_customers.sql)
2018-04-06 18:16:33,187:   division by zero
2018-04-06 18:16:33,188:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers/segment_stats_customers.sql
2018-04-06 18:16:33,188: 
Done. PASS=73 ERROR=2 SKIP=0 TOTAL=75
2018-04-06 18:16:33,188: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f734eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f734a58>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10f734cf8>]}
2018-04-06 18:16:33,376: Flushing usage events
2018-04-06 18:28:25,755: Tracking: tracking
2018-04-06 18:28:25,755: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba75ba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba75978>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ba75ac8>]}
2018-04-06 18:28:26,796: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 18:28:26,829: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 18:28:26,858: Parsing get_column_values.sql
2018-04-06 18:28:26,898: Parsing get_url_parameter.sql
2018-04-06 18:28:26,901: Parsing split_part.sql
2018-04-06 18:28:26,907: Parsing table_exists.sql
2018-04-06 18:28:26,926: Parsing core.sql
2018-04-06 18:28:26,949: Parsing adapters/bigquery.sql
2018-04-06 18:28:26,953: Parsing adapters/common.sql
2018-04-06 18:28:26,966: Parsing adapters/postgres.sql
2018-04-06 18:28:26,969: Parsing adapters/redshift.sql
2018-04-06 18:28:26,985: Parsing etc/get_custom_schema.sql
2018-04-06 18:28:26,990: Parsing materializations/archive.sql
2018-04-06 18:28:27,030: Parsing materializations/bigquery.sql
2018-04-06 18:28:27,046: Parsing materializations/helpers.sql
2018-04-06 18:28:27,071: Parsing materializations/incremental.sql
2018-04-06 18:28:27,094: Parsing materializations/table.sql
2018-04-06 18:28:27,110: Parsing materializations/view.sql
2018-04-06 18:28:27,136: Parsing materializations/wrapper.sql
2018-04-06 18:28:27,182: Parsing schema_tests/accepted_values.sql
2018-04-06 18:28:27,185: Parsing schema_tests/not_null.sql
2018-04-06 18:28:27,187: Parsing schema_tests/relationships.sql
2018-04-06 18:28:27,202: Parsing schema_tests/unique.sql
2018-04-06 18:28:27,729: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 18:28:27,731: Parsing model.agency_data_pipeline.all_dates
2018-04-06 18:28:27,732: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 18:28:27,733: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 18:28:27,735: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:28:27,736: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:28:27,738: Acquiring new bigquery connection "master".
2018-04-06 18:28:27,738: Opening a new connection (0 currently allocated)
2018-04-06 18:28:27,768: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 18:28:27,769: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 18:28:27,772: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:28:27,773: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 18:28:27,775: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:28:27,776: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 18:28:27,779: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 18:28:27,780: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 18:28:27,782: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:28:27,784: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:28:27,786: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:28:27,787: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:28:27,789: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 18:28:27,794: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 18:28:27,799: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:28:27,804: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:28:27,810: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:28:27,812: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 18:28:27,813: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 18:28:27,825: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 18:28:27,833: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:28:27,835: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:28:27,837: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:28:27,844: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:28:27,850: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:28:27,856: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:28:27,861: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 18:28:27,864: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 18:28:27,865: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:28:27,867: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:28:27,869: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 18:28:27,871: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:28:27,873: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:28:27,876: Parsing model.agency_data_pipeline.agg_products
2018-04-06 18:28:27,877: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 18:28:27,879: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:28:27,880: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:28:27,882: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:28:27,884: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:28:27,885: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:28:27,886: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:28:27,888: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:28:27,890: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 18:28:27,893: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 18:28:27,897: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 18:28:27,899: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:28:27,901: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:28:27,903: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:28:27,906: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 18:28:27,908: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 18:28:27,910: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 18:28:27,913: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:28:27,916: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:28:27,917: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 18:28:27,919: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 18:28:27,921: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:28:27,924: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:28:27,925: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:28:27,928: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:28:27,930: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 18:28:27,932: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:28:27,934: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:28:27,936: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:28:27,939: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 18:28:27,940: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 18:28:27,942: Parsing model.agency_data_pipeline.products_proc
2018-04-06 18:28:27,944: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:28:27,946: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 18:28:27,947: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:28:27,967: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 18:28:27,998: 
2018-04-06 18:28:29,096: 18:28:29 | Concurrency: 4 threads (target='prod')
2018-04-06 18:28:29,096: 18:28:29 | 
2018-04-06 18:28:29,601: 18:28:29 | 1 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 18:28:29,601: Compiling model.agency_data_pipeline.all_dates
2018-04-06 18:28:29,605: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 18:28:29,601: 18:28:29 | 2 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 18:28:29,601: 18:28:29 | 3 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 18:28:29,605: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:28:29,601: 18:28:29 | 4 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 18:28:29,606: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:28:29,609: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 18:28:29,609: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 18:28:29,610: Acquiring new bigquery connection "all_dates".
2018-04-06 18:28:29,615: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 18:28:29,619: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 18:28:29,619: Opening a new connection (1 currently allocated)
2018-04-06 18:28:29,641: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 18:28:29,642: Acquiring new bigquery connection "monthend_dates".
2018-04-06 18:28:29,685: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 18:28:29,689: Opening a new connection (2 currently allocated)
2018-04-06 18:28:29,693: Opening a new connection (3 currently allocated)
2018-04-06 18:28:29,731: Opening a new connection (4 currently allocated)
2018-04-06 18:28:30,641: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 18:28:30,677: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 18:28:30,703: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 18:28:30,718: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 18:28:31,729: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:31,918: 18:28:31 | 1 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 2.13s]
2018-04-06 18:28:31,919: 18:28:31 | 5 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 18:28:31,919: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:28:31,923: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 18:28:31,924: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 18:28:31,924: Re-using an available connection from the pool.
2018-04-06 18:28:32,580: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 18:28:33,953: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcf9b70>]}
2018-04-06 18:28:33,986: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90eb8>]}
2018-04-06 18:28:34,136: 18:28:34 | 2 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.35s]
2018-04-06 18:28:34,136: 18:28:34 | 6 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 18:28:34,137: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 18:28:34,140: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 18:28:34,142: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 18:28:34,143: Re-using an available connection from the pool.
2018-04-06 18:28:34,338: 18:28:34 | 3 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 4.38s]
2018-04-06 18:28:34,339: 18:28:34 | 7 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 18:28:34,339: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 18:28:34,346: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 18:28:34,347: Acquiring new bigquery connection "adwords_urls".
2018-04-06 18:28:34,347: Re-using an available connection from the pool.
2018-04-06 18:28:34,786: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 18:28:34,840: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:34,997: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 18:28:35,021: 18:28:35 | 5 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.92s]
2018-04-06 18:28:35,021: 18:28:35 | 8 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 18:28:35,021: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 18:28:35,025: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 18:28:35,027: Acquiring new bigquery connection "accounts_proc".
2018-04-06 18:28:35,027: Re-using an available connection from the pool.
2018-04-06 18:28:35,765: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 18:28:35,882: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bcf9b70>]}
2018-04-06 18:28:36,144: 18:28:36 | 6 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 1.75s]
2018-04-06 18:28:36,145: 18:28:36 | 9 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 18:28:36,145: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 18:28:36,148: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 18:28:36,852: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:37,038: 18:28:37 | 8 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 1.83s]
2018-04-06 18:28:37,038: 18:28:37 | 10 of 75 START table model agency_data_pipeline.carts_proc........... [RUN]
2018-04-06 18:28:37,039: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 18:28:37,043: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 18:28:37,063: Acquiring new bigquery connection "carts_proc".
2018-04-06 18:28:37,063: Acquiring new bigquery connection "ga_conversions".
2018-04-06 18:28:37,063: Re-using an available connection from the pool.
2018-04-06 18:28:37,064: Re-using an available connection from the pool.
2018-04-06 18:28:37,183: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90eb8>]}
2018-04-06 18:28:37,289: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc8ba90>]}
2018-04-06 18:28:37,376: 18:28:37 | 7 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.84s]
2018-04-06 18:28:37,376: 18:28:37 | 11 of 75 START table model agency_data_pipeline.conversion_goals_proc [RUN]
2018-04-06 18:28:37,377: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:28:37,380: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 18:28:37,382: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 18:28:37,383: Re-using an available connection from the pool.
2018-04-06 18:28:37,567: 18:28:37 | 4 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 7.68s]
2018-04-06 18:28:37,568: 18:28:37 | 12 of 75 START table model agency_data_pipeline.clients_proc......... [RUN]
2018-04-06 18:28:37,568: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 18:28:37,572: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 18:28:37,572: Acquiring new bigquery connection "clients_proc".
2018-04-06 18:28:37,572: Re-using an available connection from the pool.
2018-04-06 18:28:37,703: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 18:28:37,711: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 18:28:38,163: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 18:28:38,202: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 18:28:38,798: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb52f60>]}
2018-04-06 18:28:38,801: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:38,985: 18:28:38 | 9 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.65s]
2018-04-06 18:28:39,172: 18:28:39 | 10 of 75 OK created table model agency_data_pipeline.carts_proc...... [CREATE TABLE in 1.76s]
2018-04-06 18:28:40,348: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108827710>]}
2018-04-06 18:28:40,381: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc8ba90>]}
2018-04-06 18:28:40,535: 18:28:40 | 11 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.97s]
2018-04-06 18:28:40,719: 18:28:40 | 12 of 75 OK created table model agency_data_pipeline.clients_proc.... [CREATE TABLE in 2.81s]
2018-04-06 18:28:40,720: 18:28:40 | 13 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 18:28:40,720: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:28:40,724: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 18:28:40,720: 18:28:40 | 14 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 18:28:40,725: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:28:40,720: 18:28:40 | 15 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 18:28:40,720: 18:28:40 | 16 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 18:28:40,730: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 18:28:40,730: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:28:40,730: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 18:28:40,734: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 18:28:40,738: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 18:28:40,768: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 18:28:40,768: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 18:28:40,769: Re-using an available connection from the pool.
2018-04-06 18:28:40,769: Re-using an available connection from the pool.
2018-04-06 18:28:40,770: Acquiring new bigquery connection "adwords_ads".
2018-04-06 18:28:40,770: Re-using an available connection from the pool.
2018-04-06 18:28:40,775: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 18:28:40,776: Re-using an available connection from the pool.
2018-04-06 18:28:41,425: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 18:28:41,441: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 18:28:41,442: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 18:28:41,470: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 18:28:43,610: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0c4dd8>]}
2018-04-06 18:28:43,622: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e104be0>]}
2018-04-06 18:28:43,668: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:43,796: 18:28:43 | 15 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.88s]
2018-04-06 18:28:43,797: 18:28:43 | 17 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 18:28:43,798: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 18:28:43,804: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 18:28:43,805: Re-using an available connection from the pool.
2018-04-06 18:28:43,805: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:43,994: 18:28:43 | 16 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.89s]
2018-04-06 18:28:43,994: 18:28:43 | 18 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 18:28:43,996: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:28:44,001: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 18:28:44,002: Re-using an available connection from the pool.
2018-04-06 18:28:44,002: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:44,197: 18:28:44 | 14 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.94s]
2018-04-06 18:28:44,198: 18:28:44 | 19 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 18:28:44,198: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:28:44,203: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 18:28:44,203: Re-using an available connection from the pool.
2018-04-06 18:28:44,203: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:44,998: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 18:28:45,382: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 18:28:45,646: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 18:28:45,893: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 18:28:46,442: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 18:28:46,492: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 18:28:46,935: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d47b8>]}
2018-04-06 18:28:47,132: 18:28:47 | 13 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.21s]
2018-04-06 18:28:47,132: 18:28:47 | 20 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 18:28:47,133: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:28:47,138: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 18:28:47,138: Re-using an available connection from the pool.
2018-04-06 18:28:47,138: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:47,474: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 18:28:47,829: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0c4dd8>]}
2018-04-06 18:28:48,016: 18:28:48 | 17 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 4.03s]
2018-04-06 18:28:48,065: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 18:28:48,618: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90390>]}
2018-04-06 18:28:48,807: 18:28:48 | 18 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.62s]
2018-04-06 18:28:49,739: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:28:49,943: 18:28:49 | 19 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 5.54s]
2018-04-06 18:28:50,224: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d47b8>]}
2018-04-06 18:28:50,404: 18:28:50 | 20 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.09s]
2018-04-06 18:28:50,405: 18:28:50 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 18:28:50,405: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 18:28:50,411: Acquiring new bigquery connection "fb_ads".
2018-04-06 18:28:50,405: 18:28:50 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 18:28:50,411: Re-using an available connection from the pool.
2018-04-06 18:28:50,411: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:28:50,411: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:50,417: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 18:28:50,417: Re-using an available connection from the pool.
2018-04-06 18:28:50,417: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:50,720: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 18:28:50,728: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 18:28:51,336: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 18:28:51,340: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 18:28:54,553: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bc8ba90>]}
2018-04-06 18:28:54,743: 18:28:54 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 4.15s]
2018-04-06 18:28:57,885: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e120ac8>]}
2018-04-06 18:28:58,074: 18:28:58 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 7.47s]
2018-04-06 18:28:58,074: 18:28:58 | 23 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 18:28:58,075: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:28:58,081: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 18:28:58,081: 18:28:58 | 24 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 18:28:58,081: 18:28:58 | 25 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 18:28:58,082: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 18:28:58,081: 18:28:58 | 26 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 18:28:58,082: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:28:58,084: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 18:28:58,104: Re-using an available connection from the pool.
2018-04-06 18:28:58,091: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 18:28:58,116: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 18:28:58,116: Re-using an available connection from the pool.
2018-04-06 18:28:58,114: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 18:28:58,121: Re-using an available connection from the pool.
2018-04-06 18:28:58,122: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:58,091: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:28:58,141: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 18:28:58,141: Re-using an available connection from the pool.
2018-04-06 18:28:58,142: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:28:58,440: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 18:28:58,453: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 18:28:58,691: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 18:28:58,798: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 18:28:59,199: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 18:28:59,233: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 18:29:00,986: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd47ba8>]}
2018-04-06 18:29:01,176: 18:29:01 | 23 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.91s]
2018-04-06 18:29:01,176: 18:29:01 | 27 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 18:29:01,176: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:29:01,181: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 18:29:01,181: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 18:29:01,181: Re-using an available connection from the pool.
2018-04-06 18:29:01,402: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb8a3c8>]}
2018-04-06 18:29:01,590: 18:29:01 | 24 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.32s]
2018-04-06 18:29:01,830: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 18:29:03,043: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e12f710>]}
2018-04-06 18:29:03,233: 18:29:03 | 25 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 4.96s]
2018-04-06 18:29:06,182: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e104e80>]}
2018-04-06 18:29:06,365: 18:29:06 | 27 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.01s]
2018-04-06 18:29:07,922: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd33e10>]}
2018-04-06 18:29:08,116: 18:29:08 | 26 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 9.83s]
2018-04-06 18:29:08,117: 18:29:08 | 28 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 18:29:08,117: 18:29:08 | 29 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 18:29:08,117: 18:29:08 | 30 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 18:29:08,117: 18:29:08 | 31 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 18:29:08,117: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 18:29:08,117: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 18:29:08,117: Compiling model.agency_data_pipeline.agg_products
2018-04-06 18:29:08,118: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 18:29:08,121: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 18:29:08,131: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 18:29:08,134: Acquiring new bigquery connection "ga_transactions".
2018-04-06 18:29:08,138: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 18:29:08,139: Re-using an available connection from the pool.
2018-04-06 18:29:08,139: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:29:08,191: Acquiring new bigquery connection "adwords_join".
2018-04-06 18:29:08,191: Acquiring new bigquery connection "agg_products".
2018-04-06 18:29:08,191: Re-using an available connection from the pool.
2018-04-06 18:29:08,192: Re-using an available connection from the pool.
2018-04-06 18:29:08,193: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 18:29:08,194: Re-using an available connection from the pool.
2018-04-06 18:29:08,783: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 18:29:08,849: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 18:29:08,901: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 18:29:09,299: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:29:09,874: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e12ccf8>]}
2018-04-06 18:29:10,058: 18:29:10 | 30 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.76s]
2018-04-06 18:29:10,058: 18:29:10 | 32 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 18:29:10,058: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 18:29:10,069: Acquiring new bigquery connection "ga_traffic".
2018-04-06 18:29:10,069: Re-using an available connection from the pool.
2018-04-06 18:29:10,069: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:29:10,495: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 18:29:11,144: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 18:29:11,228: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:29:11,537: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 18:29:12,206: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e116048>]}
2018-04-06 18:29:12,245: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 18:29:12,391: 18:29:12 | 31 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 4.09s]
2018-04-06 18:29:16,552: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e116390>]}
2018-04-06 18:29:16,738: 18:29:16 | 28 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 8.43s]
2018-04-06 18:29:18,047: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e12c2b0>]}
2018-04-06 18:29:18,229: 18:29:18 | 29 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 9.93s]
2018-04-06 18:29:22,465: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd33ac8>]}
2018-04-06 18:29:22,654: 18:29:22 | 32 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 12.41s]
2018-04-06 18:29:22,654: 18:29:22 | 33 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 18:29:22,654: 18:29:22 | 34 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 18:29:22,654: 18:29:22 | 35 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 18:29:22,654: 18:29:22 | 36 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 18:29:22,655: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:29:22,655: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:29:22,655: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:29:22,655: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 18:29:22,659: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 18:29:22,663: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 18:29:22,667: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 18:29:22,671: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 18:29:22,672: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 18:29:22,673: Acquiring new bigquery connection "adwords_stats".
2018-04-06 18:29:22,673: Re-using an available connection from the pool.
2018-04-06 18:29:22,673: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 18:29:22,673: Re-using an available connection from the pool.
2018-04-06 18:29:22,674: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 18:29:22,675: Re-using an available connection from the pool.
2018-04-06 18:29:22,678: Re-using an available connection from the pool.
2018-04-06 18:29:24,897: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 18:29:24,905: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 18:29:24,957: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 18:29:24,989: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 18:29:27,094: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:29:27,130: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0cd780>]}
2018-04-06 18:29:27,136: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d4f98>]}
2018-04-06 18:29:27,696: 18:29:27 | 36 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 4.44s]
2018-04-06 18:29:27,697: 18:29:27 | 37 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 18:29:27,698: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:29:27,701: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 18:29:27,738: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 18:29:27,738: Re-using an available connection from the pool.
2018-04-06 18:29:27,887: 18:29:27 | 33 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 4.48s]
2018-04-06 18:29:28,086: 18:29:28 | 35 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 4.48s]
2018-04-06 18:29:28,284: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 18:29:32,496: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd906a0>]}
2018-04-06 18:29:32,618: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:29:32,682: 18:29:32 | 34 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 9.84s]
2018-04-06 18:29:32,866: 18:29:32 | 37 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 4.92s]
2018-04-06 18:29:32,866: 18:29:32 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 18:29:32,867: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:29:32,871: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 18:29:32,872: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 18:29:32,872: Re-using an available connection from the pool.
2018-04-06 18:29:33,518: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 18:29:38,922: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90b70>]}
2018-04-06 18:29:39,107: 18:29:39 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 6.06s]
2018-04-06 18:29:39,107: 18:29:39 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 18:29:39,107: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:29:39,112: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 18:29:39,107: 18:29:39 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 18:29:39,112: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:29:39,117: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 18:29:39,118: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 18:29:39,118: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 18:29:39,119: Re-using an available connection from the pool.
2018-04-06 18:29:39,120: Re-using an available connection from the pool.
2018-04-06 18:29:39,707: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 18:29:39,784: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(ifnull(last_touch_shipping,0)) - sum(ifnull(last_touch_tax,0)) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:29:44,035: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46e10>]}
2018-04-06 18:29:44,217: 18:29:44 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.93s]
2018-04-06 18:29:48,449: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd47ba8>]}
2018-04-06 18:29:48,638: 18:29:48 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.34s]
2018-04-06 18:29:48,639: 18:29:48 | 41 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 18:29:48,639: 18:29:48 | 42 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 18:29:48,639: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:29:48,639: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:29:48,643: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 18:29:48,646: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 18:29:48,662: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 18:29:48,662: Re-using an available connection from the pool.
2018-04-06 18:29:48,662: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 18:29:48,663: Re-using an available connection from the pool.
2018-04-06 18:29:49,231: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 18:29:49,242: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 18:29:52,493: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90b70>]}
2018-04-06 18:29:52,681: 18:29:52 | 41 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.85s]
2018-04-06 18:29:53,592: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0cd7b8>]}
2018-04-06 18:29:53,778: 18:29:53 | 42 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 4.95s]
2018-04-06 18:29:53,778: 18:29:53 | 43 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 18:29:53,778: 18:29:53 | 44 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 18:29:53,779: 18:29:53 | 45 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 18:29:53,779: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 18:29:53,779: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 18:29:53,779: Compiling model.agency_data_pipeline.products_proc
2018-04-06 18:29:53,783: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 18:29:53,787: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 18:29:53,792: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 18:29:53,814: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 18:29:53,815: Acquiring new bigquery connection "products_proc".
2018-04-06 18:29:53,815: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 18:29:53,815: Re-using an available connection from the pool.
2018-04-06 18:29:53,816: Re-using an available connection from the pool.
2018-04-06 18:29:53,816: Re-using an available connection from the pool.
2018-04-06 18:29:54,383: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 18:29:54,411: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 18:29:54,474: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 18:29:56,545: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd47208>]}
2018-04-06 18:29:56,735: 18:29:56 | 44 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.77s]
2018-04-06 18:30:02,085: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e1167b8>]}
2018-04-06 18:30:02,273: 18:30:02 | 45 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 8.31s]
2018-04-06 18:30:32,491: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd338d0>]}
2018-04-06 18:30:33,021: 18:30:33 | 43 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 38.71s]
2018-04-06 18:30:33,021: 18:30:33 | 46 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 18:30:33,021: 18:30:33 | 47 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 18:30:33,021: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:30:33,022: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 18:30:33,025: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 18:30:33,029: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 18:30:33,031: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 18:30:33,031: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 18:30:33,031: Re-using an available connection from the pool.
2018-04-06 18:30:33,032: Re-using an available connection from the pool.
2018-04-06 18:30:33,673: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 18:30:33,680: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 18:30:35,849: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd33ac8>]}
2018-04-06 18:30:36,033: 18:30:36 | 46 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.83s]
2018-04-06 18:30:36,934: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90470>]}
2018-04-06 18:30:37,128: 18:30:37 | 47 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 3.91s]
2018-04-06 18:30:37,129: 18:30:37 | 48 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 18:30:37,129: 18:30:37 | 49 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 18:30:37,129: 18:30:37 | 50 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 18:30:37,130: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:30:37,130: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:30:37,130: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 18:30:37,135: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 18:30:37,139: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 18:30:37,144: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 18:30:37,145: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 18:30:37,145: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 18:30:37,145: Re-using an available connection from the pool.
2018-04-06 18:30:37,145: Re-using an available connection from the pool.
2018-04-06 18:30:37,148: Acquiring new bigquery connection "agg_transaction".
2018-04-06 18:30:37,148: Re-using an available connection from the pool.
2018-04-06 18:30:37,714: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 18:30:37,721: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 18:30:37,729: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 18:30:41,006: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd47c18>]}
2018-04-06 18:30:41,188: 18:30:41 | 48 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 3.88s]
2018-04-06 18:30:43,106: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb8e198>]}
2018-04-06 18:30:43,290: 18:30:43 | 50 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 5.98s]
2018-04-06 18:31:12,429: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0cd2b0>]}
2018-04-06 18:31:12,614: 18:31:12 | 49 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 35.30s]
2018-04-06 18:31:12,615: 18:31:12 | 51 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 18:31:12,615: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 18:31:12,615: 18:31:12 | 52 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 18:31:12,619: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 18:31:12,615: 18:31:12 | 53 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 18:31:12,619: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:31:12,615: 18:31:12 | 54 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 18:31:12,619: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:31:12,625: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 18:31:12,625: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:31:12,628: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 18:31:12,629: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 18:31:12,634: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 18:31:12,634: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 18:31:12,635: Re-using an available connection from the pool.
2018-04-06 18:31:12,635: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 18:31:12,636: Re-using an available connection from the pool.
2018-04-06 18:31:12,640: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 18:31:12,641: Re-using an available connection from the pool.
2018-04-06 18:31:12,646: Re-using an available connection from the pool.
2018-04-06 18:31:13,248: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 18:31:13,251: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 18:31:13,265: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 18:31:13,298: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 18:31:15,437: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90470>]}
2018-04-06 18:31:15,627: 18:31:15 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.82s]
2018-04-06 18:31:16,526: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bda34e0>]}
2018-04-06 18:31:16,712: 18:31:16 | 53 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 3.91s]
2018-04-06 18:31:17,618: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb8e978>]}
2018-04-06 18:31:17,808: 18:31:17 | 54 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 4.99s]
2018-04-06 18:31:40,529: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0f69e8>]}
2018-04-06 18:31:41,066: 18:31:41 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 27.91s]
2018-04-06 18:31:41,067: 18:31:41 | 55 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 18:31:41,067: 18:31:41 | 56 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 18:31:41,067: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:31:41,067: 18:31:41 | 57 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 18:31:41,067: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 18:31:41,071: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 18:31:41,071: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:31:41,076: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 18:31:41,080: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 18:31:41,082: Acquiring new bigquery connection "customers_proc".
2018-04-06 18:31:41,082: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 18:31:41,083: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 18:31:41,083: Re-using an available connection from the pool.
2018-04-06 18:31:41,083: Re-using an available connection from the pool.
2018-04-06 18:31:41,084: Re-using an available connection from the pool.
2018-04-06 18:31:41,624: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_365) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:31:41,746: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 18:31:41,845: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 18:31:59,003: Bad request while running:
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_365) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:31:59,003: 400 division by zero
2018-04-06 18:31:59,003: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb707b8>]}
2018-04-06 18:31:59,189: 18:31:59 | 55 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers_products [ERROR in 17.94s]
2018-04-06 18:32:01,124: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e116320>]}
2018-04-06 18:32:01,319: 18:32:01 | 57 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 20.05s]
2018-04-06 18:32:16,615: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e116da0>]}
2018-04-06 18:32:16,799: 18:32:16 | 56 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 35.55s]
2018-04-06 18:32:16,799: 18:32:16 | 58 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:32:16,799: 18:32:16 | 59 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:32:16,799: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:32:16,799: 18:32:16 | 60 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:32:16,800: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:32:16,804: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:32:16,804: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:32:16,809: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:32:16,814: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:32:16,815: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:32:16,816: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:32:16,816: Re-using an available connection from the pool.
2018-04-06 18:32:16,816: Re-using an available connection from the pool.
2018-04-06 18:32:16,820: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:32:16,820: Re-using an available connection from the pool.
2018-04-06 18:32:17,465: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:32:17,471: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:32:17,482: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:32:20,717: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb85cf8>]}
2018-04-06 18:32:20,791: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90470>]}
2018-04-06 18:32:20,909: 18:32:20 | 60 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 3.91s]
2018-04-06 18:32:21,096: 18:32:21 | 59 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 3.99s]
2018-04-06 18:32:28,376: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d40b8>]}
2018-04-06 18:32:28,555: 18:32:28 | 58 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 11.58s]
2018-04-06 18:32:28,556: 18:32:28 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:32:28,556: 18:32:28 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:32:28,556: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:32:28,556: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:32:28,561: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:32:28,566: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:32:28,567: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:32:28,567: Re-using an available connection from the pool.
2018-04-06 18:32:28,568: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:32:28,568: Re-using an available connection from the pool.
2018-04-06 18:32:29,116: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:32:29,162: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:32:32,424: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0cd8d0>]}
2018-04-06 18:32:32,614: 18:32:32 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.87s]
2018-04-06 18:32:57,275: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d41d0>]}
2018-04-06 18:32:57,814: 18:32:57 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 28.72s]
2018-04-06 18:32:57,815: 18:32:57 | 63 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:32:57,815: 18:32:57 | 64 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:32:57,815: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:32:57,815: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:32:57,821: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:32:57,825: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:32:57,827: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:32:57,827: Re-using an available connection from the pool.
2018-04-06 18:32:57,828: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:32:57,829: Re-using an available connection from the pool.
2018-04-06 18:32:58,522: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:32:58,552: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:33:02,887: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb85ef0>]}
2018-04-06 18:33:03,073: 18:33:03 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 5.07s]
2018-04-06 18:33:21,374: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d40b8>]}
2018-04-06 18:33:21,572: 18:33:21 | 63 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 23.56s]
2018-04-06 18:33:21,572: 18:33:21 | 65 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 18:33:21,572: 18:33:21 | 66 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 18:33:21,572: 18:33:21 | 67 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 18:33:21,572: 18:33:21 | 68 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 18:33:21,573: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:33:21,573: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:33:21,573: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:33:21,573: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:33:21,577: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 18:33:21,582: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 18:33:21,586: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 18:33:21,590: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 18:33:21,592: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 18:33:21,592: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 18:33:21,593: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 18:33:21,593: Re-using an available connection from the pool.
2018-04-06 18:33:21,593: Re-using an available connection from the pool.
2018-04-06 18:33:21,595: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 18:33:21,595: Re-using an available connection from the pool.
2018-04-06 18:33:21,595: Re-using an available connection from the pool.
2018-04-06 18:33:22,126: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_365) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:33:22,204: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 18:33:22,218: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 18:33:22,248: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 18:33:24,371: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0c4278>]}
2018-04-06 18:33:24,433: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90da0>]}
2018-04-06 18:33:24,556: 18:33:24 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 2.80s]
2018-04-06 18:33:24,557: 18:33:24 | 69 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 18:33:24,558: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:33:24,562: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 18:33:24,564: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 18:33:24,564: Re-using an available connection from the pool.
2018-04-06 18:33:24,746: 18:33:24 | 68 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.86s]
2018-04-06 18:33:25,159: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 18:33:25,473: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d41d0>]}
2018-04-06 18:33:25,655: 18:33:25 | 65 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.90s]
2018-04-06 18:33:33,858: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0c4278>]}
2018-04-06 18:33:34,047: 18:33:34 | 69 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 9.30s]
2018-04-06 18:33:35,203: Bad request while running:
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_365) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:33:35,203: 400 division by zero
2018-04-06 18:33:35,204: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0e54a8>]}
2018-04-06 18:33:35,390: 18:33:35 | 67 of 75 ERROR creating table model agency_data_pipeline.segment_stats_customers [ERROR in 13.63s]
2018-04-06 18:33:35,390: 18:33:35 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 18:33:35,391: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 18:33:35,395: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 18:33:35,396: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 18:33:35,396: Re-using an available connection from the pool.
2018-04-06 18:33:36,006: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 18:34:15,289: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d40b8>]}
2018-04-06 18:34:15,878: 18:34:15 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 39.90s]
2018-04-06 18:34:15,878: 18:34:15 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 18:34:15,878: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:34:15,883: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 18:34:15,884: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 18:34:15,884: Re-using an available connection from the pool.
2018-04-06 18:34:16,570: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 18:34:35,170: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90da0>]}
2018-04-06 18:34:35,359: 18:34:35 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 19.29s]
2018-04-06 18:34:35,360: 18:34:35 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 18:34:35,360: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 18:34:35,365: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 18:34:35,365: Acquiring new bigquery connection "growth_date_union".
2018-04-06 18:34:35,365: Re-using an available connection from the pool.
2018-04-06 18:34:36,047: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 18:34:37,138: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d40b8>]}
2018-04-06 18:34:37,320: 18:34:37 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 1.78s]
2018-04-06 18:34:37,320: 18:34:37 | 73 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 18:34:37,320: 18:34:37 | 74 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 18:34:37,321: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 18:34:37,321: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 18:34:37,327: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 18:34:37,333: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 18:34:37,334: Acquiring new bigquery connection "retention_stats".
2018-04-06 18:34:37,334: Re-using an available connection from the pool.
2018-04-06 18:34:37,336: Acquiring new bigquery connection "growth_stats".
2018-04-06 18:34:37,336: Re-using an available connection from the pool.
2018-04-06 18:34:37,936: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 18:34:37,995: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 18:34:39,094: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0cd908>]}
2018-04-06 18:34:39,281: 18:34:39 | 74 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.77s]
2018-04-06 18:34:43,404: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bd90da0>]}
2018-04-06 18:34:43,586: 18:34:43 | 73 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 6.08s]
2018-04-06 18:34:43,586: 18:34:43 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 18:34:43,587: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 18:34:43,591: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 18:34:43,592: Acquiring new bigquery connection "agg_campaign".
2018-04-06 18:34:43,592: Re-using an available connection from the pool.
2018-04-06 18:34:44,338: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:34:56,359: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3dde01ad-e36c-4be3-b9aa-4770f848f507', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0d40b8>]}
2018-04-06 18:34:56,539: 18:34:56 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 12.77s]
2018-04-06 18:34:56,606: 18:34:56 | 
2018-04-06 18:34:56,606: 18:34:56 | Finished running 75 table models in 387.51s.
2018-04-06 18:34:56,606: Connection 'master' was left open.
2018-04-06 18:34:56,606: 
2018-04-06 18:34:56,607: Completed with 2 errors:
2018-04-06 18:34:56,607: 
2018-04-06 18:34:56,607: Database Error in model segment_stats_customers_products (models/segmentation/customers-products/segment_stats_customers_products.sql)
2018-04-06 18:34:56,607:   division by zero
2018-04-06 18:34:56,607:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers-products/segment_stats_customers_products.sql
2018-04-06 18:34:56,607: 
2018-04-06 18:34:56,607: Database Error in model segment_stats_customers (models/segmentation/customers/segment_stats_customers.sql)
2018-04-06 18:34:56,607:   division by zero
2018-04-06 18:34:56,608:   compiled SQL at target/compiled/agency_data_pipeline/segmentation/customers/segment_stats_customers.sql
2018-04-06 18:34:56,608: 
Done. PASS=73 ERROR=2 SKIP=0 TOTAL=75
2018-04-06 18:34:56,608: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46a58>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10bb46cf8>]}
2018-04-06 18:34:56,796: Flushing usage events
2018-04-06 18:36:20,823: Tracking: tracking
2018-04-06 18:36:20,823: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e6b908>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e6b588>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108e6b9e8>]}
2018-04-06 18:36:21,425: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 18:36:21,439: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 18:36:21,439: Parsing get_column_values.sql
2018-04-06 18:36:21,448: Parsing get_url_parameter.sql
2018-04-06 18:36:21,451: Parsing split_part.sql
2018-04-06 18:36:21,455: Parsing table_exists.sql
2018-04-06 18:36:21,461: Parsing core.sql
2018-04-06 18:36:21,471: Parsing adapters/bigquery.sql
2018-04-06 18:36:21,475: Parsing adapters/common.sql
2018-04-06 18:36:21,487: Parsing adapters/postgres.sql
2018-04-06 18:36:21,490: Parsing adapters/redshift.sql
2018-04-06 18:36:21,505: Parsing etc/get_custom_schema.sql
2018-04-06 18:36:21,510: Parsing materializations/archive.sql
2018-04-06 18:36:21,536: Parsing materializations/bigquery.sql
2018-04-06 18:36:21,547: Parsing materializations/helpers.sql
2018-04-06 18:36:21,561: Parsing materializations/incremental.sql
2018-04-06 18:36:21,584: Parsing materializations/table.sql
2018-04-06 18:36:21,601: Parsing materializations/view.sql
2018-04-06 18:36:21,614: Parsing materializations/wrapper.sql
2018-04-06 18:36:21,616: Parsing schema_tests/accepted_values.sql
2018-04-06 18:36:21,619: Parsing schema_tests/not_null.sql
2018-04-06 18:36:21,620: Parsing schema_tests/relationships.sql
2018-04-06 18:36:21,623: Parsing schema_tests/unique.sql
2018-04-06 18:36:21,634: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 18:36:21,635: Parsing model.agency_data_pipeline.all_dates
2018-04-06 18:36:21,636: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 18:36:21,637: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 18:36:21,639: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:36:21,641: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:36:21,642: Acquiring new bigquery connection "master".
2018-04-06 18:36:21,642: Opening a new connection (0 currently allocated)
2018-04-06 18:36:21,643: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 18:36:21,645: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 18:36:21,646: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:36:21,648: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 18:36:21,649: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:36:21,650: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 18:36:21,652: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 18:36:21,654: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 18:36:21,655: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:36:21,658: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:36:21,660: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:36:21,661: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:36:21,663: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 18:36:21,668: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 18:36:21,673: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:36:21,678: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:36:21,683: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:36:21,685: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 18:36:21,686: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 18:36:21,696: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 18:36:21,704: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:36:21,706: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:36:21,708: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:36:21,714: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:36:21,721: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:36:21,727: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:36:21,731: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 18:36:21,733: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 18:36:21,735: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:36:21,737: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:36:21,739: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 18:36:21,740: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:36:21,742: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:36:21,744: Parsing model.agency_data_pipeline.agg_products
2018-04-06 18:36:21,746: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 18:36:21,748: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:36:21,749: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:36:21,750: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:36:21,752: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:36:21,754: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:36:21,755: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:36:21,757: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:36:21,759: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 18:36:21,762: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 18:36:21,766: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 18:36:21,768: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:36:21,770: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:36:21,772: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:36:21,774: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 18:36:21,776: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 18:36:21,778: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 18:36:21,782: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:36:21,784: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:36:21,785: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 18:36:21,787: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 18:36:21,789: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:36:21,791: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:36:21,793: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:36:21,795: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:36:21,797: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 18:36:21,799: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:36:21,801: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:36:21,803: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:36:21,806: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 18:36:21,807: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 18:36:21,809: Parsing model.agency_data_pipeline.products_proc
2018-04-06 18:36:21,811: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:36:21,812: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 18:36:21,814: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:36:21,835: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 18:36:21,862: 
2018-04-06 18:36:22,988: 18:36:22 | Concurrency: 4 threads (target='prod')
2018-04-06 18:36:22,988: 18:36:22 | 
2018-04-06 18:36:23,391: 18:36:23 | 1 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 18:36:23,391: 18:36:23 | 2 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 18:36:23,391: 18:36:23 | 3 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 18:36:23,391: 18:36:23 | 4 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 18:36:23,391: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 18:36:23,391: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:36:23,391: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:36:23,392: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:36:23,395: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 18:36:23,399: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 18:36:23,402: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 18:36:23,407: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 18:36:23,408: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 18:36:23,408: Opening a new connection (1 currently allocated)
2018-04-06 18:36:23,409: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 18:36:23,410: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 18:36:23,411: Acquiring new bigquery connection "monthend_dates".
2018-04-06 18:36:23,411: Opening a new connection (2 currently allocated)
2018-04-06 18:36:23,412: Opening a new connection (3 currently allocated)
2018-04-06 18:36:23,413: Opening a new connection (4 currently allocated)
2018-04-06 18:36:24,363: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 18:36:24,448: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 18:36:24,459: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 18:36:24,482: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 18:36:25,457: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902dd30>]}
2018-04-06 18:36:25,646: 18:36:25 | 1 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 2.07s]
2018-04-06 18:36:25,646: 18:36:25 | 5 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 18:36:25,646: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 18:36:25,650: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 18:36:25,651: Acquiring new bigquery connection "carts_proc".
2018-04-06 18:36:25,651: Re-using an available connection from the pool.
2018-04-06 18:36:26,276: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 18:36:26,667: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d278>]}
2018-04-06 18:36:26,698: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d860>]}
2018-04-06 18:36:26,869: 18:36:26 | 4 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 3.28s]
2018-04-06 18:36:26,869: 18:36:26 | 6 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 18:36:26,870: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 18:36:26,873: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 18:36:26,875: Acquiring new bigquery connection "adwords_urls".
2018-04-06 18:36:26,875: Re-using an available connection from the pool.
2018-04-06 18:36:27,061: 18:36:27 | 3 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 3.31s]
2018-04-06 18:36:27,062: 18:36:27 | 7 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 18:36:27,062: Compiling model.agency_data_pipeline.all_dates
2018-04-06 18:36:27,065: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 18:36:27,066: Acquiring new bigquery connection "all_dates".
2018-04-06 18:36:27,066: Re-using an available connection from the pool.
2018-04-06 18:36:27,476: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 18:36:27,667: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 18:36:27,729: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d6a0>]}
2018-04-06 18:36:27,916: 18:36:27 | 2 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.34s]
2018-04-06 18:36:27,916: 18:36:27 | 8 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 18:36:27,916: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 18:36:27,920: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 18:36:27,920: Acquiring new bigquery connection "clients_proc".
2018-04-06 18:36:27,921: Re-using an available connection from the pool.
2018-04-06 18:36:28,512: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902dd30>]}
2018-04-06 18:36:28,625: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 18:36:28,708: 18:36:28 | 5 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 2.87s]
2018-04-06 18:36:28,709: 18:36:28 | 9 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 18:36:28,709: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 18:36:28,712: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 18:36:28,713: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 18:36:28,713: Re-using an available connection from the pool.
2018-04-06 18:36:28,758: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d860>]}
2018-04-06 18:36:28,953: 18:36:28 | 7 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.70s]
2018-04-06 18:36:28,953: 18:36:28 | 10 of 75 START table model agency_data_pipeline.ga_conversions....... [RUN]
2018-04-06 18:36:28,953: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 18:36:28,957: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 18:36:28,957: Acquiring new bigquery connection "ga_conversions".
2018-04-06 18:36:28,957: Re-using an available connection from the pool.
2018-04-06 18:36:29,307: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 18:36:29,652: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 18:36:29,707: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3d4898>]}
2018-04-06 18:36:29,893: 18:36:29 | 8 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 1.79s]
2018-04-06 18:36:29,893: 18:36:29 | 11 of 75 START table model agency_data_pipeline.accounts_proc........ [RUN]
2018-04-06 18:36:29,894: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 18:36:29,897: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 18:36:29,898: Acquiring new bigquery connection "accounts_proc".
2018-04-06 18:36:29,898: Re-using an available connection from the pool.
2018-04-06 18:36:30,405: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b40fd68>]}
2018-04-06 18:36:30,590: 18:36:30 | 9 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 1.70s]
2018-04-06 18:36:30,591: 18:36:30 | 12 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 18:36:30,591: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:36:30,594: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 18:36:30,595: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 18:36:30,595: Re-using an available connection from the pool.
2018-04-06 18:36:30,677: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 18:36:30,715: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3bd4e0>]}
2018-04-06 18:36:30,840: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3bde48>]}
2018-04-06 18:36:30,908: 18:36:30 | 6 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 3.85s]
2018-04-06 18:36:31,108: 18:36:31 | 10 of 75 OK created table model agency_data_pipeline.ga_conversions.. [CREATE TABLE in 1.89s]
2018-04-06 18:36:31,216: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 18:36:31,765: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3c87f0>]}
2018-04-06 18:36:31,948: 18:36:31 | 11 of 75 OK created table model agency_data_pipeline.accounts_proc... [CREATE TABLE in 1.87s]
2018-04-06 18:36:33,386: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3a9cc0>]}
2018-04-06 18:36:33,572: 18:36:33 | 12 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.80s]
2018-04-06 18:36:33,572: 18:36:33 | 13 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 18:36:33,572: 18:36:33 | 14 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 18:36:33,572: 18:36:33 | 15 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 18:36:33,572: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:36:33,572: 18:36:33 | 16 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 18:36:33,573: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:36:33,573: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:36:33,577: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 18:36:33,577: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 18:36:33,581: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 18:36:33,587: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 18:36:33,591: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 18:36:33,591: Re-using an available connection from the pool.
2018-04-06 18:36:33,591: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:33,594: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 18:36:33,594: Re-using an available connection from the pool.
2018-04-06 18:36:33,594: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 18:36:33,595: Re-using an available connection from the pool.
2018-04-06 18:36:33,597: Acquiring new bigquery connection "adwords_ads".
2018-04-06 18:36:33,597: Re-using an available connection from the pool.
2018-04-06 18:36:34,185: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 18:36:34,256: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 18:36:34,271: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 18:36:34,691: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 18:36:35,289: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 18:36:36,349: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d898>]}
2018-04-06 18:36:36,534: 18:36:36 | 13 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.78s]
2018-04-06 18:36:36,534: 18:36:36 | 17 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 18:36:36,534: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:36:36,539: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 18:36:36,539: Re-using an available connection from the pool.
2018-04-06 18:36:36,539: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:36,883: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 18:36:37,552: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b40fe80>]}
2018-04-06 18:36:37,692: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 18:36:37,735: 18:36:37 | 16 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 3.98s]
2018-04-06 18:36:37,736: 18:36:37 | 18 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 18:36:37,736: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 18:36:37,741: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 18:36:37,741: Re-using an available connection from the pool.
2018-04-06 18:36:37,741: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:38,081: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 18:36:38,560: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3e7dd8>]}
2018-04-06 18:36:38,692: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 18:36:38,747: 18:36:38 | 15 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 4.99s]
2018-04-06 18:36:38,747: 18:36:38 | 19 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 18:36:38,747: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:36:38,752: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 18:36:38,752: Re-using an available connection from the pool.
2018-04-06 18:36:38,752: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:39,755: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3f1ac8>]}
2018-04-06 18:36:39,893: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902d898>]}
2018-04-06 18:36:39,948: 18:36:39 | 14 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.18s]
2018-04-06 18:36:39,949: 18:36:39 | 20 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 18:36:39,950: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:36:39,954: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 18:36:39,956: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 18:36:39,956: Re-using an available connection from the pool.
2018-04-06 18:36:39,991: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 18:36:40,147: 18:36:40 | 17 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.36s]
2018-04-06 18:36:40,478: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 18:36:40,795: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 18:36:40,861: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b40fe80>]}
2018-04-06 18:36:41,047: 18:36:41 | 18 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.12s]
2018-04-06 18:36:42,646: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3f1ac8>]}
2018-04-06 18:36:42,830: 18:36:42 | 20 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.70s]
2018-04-06 18:36:42,960: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3e7dd8>]}
2018-04-06 18:36:43,143: 18:36:43 | 19 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.21s]
2018-04-06 18:36:43,143: 18:36:43 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 18:36:43,144: 18:36:43 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 18:36:43,144: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 18:36:43,144: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:36:43,149: Acquiring new bigquery connection "fb_ads".
2018-04-06 18:36:43,155: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 18:36:43,155: Re-using an available connection from the pool.
2018-04-06 18:36:43,155: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:43,156: Re-using an available connection from the pool.
2018-04-06 18:36:43,156: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:43,472: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 18:36:43,631: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 18:36:44,101: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 18:36:44,252: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 18:36:46,423: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10622b128>]}
2018-04-06 18:36:46,606: 18:36:46 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.28s]
2018-04-06 18:36:49,506: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621ebe0>]}
2018-04-06 18:36:49,696: 18:36:49 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.36s]
2018-04-06 18:36:49,697: 18:36:49 | 23 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 18:36:49,697: 18:36:49 | 24 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 18:36:49,697: 18:36:49 | 25 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 18:36:49,697: 18:36:49 | 26 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 18:36:49,697: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 18:36:49,697: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:36:49,697: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:36:49,697: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:36:49,701: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 18:36:49,705: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 18:36:49,710: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 18:36:49,716: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 18:36:49,717: Re-using an available connection from the pool.
2018-04-06 18:36:49,717: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:49,719: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 18:36:49,720: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 18:36:49,721: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 18:36:49,721: Re-using an available connection from the pool.
2018-04-06 18:36:49,721: Re-using an available connection from the pool.
2018-04-06 18:36:49,723: Re-using an available connection from the pool.
2018-04-06 18:36:50,058: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 18:36:50,363: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 18:36:50,369: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 18:36:50,392: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
a.source,
a.medium,
campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 18:36:50,789: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 18:36:52,537: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f94a58>]}
2018-04-06 18:36:52,722: 18:36:52 | 24 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.84s]
2018-04-06 18:36:52,722: 18:36:52 | 27 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 18:36:52,722: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:36:52,730: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 18:36:52,730: Re-using an available connection from the pool.
2018-04-06 18:36:52,730: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:36:52,964: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071780>]}
2018-04-06 18:36:53,038: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 18:36:53,154: 18:36:53 | 26 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.27s]
2018-04-06 18:36:53,765: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 18:36:54,731: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10901d320>]}
2018-04-06 18:36:54,917: 18:36:54 | 23 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 5.03s]
2018-04-06 18:36:55,839: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109049470>]}
2018-04-06 18:36:56,036: 18:36:56 | 25 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 6.14s]
2018-04-06 18:37:03,495: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f94a58>]}
2018-04-06 18:37:03,684: 18:37:03 | 27 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 10.77s]
2018-04-06 18:37:03,685: 18:37:03 | 28 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 18:37:03,685: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 18:37:03,691: 18:37:03 | 29 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 18:37:03,691: 18:37:03 | 30 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 18:37:03,691: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 18:37:03,694: Acquiring new bigquery connection "ga_transactions".
2018-04-06 18:37:03,691: 18:37:03 | 31 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 18:37:03,694: Compiling model.agency_data_pipeline.agg_products
2018-04-06 18:37:03,699: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 18:37:03,699: Re-using an available connection from the pool.
2018-04-06 18:37:03,699: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 18:37:03,703: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 18:37:03,703: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:37:03,714: Acquiring new bigquery connection "ga_traffic".
2018-04-06 18:37:03,716: Acquiring new bigquery connection "adwords_join".
2018-04-06 18:37:03,717: Acquiring new bigquery connection "agg_products".
2018-04-06 18:37:03,717: Re-using an available connection from the pool.
2018-04-06 18:37:03,718: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:37:03,721: Re-using an available connection from the pool.
2018-04-06 18:37:03,730: Re-using an available connection from the pool.
2018-04-06 18:37:04,342: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 18:37:04,351: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 18:37:04,811: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:37:04,968: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:37:05,939: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 18:37:06,430: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 18:37:06,519: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10622b2e8>]}
2018-04-06 18:37:06,534: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 18:37:06,715: 18:37:06 | 30 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 2.82s]
2018-04-06 18:37:06,715: 18:37:06 | 32 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 18:37:06,715: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 18:37:06,719: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 18:37:06,720: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 18:37:06,720: Re-using an available connection from the pool.
2018-04-06 18:37:07,064: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 18:37:07,597: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b41b940>]}
2018-04-06 18:37:07,782: 18:37:07 | 29 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 3.91s]
2018-04-06 18:37:07,966: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 18:37:11,919: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621ebe0>]}
2018-04-06 18:37:12,105: 18:37:12 | 28 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.23s]
2018-04-06 18:37:15,542: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9af60>]}
2018-04-06 18:37:15,728: 18:37:15 | 32 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 8.83s]
2018-04-06 18:37:18,915: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062152b0>]}
2018-04-06 18:37:19,096: 18:37:19 | 31 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 15.22s]
2018-04-06 18:37:19,096: 18:37:19 | 33 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 18:37:19,096: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:37:19,100: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 18:37:19,100: 18:37:19 | 34 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 18:37:19,101: 18:37:19 | 35 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 18:37:19,101: 18:37:19 | 36 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 18:37:19,101: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:37:19,101: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:37:19,101: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:37:19,105: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 18:37:19,106: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 18:37:19,121: Re-using an available connection from the pool.
2018-04-06 18:37:19,110: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 18:37:19,120: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 18:37:19,117: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 18:37:19,123: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 18:37:19,124: Re-using an available connection from the pool.
2018-04-06 18:37:19,125: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 18:37:19,129: Re-using an available connection from the pool.
2018-04-06 18:37:19,131: Re-using an available connection from the pool.
2018-04-06 18:37:19,696: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 18:37:19,706: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 18:37:19,849: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 18:37:20,783: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b0860>]}
2018-04-06 18:37:20,851: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 18:37:20,983: 18:37:20 | 34 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.68s]
2018-04-06 18:37:20,983: 18:37:20 | 37 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 18:37:20,983: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 18:37:20,987: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 18:37:20,988: Acquiring new bigquery connection "adwords_stats".
2018-04-06 18:37:20,988: Re-using an available connection from the pool.
2018-04-06 18:37:21,707: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 18:37:21,887: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621e2b0>]}
2018-04-06 18:37:22,490: 18:37:22 | 35 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.79s]
2018-04-06 18:37:23,890: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10901df28>]}
2018-04-06 18:37:24,173: 18:37:24 | 37 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.91s]
2018-04-06 18:37:25,234: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071780>]}
2018-04-06 18:37:25,429: 18:37:25 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 6.13s]
2018-04-06 18:37:27,416: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f94a58>]}
2018-04-06 18:37:27,599: 18:37:27 | 33 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 8.32s]
2018-04-06 18:37:27,599: 18:37:27 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 18:37:27,599: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:37:27,604: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 18:37:27,604: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 18:37:27,605: Re-using an available connection from the pool.
2018-04-06 18:37:28,244: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 18:37:32,619: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b0860>]}
2018-04-06 18:37:32,809: 18:37:32 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 5.02s]
2018-04-06 18:37:32,810: 18:37:32 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 18:37:32,810: 18:37:32 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 18:37:32,810: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:37:32,810: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:37:32,815: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 18:37:32,820: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 18:37:32,821: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 18:37:32,821: Re-using an available connection from the pool.
2018-04-06 18:37:32,822: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 18:37:32,822: Re-using an available connection from the pool.
2018-04-06 18:37:33,471: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(ifnull(last_touch_shipping,0)) - sum(ifnull(last_touch_tax,0)) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:37:33,471: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 18:37:38,910: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f94a58>]}
2018-04-06 18:37:39,122: 18:37:39 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 6.10s]
2018-04-06 18:37:42,084: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621edd8>]}
2018-04-06 18:37:42,330: 18:37:42 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.27s]
2018-04-06 18:37:42,330: 18:37:42 | 41 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 18:37:42,330: 18:37:42 | 42 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 18:37:42,331: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:37:42,331: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:37:42,334: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 18:37:42,338: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 18:37:42,339: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 18:37:42,340: Re-using an available connection from the pool.
2018-04-06 18:37:42,341: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 18:37:42,342: Re-using an available connection from the pool.
2018-04-06 18:37:42,946: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 18:37:42,977: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 18:37:46,238: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b0860>]}
2018-04-06 18:37:46,419: 18:37:46 | 41 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.91s]
2018-04-06 18:37:47,273: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3f1828>]}
2018-04-06 18:37:47,457: 18:37:47 | 42 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 4.94s]
2018-04-06 18:37:47,457: 18:37:47 | 43 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 18:37:47,458: 18:37:47 | 44 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 18:37:47,458: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 18:37:47,458: 18:37:47 | 45 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 18:37:47,458: Compiling model.agency_data_pipeline.products_proc
2018-04-06 18:37:47,462: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 18:37:47,462: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 18:37:47,466: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 18:37:47,471: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 18:37:47,472: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 18:37:47,472: Re-using an available connection from the pool.
2018-04-06 18:37:47,473: Acquiring new bigquery connection "products_proc".
2018-04-06 18:37:47,473: Re-using an available connection from the pool.
2018-04-06 18:37:47,474: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 18:37:47,474: Re-using an available connection from the pool.
2018-04-06 18:37:48,117: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 18:37:48,118: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 18:37:48,147: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 18:37:50,311: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10901d2e8>]}
2018-04-06 18:37:50,498: 18:37:50 | 43 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.85s]
2018-04-06 18:37:55,720: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9a898>]}
2018-04-06 18:37:55,910: 18:37:55 | 44 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 8.26s]
2018-04-06 18:38:21,921: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3bd048>]}
2018-04-06 18:38:22,107: 18:38:22 | 45 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 34.46s]
2018-04-06 18:38:22,108: 18:38:22 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 18:38:22,108: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 18:38:22,112: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 18:38:22,112: 18:38:22 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 18:38:22,112: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:38:22,116: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 18:38:22,116: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 18:38:22,117: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 18:38:22,117: Re-using an available connection from the pool.
2018-04-06 18:38:22,117: Re-using an available connection from the pool.
2018-04-06 18:38:22,767: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 18:38:22,776: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 18:38:24,930: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071a20>]}
2018-04-06 18:38:25,520: 18:38:25 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.82s]
2018-04-06 18:38:26,032: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109049b00>]}
2018-04-06 18:38:26,227: 18:38:26 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 3.92s]
2018-04-06 18:38:26,227: 18:38:26 | 48 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 18:38:26,228: 18:38:26 | 49 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 18:38:26,228: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:38:26,228: 18:38:26 | 50 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 18:38:26,228: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:38:26,232: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 18:38:26,233: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 18:38:26,237: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 18:38:26,242: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 18:38:26,242: Acquiring new bigquery connection "agg_transaction".
2018-04-06 18:38:26,243: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 18:38:26,243: Re-using an available connection from the pool.
2018-04-06 18:38:26,243: Re-using an available connection from the pool.
2018-04-06 18:38:26,247: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 18:38:26,248: Re-using an available connection from the pool.
2018-04-06 18:38:26,810: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 18:38:26,835: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 18:38:26,887: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 18:38:30,049: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10901d320>]}
2018-04-06 18:38:30,237: 18:38:30 | 49 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 3.82s]
2018-04-06 18:38:33,337: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9a898>]}
2018-04-06 18:38:33,518: 18:38:33 | 50 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 7.10s]
2018-04-06 18:39:02,614: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071630>]}
2018-04-06 18:39:02,812: 18:39:02 | 48 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 36.39s]
2018-04-06 18:39:02,812: 18:39:02 | 51 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 18:39:02,812: 18:39:02 | 52 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 18:39:02,813: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:39:02,813: 18:39:02 | 53 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 18:39:02,813: 18:39:02 | 54 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 18:39:02,813: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 18:39:02,817: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 18:39:02,817: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:39:02,817: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:39:02,821: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 18:39:02,826: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 18:39:02,830: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 18:39:02,831: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 18:39:02,832: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 18:39:02,832: Re-using an available connection from the pool.
2018-04-06 18:39:02,832: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 18:39:02,833: Re-using an available connection from the pool.
2018-04-06 18:39:02,834: Re-using an available connection from the pool.
2018-04-06 18:39:02,837: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 18:39:02,837: Re-using an available connection from the pool.
2018-04-06 18:39:04,896: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 18:39:04,906: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 18:39:04,920: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 18:39:04,949: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 18:39:06,373: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fcd358>]}
2018-04-06 18:39:06,564: 18:39:06 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 3.56s]
2018-04-06 18:39:07,840: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108fcd470>]}
2018-04-06 18:39:08,030: 18:39:08 | 54 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 5.02s]
2018-04-06 18:39:09,343: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b41b828>]}
2018-04-06 18:39:09,531: 18:39:09 | 51 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 6.53s]
2018-04-06 18:39:32,015: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9a9e8>]}
2018-04-06 18:39:32,591: 18:39:32 | 53 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 29.20s]
2018-04-06 18:39:32,592: 18:39:32 | 55 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 18:39:32,592: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 18:39:32,596: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 18:39:32,596: 18:39:32 | 56 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 18:39:32,597: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:39:32,601: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 18:39:32,601: 18:39:32 | 57 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 18:39:32,601: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:39:32,606: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 18:39:32,607: Acquiring new bigquery connection "customers_proc".
2018-04-06 18:39:32,607: Re-using an available connection from the pool.
2018-04-06 18:39:32,608: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 18:39:32,609: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 18:39:32,609: Re-using an available connection from the pool.
2018-04-06 18:39:32,611: Re-using an available connection from the pool.
2018-04-06 18:39:33,123: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:39:33,228: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 18:39:33,242: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 18:39:44,983: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106213b38>]}
2018-04-06 18:39:45,170: 18:39:45 | 56 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products [CREATE TABLE in 12.39s]
2018-04-06 18:39:53,764: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621ee10>]}
2018-04-06 18:39:53,966: 18:39:53 | 57 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 21.16s]
2018-04-06 18:40:00,372: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b05f8>]}
2018-04-06 18:40:00,556: 18:40:00 | 55 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 27.78s]
2018-04-06 18:40:00,557: 18:40:00 | 58 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:40:00,557: 18:40:00 | 59 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:40:00,557: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:40:00,557: 18:40:00 | 60 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:40:00,557: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:40:00,562: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:40:00,562: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:40:00,566: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:40:00,570: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:40:00,572: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:40:00,573: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:40:00,573: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:40:00,573: Re-using an available connection from the pool.
2018-04-06 18:40:00,573: Re-using an available connection from the pool.
2018-04-06 18:40:00,574: Re-using an available connection from the pool.
2018-04-06 18:40:01,178: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:40:01,234: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:40:01,242: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:40:03,349: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9af60>]}
2018-04-06 18:40:03,547: 18:40:03 | 60 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.79s]
2018-04-06 18:40:05,574: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9afd0>]}
2018-04-06 18:40:05,766: 18:40:05 | 59 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 5.02s]
2018-04-06 18:40:09,952: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3a9e10>]}
2018-04-06 18:40:10,143: 18:40:10 | 58 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 9.40s]
2018-04-06 18:40:10,143: 18:40:10 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:40:10,143: 18:40:10 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:40:10,144: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:40:10,144: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:40:10,148: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:40:10,153: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:40:10,154: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:40:10,155: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:40:10,155: Re-using an available connection from the pool.
2018-04-06 18:40:10,155: Re-using an available connection from the pool.
2018-04-06 18:40:10,744: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:40:10,765: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:40:12,918: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f9af60>]}
2018-04-06 18:40:13,105: 18:40:13 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 2.77s]
2018-04-06 18:40:43,388: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b05f8>]}
2018-04-06 18:40:43,989: 18:40:43 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 33.24s]
2018-04-06 18:40:43,989: 18:40:43 | 63 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:40:43,990: 18:40:43 | 64 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:40:43,990: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:40:43,990: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:40:43,995: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:40:43,999: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:40:44,000: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:40:44,001: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:40:44,001: Re-using an available connection from the pool.
2018-04-06 18:40:44,001: Re-using an available connection from the pool.
2018-04-06 18:40:44,649: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:40:44,660: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:40:50,017: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071080>]}
2018-04-06 18:40:50,198: 18:40:50 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 6.03s]
2018-04-06 18:41:06,456: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3fa828>]}
2018-04-06 18:41:06,639: 18:41:06 | 63 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 22.47s]
2018-04-06 18:41:06,639: 18:41:06 | 65 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 18:41:06,639: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:41:06,644: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 18:41:06,639: 18:41:06 | 66 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 18:41:06,644: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:41:06,639: 18:41:06 | 67 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 18:41:06,648: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 18:41:06,639: 18:41:06 | 68 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 18:41:06,648: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:41:06,648: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:41:06,653: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 18:41:06,658: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 18:41:06,659: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 18:41:06,659: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 18:41:06,661: Re-using an available connection from the pool.
2018-04-06 18:41:06,664: Re-using an available connection from the pool.
2018-04-06 18:41:06,668: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 18:41:06,668: Re-using an available connection from the pool.
2018-04-06 18:41:06,670: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 18:41:06,673: Re-using an available connection from the pool.
2018-04-06 18:41:07,170: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 18:41:07,225: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 18:41:07,249: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 18:41:07,271: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 18:41:09,427: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b4240f0>]}
2018-04-06 18:41:09,613: 18:41:09 | 67 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.78s]
2018-04-06 18:41:09,613: 18:41:09 | 69 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 18:41:09,613: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:41:09,618: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 18:41:09,618: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 18:41:09,618: Re-using an available connection from the pool.
2018-04-06 18:41:10,228: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 18:41:10,454: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10623b5c0>]}
2018-04-06 18:41:10,498: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10b3b05f8>]}
2018-04-06 18:41:10,640: 18:41:10 | 68 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 3.81s]
2018-04-06 18:41:10,843: 18:41:10 | 65 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.86s]
2018-04-06 18:41:17,772: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10621e978>]}
2018-04-06 18:41:17,962: 18:41:17 | 69 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 8.16s]
2018-04-06 18:41:19,024: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106215278>]}
2018-04-06 18:41:19,209: 18:41:19 | 66 of 75 OK created table model agency_data_pipeline.segment_stats_customers [CREATE TABLE in 12.38s]
2018-04-06 18:41:19,210: 18:41:19 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 18:41:19,210: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 18:41:19,214: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 18:41:19,214: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 18:41:19,215: Re-using an available connection from the pool.
2018-04-06 18:41:19,795: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 18:41:58,743: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071400>]}
2018-04-06 18:41:59,403: 18:41:59 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 39.53s]
2018-04-06 18:41:59,404: 18:41:59 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 18:41:59,404: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:41:59,409: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 18:41:59,409: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 18:41:59,409: Re-using an available connection from the pool.
2018-04-06 18:42:00,067: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 18:42:16,305: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062156d8>]}
2018-04-06 18:42:16,491: 18:42:16 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 16.90s]
2018-04-06 18:42:16,491: 18:42:16 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 18:42:16,492: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 18:42:16,496: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 18:42:16,497: Acquiring new bigquery connection "growth_date_union".
2018-04-06 18:42:16,497: Re-using an available connection from the pool.
2018-04-06 18:42:17,173: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 18:42:18,264: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071400>]}
2018-04-06 18:42:18,448: 18:42:18 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 1.77s]
2018-04-06 18:42:18,449: 18:42:18 | 73 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 18:42:18,449: 18:42:18 | 74 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 18:42:18,449: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 18:42:18,449: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 18:42:18,461: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 18:42:18,461: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 18:42:18,463: Acquiring new bigquery connection "retention_stats".
2018-04-06 18:42:18,463: Re-using an available connection from the pool.
2018-04-06 18:42:18,464: Acquiring new bigquery connection "growth_stats".
2018-04-06 18:42:18,464: Re-using an available connection from the pool.
2018-04-06 18:42:19,095: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 18:42:19,108: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 18:42:20,192: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10902def0>]}
2018-04-06 18:42:20,376: 18:42:20 | 73 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.74s]
2018-04-06 18:42:25,589: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10623bba8>]}
2018-04-06 18:42:25,777: 18:42:25 | 74 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 7.14s]
2018-04-06 18:42:25,778: 18:42:25 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 18:42:25,778: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 18:42:25,782: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 18:42:25,784: Acquiring new bigquery connection "agg_campaign".
2018-04-06 18:42:25,784: Re-using an available connection from the pool.
2018-04-06 18:42:26,383: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:42:36,122: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b898e6d2-d22b-4002-be42-fa01bf0d38e3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x109071400>]}
2018-04-06 18:42:36,309: 18:42:36 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 10.34s]
2018-04-06 18:42:36,340: 18:42:36 | 
2018-04-06 18:42:36,340: 18:42:36 | Finished running 75 table models in 373.35s.
2018-04-06 18:42:36,341: Connection 'master' was left open.
2018-04-06 18:42:36,341: 
2018-04-06 18:42:36,341: Completed successfully
2018-04-06 18:42:36,341: 
Done. PASS=75 ERROR=0 SKIP=0 TOTAL=75
2018-04-06 18:42:36,341: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f36da0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f36b38>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108f36d68>]}
2018-04-06 18:42:36,525: Flushing usage events
2018-04-06 18:55:26,698: Tracking: tracking
2018-04-06 18:55:26,739: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c018f98>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c018fd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c018b38>]}
2018-04-06 18:55:27,711: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 18:55:27,737: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 18:55:27,766: Parsing get_column_values.sql
2018-04-06 18:55:27,805: Parsing get_url_parameter.sql
2018-04-06 18:55:27,810: Parsing split_part.sql
2018-04-06 18:55:27,816: Parsing table_exists.sql
2018-04-06 18:55:27,833: Parsing core.sql
2018-04-06 18:55:27,901: Parsing adapters/bigquery.sql
2018-04-06 18:55:27,905: Parsing adapters/common.sql
2018-04-06 18:55:27,919: Parsing adapters/postgres.sql
2018-04-06 18:55:27,922: Parsing adapters/redshift.sql
2018-04-06 18:55:27,944: Parsing etc/get_custom_schema.sql
2018-04-06 18:55:27,957: Parsing materializations/archive.sql
2018-04-06 18:55:27,993: Parsing materializations/bigquery.sql
2018-04-06 18:55:28,009: Parsing materializations/helpers.sql
2018-04-06 18:55:28,045: Parsing materializations/incremental.sql
2018-04-06 18:55:28,073: Parsing materializations/table.sql
2018-04-06 18:55:28,091: Parsing materializations/view.sql
2018-04-06 18:55:28,121: Parsing materializations/wrapper.sql
2018-04-06 18:55:28,167: Parsing schema_tests/accepted_values.sql
2018-04-06 18:55:28,181: Parsing schema_tests/not_null.sql
2018-04-06 18:55:28,184: Parsing schema_tests/relationships.sql
2018-04-06 18:55:28,198: Parsing schema_tests/unique.sql
2018-04-06 18:55:28,770: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 18:55:28,772: Parsing model.agency_data_pipeline.all_dates
2018-04-06 18:55:28,773: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 18:55:28,775: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 18:55:28,780: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:55:28,783: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:55:28,785: Acquiring new bigquery connection "master".
2018-04-06 18:55:28,786: Opening a new connection (0 currently allocated)
2018-04-06 18:55:28,819: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 18:55:28,821: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 18:55:28,823: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:55:28,825: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 18:55:28,828: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:55:28,830: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 18:55:28,833: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 18:55:28,835: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 18:55:28,837: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:55:28,841: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:55:28,844: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:55:28,846: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:55:28,848: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 18:55:28,854: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 18:55:28,860: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:55:28,865: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:55:28,871: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:55:28,873: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 18:55:28,875: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 18:55:28,886: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 18:55:28,895: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:55:28,897: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:55:28,900: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:55:28,905: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:55:28,912: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:55:28,919: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:55:28,924: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 18:55:28,927: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 18:55:28,929: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:55:28,931: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:55:28,934: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 18:55:28,936: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 18:55:28,938: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:55:28,940: Parsing model.agency_data_pipeline.agg_products
2018-04-06 18:55:28,942: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 18:55:28,946: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:55:28,948: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:55:28,950: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:55:28,953: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:55:28,955: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:55:28,958: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:55:28,962: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 18:55:28,965: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 18:55:28,968: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 18:55:28,972: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 18:55:28,974: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 18:55:28,978: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 18:55:28,980: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:55:28,982: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 18:55:28,984: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 18:55:28,986: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 18:55:28,989: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 18:55:28,991: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:55:28,993: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 18:55:28,995: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 18:55:28,997: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:55:28,999: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 18:55:29,001: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:55:29,003: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:55:29,005: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 18:55:29,007: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:55:29,010: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:55:29,012: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:55:29,015: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 18:55:29,017: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 18:55:29,018: Parsing model.agency_data_pipeline.products_proc
2018-04-06 18:55:29,021: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:55:29,022: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 18:55:29,024: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:55:29,043: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 18:55:29,069: 
2018-04-06 18:55:30,354: 18:55:30 | Concurrency: 4 threads (target='prod')
2018-04-06 18:55:30,354: 18:55:30 | 
2018-04-06 18:55:30,956: 18:55:30 | 1 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 18:55:30,956: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 18:55:30,956: 18:55:30 | 2 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 18:55:30,961: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 18:55:30,956: 18:55:30 | 3 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 18:55:30,961: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 18:55:30,956: 18:55:30 | 4 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 18:55:30,961: Compiling model.agency_data_pipeline.all_dates
2018-04-06 18:55:30,965: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 18:55:30,965: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 18:55:30,969: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 18:55:30,969: Acquiring new bigquery connection "carts_proc".
2018-04-06 18:55:30,974: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 18:55:30,975: Opening a new connection (1 currently allocated)
2018-04-06 18:55:31,038: Acquiring new bigquery connection "all_dates".
2018-04-06 18:55:31,038: Opening a new connection (2 currently allocated)
2018-04-06 18:55:31,040: Acquiring new bigquery connection "adwords_urls".
2018-04-06 18:55:31,044: Acquiring new bigquery connection "ga_conversions".
2018-04-06 18:55:31,044: Opening a new connection (3 currently allocated)
2018-04-06 18:55:31,048: Opening a new connection (4 currently allocated)
2018-04-06 18:55:32,021: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 18:55:32,038: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 18:55:32,065: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 18:55:32,101: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 18:55:33,137: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9f28>]}
2018-04-06 18:55:33,355: 18:55:33 | 3 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 2.18s]
2018-04-06 18:55:33,356: 18:55:33 | 5 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 18:55:33,356: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 18:55:33,361: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 18:55:33,362: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 18:55:33,362: Re-using an available connection from the pool.
2018-04-06 18:55:34,070: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 18:55:34,207: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c277e48>]}
2018-04-06 18:55:34,251: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d7278>]}
2018-04-06 18:55:34,301: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e662a90>]}
2018-04-06 18:55:34,474: 18:55:34 | 2 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 3.25s]
2018-04-06 18:55:34,475: 18:55:34 | 6 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 18:55:34,476: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 18:55:34,480: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 18:55:34,482: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 18:55:34,482: Re-using an available connection from the pool.
2018-04-06 18:55:34,681: 18:55:34 | 4 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 3.29s]
2018-04-06 18:55:34,682: 18:55:34 | 7 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 18:55:34,682: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 18:55:34,686: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 18:55:34,687: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 18:55:34,689: Re-using an available connection from the pool.
2018-04-06 18:55:34,878: 18:55:34 | 1 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 3.34s]
2018-04-06 18:55:34,878: 18:55:34 | 8 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 18:55:34,879: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 18:55:34,884: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 18:55:34,884: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 18:55:34,884: Re-using an available connection from the pool.
2018-04-06 18:55:35,151: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 18:55:35,302: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 18:55:35,562: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 18:55:36,255: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e662e80>]}
2018-04-06 18:55:36,485: 18:55:36 | 6 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 1.78s]
2018-04-06 18:55:36,486: 18:55:36 | 9 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 18:55:36,486: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 18:55:36,490: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 18:55:36,532: Acquiring new bigquery connection "clients_proc".
2018-04-06 18:55:36,532: Re-using an available connection from the pool.
2018-04-06 18:55:37,221: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 18:55:37,485: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6622b0>]}
2018-04-06 18:55:37,673: 18:55:37 | 7 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.80s]
2018-04-06 18:55:37,674: 18:55:37 | 10 of 75 START table model agency_data_pipeline.accounts_proc........ [RUN]
2018-04-06 18:55:37,674: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 18:55:37,682: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 18:55:37,684: Acquiring new bigquery connection "accounts_proc".
2018-04-06 18:55:37,684: Re-using an available connection from the pool.
2018-04-06 18:55:37,798: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68dda0>]}
2018-04-06 18:55:37,988: 18:55:37 | 8 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 2.92s]
2018-04-06 18:55:37,988: 18:55:37 | 11 of 75 START table model agency_data_pipeline.monthend_dates....... [RUN]
2018-04-06 18:55:37,989: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 18:55:37,996: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 18:55:37,997: Acquiring new bigquery connection "monthend_dates".
2018-04-06 18:55:37,998: Re-using an available connection from the pool.
2018-04-06 18:55:38,303: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 18:55:38,313: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb9b0>]}
2018-04-06 18:55:38,502: 18:55:38 | 9 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 1.83s]
2018-04-06 18:55:38,503: 18:55:38 | 12 of 75 START table model agency_data_pipeline.conversion_goals_proc [RUN]
2018-04-06 18:55:38,503: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 18:55:38,507: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 18:55:38,508: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 18:55:38,508: Re-using an available connection from the pool.
2018-04-06 18:55:38,691: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 18:55:39,118: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 18:55:39,394: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb8d0>]}
2018-04-06 18:55:39,585: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9f28>]}
2018-04-06 18:55:39,587: 18:55:39 | 10 of 75 OK created table model agency_data_pipeline.accounts_proc... [CREATE TABLE in 1.72s]
2018-04-06 18:55:39,775: 18:55:39 | 5 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 6.23s]
2018-04-06 18:55:40,854: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6be320>]}
2018-04-06 18:55:41,047: 18:55:41 | 11 of 75 OK created table model agency_data_pipeline.monthend_dates.. [CREATE TABLE in 2.87s]
2018-04-06 18:55:41,285: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e69a208>]}
2018-04-06 18:55:41,469: 18:55:41 | 12 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.78s]
2018-04-06 18:55:41,470: 18:55:41 | 13 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 18:55:41,470: 18:55:41 | 14 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 18:55:41,470: 18:55:41 | 15 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 18:55:41,470: 18:55:41 | 16 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 18:55:41,470: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 18:55:41,470: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 18:55:41,470: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 18:55:41,470: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 18:55:41,477: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 18:55:41,482: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 18:55:41,487: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 18:55:41,494: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 18:55:41,494: Re-using an available connection from the pool.
2018-04-06 18:55:41,495: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:41,495: Re-using an available connection from the pool.
2018-04-06 18:55:41,495: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:41,496: Re-using an available connection from the pool.
2018-04-06 18:55:41,496: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:41,496: Re-using an available connection from the pool.
2018-04-06 18:55:41,500: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:42,803: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 18:55:42,876: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 18:55:43,078: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 18:55:43,212: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 18:55:43,667: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 18:55:43,681: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 18:55:43,727: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 18:55:44,118: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 18:55:45,868: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68dbe0>]}
2018-04-06 18:55:46,064: 18:55:46 | 15 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 4.40s]
2018-04-06 18:55:46,064: 18:55:46 | 17 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 18:55:46,065: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 18:55:46,069: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 18:55:46,070: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 18:55:46,070: Re-using an available connection from the pool.
2018-04-06 18:55:46,315: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9f28>]}
2018-04-06 18:55:46,498: 18:55:46 | 13 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.85s]
2018-04-06 18:55:46,498: 18:55:46 | 18 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 18:55:46,498: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 18:55:46,503: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 18:55:46,503: Acquiring new bigquery connection "adwords_ads".
2018-04-06 18:55:46,504: Re-using an available connection from the pool.
2018-04-06 18:55:46,698: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 18:55:46,940: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e69a208>]}
2018-04-06 18:55:47,085: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 18:55:47,124: 18:55:47 | 16 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 5.47s]
2018-04-06 18:55:47,125: 18:55:47 | 19 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 18:55:47,125: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 18:55:47,130: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 18:55:47,131: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 18:55:47,131: Re-using an available connection from the pool.
2018-04-06 18:55:47,727: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 18:55:48,924: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68dbe0>]}
2018-04-06 18:55:49,112: 18:55:49 | 17 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.86s]
2018-04-06 18:55:49,113: 18:55:49 | 20 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 18:55:49,113: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 18:55:49,117: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 18:55:49,118: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 18:55:49,118: Re-using an available connection from the pool.
2018-04-06 18:55:49,233: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb7f0>]}
2018-04-06 18:55:49,313: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9f28>]}
2018-04-06 18:55:49,423: 18:55:49 | 14 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 7.76s]
2018-04-06 18:55:49,613: 18:55:49 | 18 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.82s]
2018-04-06 18:55:49,769: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 18:55:49,925: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e659320>]}
2018-04-06 18:55:50,117: 18:55:50 | 19 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.80s]
2018-04-06 18:55:54,167: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68dbe0>]}
2018-04-06 18:55:54,488: 18:55:54 | 20 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 5.05s]
2018-04-06 18:55:54,489: 18:55:54 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 18:55:54,489: 18:55:54 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 18:55:54,489: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 18:55:54,489: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 18:55:54,497: Acquiring new bigquery connection "fb_ads".
2018-04-06 18:55:54,504: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 18:55:54,504: Re-using an available connection from the pool.
2018-04-06 18:55:54,504: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:54,505: Re-using an available connection from the pool.
2018-04-06 18:55:54,505: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:55:54,866: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 18:55:54,870: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 18:55:55,542: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 18:55:55,574: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 18:55:57,722: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c29edd8>]}
2018-04-06 18:55:57,911: 18:55:57 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.23s]
2018-04-06 18:56:01,020: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c118dd8>]}
2018-04-06 18:56:01,210: 18:56:01 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.53s]
2018-04-06 18:56:01,211: 18:56:01 | 23 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 18:56:01,211: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 18:56:01,215: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 18:56:01,211: 18:56:01 | 24 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 18:56:01,215: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 18:56:01,211: 18:56:01 | 25 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 18:56:01,220: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 18:56:01,211: 18:56:01 | 26 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 18:56:01,220: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 18:56:01,220: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 18:56:01,228: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 18:56:01,229: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 18:56:01,241: Re-using an available connection from the pool.
2018-04-06 18:56:01,241: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 18:56:01,242: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 18:56:01,242: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:01,243: Re-using an available connection from the pool.
2018-04-06 18:56:01,244: Re-using an available connection from the pool.
2018-04-06 18:56:01,245: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:01,252: Re-using an available connection from the pool.
2018-04-06 18:56:01,614: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 18:56:01,628: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 18:56:01,917: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 18:56:01,918: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 18:56:02,290: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 18:56:02,412: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 18:56:04,125: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fdeb8>]}
2018-04-06 18:56:04,320: 18:56:04 | 23 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.91s]
2018-04-06 18:56:04,320: 18:56:04 | 27 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 18:56:04,320: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 18:56:04,331: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 18:56:04,332: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 18:56:04,333: Re-using an available connection from the pool.
2018-04-06 18:56:04,967: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
lower(a.source) source,
lower(a.medium) medium,
lower(campaign) campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( lower(a.source) = c.source
  AND lower(a.medium) = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 18:56:06,243: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c277898>]}
2018-04-06 18:56:06,429: 18:56:06 | 24 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 5.03s]
2018-04-06 18:56:06,659: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6596d8>]}
2018-04-06 18:56:06,850: 18:56:06 | 26 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 5.44s]
2018-04-06 18:56:11,469: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d70f0>]}
2018-04-06 18:56:11,657: 18:56:11 | 27 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 7.15s]
2018-04-06 18:56:16,507: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6c79b0>]}
2018-04-06 18:56:16,692: 18:56:16 | 25 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 15.29s]
2018-04-06 18:56:16,693: 18:56:16 | 28 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 18:56:16,693: 18:56:16 | 29 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 18:56:16,693: 18:56:16 | 30 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 18:56:16,693: 18:56:16 | 31 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 18:56:16,693: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 18:56:16,693: Compiling model.agency_data_pipeline.agg_products
2018-04-06 18:56:16,693: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 18:56:16,693: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 18:56:16,704: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 18:56:16,708: Acquiring new bigquery connection "ga_traffic".
2018-04-06 18:56:16,713: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 18:56:16,717: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 18:56:16,718: Re-using an available connection from the pool.
2018-04-06 18:56:16,718: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:16,719: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 18:56:16,719: Re-using an available connection from the pool.
2018-04-06 18:56:16,720: Acquiring new bigquery connection "adwords_join".
2018-04-06 18:56:16,720: Re-using an available connection from the pool.
2018-04-06 18:56:16,724: Acquiring new bigquery connection "agg_products".
2018-04-06 18:56:16,726: Re-using an available connection from the pool.
2018-04-06 18:56:17,406: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 18:56:17,412: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 18:56:17,511: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 18:56:17,957: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:18,505: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e659630>]}
2018-04-06 18:56:18,706: 18:56:18 | 29 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 1.81s]
2018-04-06 18:56:18,706: 18:56:18 | 32 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 18:56:18,706: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 18:56:18,723: Acquiring new bigquery connection "ga_transactions".
2018-04-06 18:56:18,723: Re-using an available connection from the pool.
2018-04-06 18:56:18,723: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:19,281: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 18:56:20,000: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 18:56:20,211: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 18:56:20,679: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e670c88>]}
2018-04-06 18:56:20,719: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 18:56:20,883: 18:56:20 | 30 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 3.99s]
2018-04-06 18:56:21,394: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 18:56:24,063: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c131630>]}
2018-04-06 18:56:24,251: 18:56:24 | 31 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 7.37s]
2018-04-06 18:56:26,902: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e659630>]}
2018-04-06 18:56:27,165: 18:56:27 | 32 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.20s]
2018-04-06 18:56:31,446: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6befd0>]}
2018-04-06 18:56:32,044: 18:56:32 | 28 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 14.75s]
2018-04-06 18:56:32,045: 18:56:32 | 33 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 18:56:32,045: 18:56:32 | 34 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 18:56:32,045: 18:56:32 | 35 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 18:56:32,045: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 18:56:32,045: 18:56:32 | 36 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 18:56:32,045: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 18:56:32,045: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 18:56:32,050: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 18:56:32,050: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 18:56:32,055: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 18:56:32,059: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 18:56:32,064: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 18:56:32,123: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 18:56:32,123: Acquiring new bigquery connection "adwords_stats".
2018-04-06 18:56:32,124: Re-using an available connection from the pool.
2018-04-06 18:56:32,124: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 18:56:32,125: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 18:56:32,125: Re-using an available connection from the pool.
2018-04-06 18:56:32,126: Re-using an available connection from the pool.
2018-04-06 18:56:32,127: Re-using an available connection from the pool.
2018-04-06 18:56:32,740: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 18:56:32,747: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 18:56:32,759: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 18:56:32,798: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 18:56:33,840: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c2b00>]}
2018-04-06 18:56:34,062: 18:56:34 | 35 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 1.79s]
2018-04-06 18:56:34,062: 18:56:34 | 37 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 18:56:34,062: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 18:56:34,067: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 18:56:34,075: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 18:56:34,075: Re-using an available connection from the pool.
2018-04-06 18:56:34,697: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 18:56:34,922: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68d908>]}
2018-04-06 18:56:35,112: 18:56:35 | 34 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.88s]
2018-04-06 18:56:36,867: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c2b00>]}
2018-04-06 18:56:37,060: 18:56:37 | 37 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.80s]
2018-04-06 18:56:37,121: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6be5c0>]}
2018-04-06 18:56:37,312: 18:56:37 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 5.07s]
2018-04-06 18:56:39,254: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c118dd8>]}
2018-04-06 18:56:39,442: 18:56:39 | 33 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 7.21s]
2018-04-06 18:56:39,442: 18:56:39 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 18:56:39,442: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 18:56:39,449: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 18:56:39,502: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 18:56:39,502: Re-using an available connection from the pool.
2018-04-06 18:56:40,133: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 18:56:44,471: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68d198>]}
2018-04-06 18:56:44,656: 18:56:44 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 5.03s]
2018-04-06 18:56:44,657: 18:56:44 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 18:56:44,657: 18:56:44 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 18:56:44,657: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 18:56:44,657: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 18:56:44,662: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 18:56:44,667: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 18:56:44,710: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 18:56:44,711: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 18:56:44,711: Re-using an available connection from the pool.
2018-04-06 18:56:44,711: Re-using an available connection from the pool.
2018-04-06 18:56:45,358: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 18:56:45,414: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(ifnull(last_touch_shipping,0)) - sum(ifnull(last_touch_tax,0)) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 18:56:49,684: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e68d160>]}
2018-04-06 18:56:49,867: 18:56:49 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 5.03s]
2018-04-06 18:56:54,076: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e69cd30>]}
2018-04-06 18:56:54,261: 18:56:54 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.42s]
2018-04-06 18:56:54,262: 18:56:54 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 18:56:54,262: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 18:56:54,262: 18:56:54 | 42 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 18:56:54,266: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 18:56:54,266: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 18:56:54,270: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 18:56:54,314: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 18:56:54,314: Re-using an available connection from the pool.
2018-04-06 18:56:54,315: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 18:56:54,316: Re-using an available connection from the pool.
2018-04-06 18:56:54,888: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 18:56:54,954: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 18:56:58,134: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c124358>]}
2018-04-06 18:56:58,321: 18:56:58 | 42 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.87s]
2018-04-06 18:56:59,343: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6bef98>]}
2018-04-06 18:56:59,529: 18:56:59 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 5.08s]
2018-04-06 18:56:59,529: 18:56:59 | 43 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 18:56:59,529: 18:56:59 | 44 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 18:56:59,530: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 18:56:59,530: 18:56:59 | 45 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 18:56:59,530: Compiling model.agency_data_pipeline.products_proc
2018-04-06 18:56:59,535: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 18:56:59,535: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 18:56:59,539: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 18:56:59,543: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 18:56:59,588: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 18:56:59,588: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 18:56:59,588: Re-using an available connection from the pool.
2018-04-06 18:56:59,590: Re-using an available connection from the pool.
2018-04-06 18:56:59,591: Acquiring new bigquery connection "products_proc".
2018-04-06 18:56:59,591: Re-using an available connection from the pool.
2018-04-06 18:57:00,168: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 18:57:00,201: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 18:57:00,273: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 18:57:03,423: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d7da0>]}
2018-04-06 18:57:03,613: 18:57:03 | 45 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 3.89s]
2018-04-06 18:57:06,715: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c114080>]}
2018-04-06 18:57:06,901: 18:57:06 | 44 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 7.19s]
2018-04-06 18:57:34,058: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fda20>]}
2018-04-06 18:57:34,719: 18:57:34 | 43 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 34.53s]
2018-04-06 18:57:34,738: 18:57:34 | 46 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 18:57:34,738: 18:57:34 | 47 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 18:57:34,738: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 18:57:34,738: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 18:57:34,742: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 18:57:34,746: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 18:57:34,747: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 18:57:34,747: Re-using an available connection from the pool.
2018-04-06 18:57:34,748: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 18:57:34,748: Re-using an available connection from the pool.
2018-04-06 18:57:35,379: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 18:57:35,411: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 18:57:37,535: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fd898>]}
2018-04-06 18:57:37,577: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c2668>]}
2018-04-06 18:57:37,724: 18:57:37 | 47 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.80s]
2018-04-06 18:57:37,913: 18:57:37 | 46 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.84s]
2018-04-06 18:57:37,913: 18:57:37 | 48 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 18:57:37,914: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 18:57:37,913: 18:57:37 | 49 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 18:57:37,918: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 18:57:37,913: 18:57:37 | 50 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 18:57:37,919: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 18:57:37,919: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 18:57:37,923: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 18:57:37,929: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 18:57:37,930: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 18:57:37,931: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 18:57:37,931: Re-using an available connection from the pool.
2018-04-06 18:57:37,932: Re-using an available connection from the pool.
2018-04-06 18:57:37,932: Acquiring new bigquery connection "agg_transaction".
2018-04-06 18:57:37,933: Re-using an available connection from the pool.
2018-04-06 18:57:38,505: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 18:57:38,562: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 18:57:38,570: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 18:57:40,666: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e670128>]}
2018-04-06 18:57:40,867: 18:57:40 | 50 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 2.75s]
2018-04-06 18:57:45,013: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb2b0>]}
2018-04-06 18:57:45,215: 18:57:45 | 49 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 7.09s]
2018-04-06 18:58:12,209: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c26d8>]}
2018-04-06 18:58:12,433: 18:58:12 | 48 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 34.30s]
2018-04-06 18:58:12,433: 18:58:12 | 51 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 18:58:12,433: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 18:58:12,437: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 18:58:12,438: 18:58:12 | 52 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 18:58:12,438: 18:58:12 | 53 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 18:58:12,438: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 18:58:12,438: 18:58:12 | 54 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 18:58:12,438: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 18:58:12,444: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 18:58:12,444: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 18:58:12,445: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 18:58:12,449: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 18:58:12,453: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 18:58:12,454: Re-using an available connection from the pool.
2018-04-06 18:58:12,469: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 18:58:12,470: Re-using an available connection from the pool.
2018-04-06 18:58:12,474: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 18:58:12,474: Re-using an available connection from the pool.
2018-04-06 18:58:12,481: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 18:58:12,481: Re-using an available connection from the pool.
2018-04-06 18:58:13,104: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 18:58:13,109: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 18:58:13,116: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 18:58:13,118: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 18:58:15,270: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c2668>]}
2018-04-06 18:58:15,296: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0fd3c8>]}
2018-04-06 18:58:15,460: 18:58:15 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.84s]
2018-04-06 18:58:15,652: 18:58:15 | 53 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.86s]
2018-04-06 18:58:17,459: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c277e80>]}
2018-04-06 18:58:17,646: 18:58:17 | 54 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 5.01s]
2018-04-06 18:58:39,036: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c131d30>]}
2018-04-06 18:58:39,608: 18:58:39 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 26.60s]
2018-04-06 18:58:39,609: 18:58:39 | 55 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 18:58:39,609: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 18:58:39,614: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 18:58:39,609: 18:58:39 | 56 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 18:58:39,614: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 18:58:39,618: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 18:58:39,609: 18:58:39 | 57 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 18:58:39,619: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 18:58:39,623: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 18:58:39,656: Acquiring new bigquery connection "customers_proc".
2018-04-06 18:58:39,657: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 18:58:39,657: Re-using an available connection from the pool.
2018-04-06 18:58:39,658: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 18:58:39,659: Re-using an available connection from the pool.
2018-04-06 18:58:39,663: Re-using an available connection from the pool.
2018-04-06 18:58:40,288: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 18:58:40,341: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 18:58:40,357: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 18:58:50,103: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0fd208>]}
2018-04-06 18:58:50,297: 18:58:50 | 56 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products [CREATE TABLE in 10.49s]
2018-04-06 18:59:02,153: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2c2400>]}
2018-04-06 18:59:02,341: 18:59:02 | 57 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 22.53s]
2018-04-06 18:59:10,962: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0fd668>]}
2018-04-06 18:59:11,145: 18:59:11 | 55 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 31.35s]
2018-04-06 18:59:11,146: 18:59:11 | 58 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 18:59:11,146: 18:59:11 | 59 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 18:59:11,146: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 18:59:11,146: 18:59:11 | 60 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 18:59:11,146: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 18:59:11,151: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 18:59:11,151: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 18:59:11,155: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 18:59:11,159: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 18:59:11,223: Acquiring new bigquery connection "retention_0_365".
2018-04-06 18:59:11,224: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 18:59:11,224: Acquiring new bigquery connection "retention_365_730".
2018-04-06 18:59:11,224: Re-using an available connection from the pool.
2018-04-06 18:59:11,225: Re-using an available connection from the pool.
2018-04-06 18:59:11,227: Re-using an available connection from the pool.
2018-04-06 18:59:13,370: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:59:13,385: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:59:13,436: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 18:59:16,348: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c277f60>]}
2018-04-06 18:59:16,532: 18:59:16 | 60 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 5.20s]
2018-04-06 18:59:17,791: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb8d0>]}
2018-04-06 18:59:17,989: 18:59:17 | 59 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 6.64s]
2018-04-06 18:59:22,200: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c131d30>]}
2018-04-06 18:59:22,384: 18:59:22 | 58 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 11.05s]
2018-04-06 18:59:22,384: 18:59:22 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 18:59:22,385: 18:59:22 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 18:59:22,385: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 18:59:22,385: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 18:59:22,389: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 18:59:22,394: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 18:59:22,395: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 18:59:22,395: Re-using an available connection from the pool.
2018-04-06 18:59:22,396: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 18:59:22,396: Re-using an available connection from the pool.
2018-04-06 18:59:24,513: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 18:59:24,534: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	else 'Existing Customer, Below-median RF' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 18:59:27,487: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e668898>]}
2018-04-06 18:59:27,684: 18:59:27 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 5.10s]
2018-04-06 18:59:52,400: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e659908>]}
2018-04-06 18:59:53,097: 18:59:53 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 30.02s]
2018-04-06 18:59:53,098: 18:59:53 | 63 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 18:59:53,098: 18:59:53 | 64 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 18:59:53,098: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 18:59:53,098: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 18:59:53,103: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 18:59:53,107: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 18:59:53,108: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 18:59:53,109: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 18:59:53,109: Re-using an available connection from the pool.
2018-04-06 18:59:53,109: Re-using an available connection from the pool.
2018-04-06 18:59:53,761: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 18:59:53,815: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 18:59:58,092: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d7d68>]}
2018-04-06 18:59:58,288: 18:59:58 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 4.99s]
2018-04-06 19:00:17,715: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb278>]}
2018-04-06 19:00:17,927: 19:00:17 | 63 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 24.62s]
2018-04-06 19:00:17,927: 19:00:17 | 65 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 19:00:17,928: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 19:00:17,932: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 19:00:17,928: 19:00:17 | 66 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 19:00:17,933: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 19:00:17,938: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 19:00:17,928: 19:00:17 | 67 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 19:00:17,938: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 19:00:17,942: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 19:00:17,928: 19:00:17 | 68 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 19:00:17,942: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 19:00:17,948: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 19:00:17,950: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 19:00:17,951: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 19:00:17,951: Re-using an available connection from the pool.
2018-04-06 19:00:17,954: Re-using an available connection from the pool.
2018-04-06 19:00:17,960: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 19:00:17,960: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 19:00:17,963: Re-using an available connection from the pool.
2018-04-06 19:00:17,965: Re-using an available connection from the pool.
2018-04-06 19:00:18,606: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 19:00:18,635: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 19:00:18,644: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 19:00:18,678: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 19:00:20,798: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e69b860>]}
2018-04-06 19:00:20,984: 19:00:20 | 68 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.86s]
2018-04-06 19:00:20,984: 19:00:20 | 69 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 19:00:20,984: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 19:00:20,991: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 19:00:20,992: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 19:00:20,992: Re-using an available connection from the pool.
2018-04-06 19:00:21,655: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 19:00:21,858: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2d79e8>]}
2018-04-06 19:00:22,052: 19:00:22 | 66 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.92s]
2018-04-06 19:00:23,825: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6592e8>]}
2018-04-06 19:00:24,015: 19:00:24 | 69 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 2.84s]
2018-04-06 19:00:27,343: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c130f28>]}
2018-04-06 19:00:27,538: 19:00:27 | 65 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 9.42s]
2018-04-06 19:00:33,885: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6a2f28>]}
2018-04-06 19:00:34,112: 19:00:34 | 67 of 75 OK created table model agency_data_pipeline.segment_stats_customers [CREATE TABLE in 15.95s]
2018-04-06 19:00:34,113: 19:00:34 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 19:00:34,113: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 19:00:34,118: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 19:00:34,132: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 19:00:34,132: Re-using an available connection from the pool.
2018-04-06 19:00:34,810: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 19:01:13,993: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c130320>]}
2018-04-06 19:01:14,703: 19:01:14 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 39.88s]
2018-04-06 19:01:14,703: 19:01:14 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 19:01:14,704: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 19:01:14,709: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 19:01:14,710: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 19:01:14,710: Re-using an available connection from the pool.
2018-04-06 19:01:15,459: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 19:01:31,780: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6a2f28>]}
2018-04-06 19:01:32,003: 19:01:32 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 17.08s]
2018-04-06 19:01:32,004: 19:01:32 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 19:01:32,004: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 19:01:32,010: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 19:01:32,011: Acquiring new bigquery connection "growth_date_union".
2018-04-06 19:01:32,011: Re-using an available connection from the pool.
2018-04-06 19:01:32,770: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 19:01:34,952: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6be198>]}
2018-04-06 19:01:35,151: 19:01:35 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 2.95s]
2018-04-06 19:01:35,152: 19:01:35 | 73 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 19:01:35,152: 19:01:35 | 74 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 19:01:35,152: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 19:01:35,152: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 19:01:35,159: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 19:01:35,166: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 19:01:35,168: Acquiring new bigquery connection "retention_stats".
2018-04-06 19:01:35,168: Acquiring new bigquery connection "growth_stats".
2018-04-06 19:01:35,169: Re-using an available connection from the pool.
2018-04-06 19:01:35,169: Re-using an available connection from the pool.
2018-04-06 19:01:35,824: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 19:01:35,933: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 19:01:36,902: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e6a2f28>]}
2018-04-06 19:01:37,099: 19:01:37 | 73 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.75s]
2018-04-06 19:01:42,476: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c1282b0>]}
2018-04-06 19:01:42,677: 19:01:42 | 74 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 7.32s]
2018-04-06 19:01:42,678: 19:01:42 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 19:01:42,678: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 19:01:42,683: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 19:01:42,684: Acquiring new bigquery connection "agg_campaign".
2018-04-06 19:01:42,684: Re-using an available connection from the pool.
2018-04-06 19:01:43,429: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 19:01:56,493: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '1c0b1fa0-715e-45ec-b248-f4dce4e43915', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c2fb1d0>]}
2018-04-06 19:01:56,678: 19:01:56 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 13.82s]
2018-04-06 19:01:56,754: 19:01:56 | 
2018-04-06 19:01:56,754: 19:01:56 | Finished running 75 table models in 386.40s.
2018-04-06 19:01:56,754: Connection 'master' was left open.
2018-04-06 19:01:56,755: 
2018-04-06 19:01:56,755: Completed successfully
2018-04-06 19:01:56,755: 
Done. PASS=75 ERROR=0 SKIP=0 TOTAL=75
2018-04-06 19:01:56,756: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9ba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10c0d9dd8>]}
2018-04-06 19:01:56,943: Flushing usage events
2018-04-06 20:13:22,631: Tracking: tracking
2018-04-06 20:13:22,651: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcf6ba8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcf6978>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dcf6ac8>]}
2018-04-06 20:13:23,511: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 20:13:23,772: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 20:13:23,846: Parsing get_column_values.sql
2018-04-06 20:13:23,897: Parsing get_url_parameter.sql
2018-04-06 20:13:23,901: Parsing split_part.sql
2018-04-06 20:13:23,905: Parsing table_exists.sql
2018-04-06 20:13:23,947: Parsing core.sql
2018-04-06 20:13:24,036: Parsing adapters/bigquery.sql
2018-04-06 20:13:24,058: Parsing adapters/common.sql
2018-04-06 20:13:24,147: Parsing adapters/postgres.sql
2018-04-06 20:13:24,180: Parsing adapters/redshift.sql
2018-04-06 20:13:24,292: Parsing etc/get_custom_schema.sql
2018-04-06 20:13:24,312: Parsing materializations/archive.sql
2018-04-06 20:13:24,362: Parsing materializations/bigquery.sql
2018-04-06 20:13:24,378: Parsing materializations/helpers.sql
2018-04-06 20:13:24,403: Parsing materializations/incremental.sql
2018-04-06 20:13:24,428: Parsing materializations/table.sql
2018-04-06 20:13:24,446: Parsing materializations/view.sql
2018-04-06 20:13:24,478: Parsing materializations/wrapper.sql
2018-04-06 20:13:24,525: Parsing schema_tests/accepted_values.sql
2018-04-06 20:13:24,539: Parsing schema_tests/not_null.sql
2018-04-06 20:13:24,541: Parsing schema_tests/relationships.sql
2018-04-06 20:13:24,556: Parsing schema_tests/unique.sql
2018-04-06 20:13:25,505: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 20:13:25,507: Parsing model.agency_data_pipeline.all_dates
2018-04-06 20:13:25,508: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 20:13:25,510: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 20:13:25,512: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 20:13:25,513: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 20:13:25,515: Acquiring new bigquery connection "master".
2018-04-06 20:13:25,515: Opening a new connection (0 currently allocated)
2018-04-06 20:13:25,555: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 20:13:25,557: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 20:13:25,558: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 20:13:25,560: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 20:13:25,561: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 20:13:25,563: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 20:13:25,565: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 20:13:25,567: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 20:13:25,568: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 20:13:25,571: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 20:13:25,573: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 20:13:25,574: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 20:13:25,576: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 20:13:25,581: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 20:13:25,587: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 20:13:25,591: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 20:13:25,596: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 20:13:25,598: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 20:13:25,600: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 20:13:25,610: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 20:13:25,618: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 20:13:25,620: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 20:13:25,623: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 20:13:25,629: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 20:13:25,635: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 20:13:25,641: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 20:13:25,646: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 20:13:25,649: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 20:13:25,650: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 20:13:25,653: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 20:13:25,656: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 20:13:25,657: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 20:13:25,659: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 20:13:25,661: Parsing model.agency_data_pipeline.agg_products
2018-04-06 20:13:25,662: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 20:13:25,664: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 20:13:25,666: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 20:13:25,668: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 20:13:25,670: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 20:13:25,671: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 20:13:25,673: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 20:13:25,675: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 20:13:25,677: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 20:13:25,679: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 20:13:25,683: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 20:13:25,685: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 20:13:25,687: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 20:13:25,690: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 20:13:25,692: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 20:13:25,694: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 20:13:25,696: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 20:13:25,700: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 20:13:25,702: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 20:13:25,703: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 20:13:25,705: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 20:13:25,707: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 20:13:25,709: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 20:13:25,711: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 20:13:25,713: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 20:13:25,715: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 20:13:25,717: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 20:13:25,719: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 20:13:25,721: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 20:13:25,724: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 20:13:25,725: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 20:13:25,726: Parsing model.agency_data_pipeline.products_proc
2018-04-06 20:13:25,729: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 20:13:25,730: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 20:13:25,732: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 20:13:25,751: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 20:13:25,776: 
2018-04-06 20:13:27,056: 20:13:27 | Concurrency: 4 threads (target='prod')
2018-04-06 20:13:27,056: 20:13:27 | 
2018-04-06 20:13:27,717: 20:13:27 | 1 of 75 START table model agency_data_pipeline.bing_ads_ads.......... [RUN]
2018-04-06 20:13:27,717: 20:13:27 | 2 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 20:13:27,717: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 20:13:27,717: 20:13:27 | 3 of 75 START table model agency_data_pipeline.ga_conversions........ [RUN]
2018-04-06 20:13:27,717: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 20:13:27,717: 20:13:27 | 4 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 20:13:27,725: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 20:13:27,725: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 20:13:27,729: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 20:13:27,729: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 20:13:27,734: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 20:13:27,740: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 20:13:27,759: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 20:13:27,760: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 20:13:27,760: Opening a new connection (1 currently allocated)
2018-04-06 20:13:27,761: Acquiring new bigquery connection "ga_conversions".
2018-04-06 20:13:27,761: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 20:13:27,763: Opening a new connection (2 currently allocated)
2018-04-06 20:13:27,809: Opening a new connection (3 currently allocated)
2018-04-06 20:13:27,811: Opening a new connection (4 currently allocated)
2018-04-06 20:13:28,842: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 20:13:28,869: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 20:13:28,875: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 20:13:28,909: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 20:13:29,944: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103426a0>]}
2018-04-06 20:13:29,972: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103487b8>]}
2018-04-06 20:13:30,153: 20:13:30 | 2 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 2.23s]
2018-04-06 20:13:30,154: 20:13:30 | 5 of 75 START table model agency_data_pipeline.adwords_urls.......... [RUN]
2018-04-06 20:13:30,155: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 20:13:30,159: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 20:13:30,160: Acquiring new bigquery connection "adwords_urls".
2018-04-06 20:13:30,161: Re-using an available connection from the pool.
2018-04-06 20:13:30,344: 20:13:30 | 3 of 75 OK created table model agency_data_pipeline.ga_conversions... [CREATE TABLE in 2.25s]
2018-04-06 20:13:30,344: 20:13:30 | 6 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 20:13:30,344: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 20:13:30,348: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 20:13:30,349: Acquiring new bigquery connection "monthend_dates".
2018-04-06 20:13:30,349: Re-using an available connection from the pool.
2018-04-06 20:13:30,811: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 20:13:30,980: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 20:13:31,089: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0057b8>]}
2018-04-06 20:13:31,127: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005208>]}
2018-04-06 20:13:31,280: 20:13:31 | 1 of 75 OK created table model agency_data_pipeline.bing_ads_ads..... [CREATE TABLE in 3.37s]
2018-04-06 20:13:31,281: 20:13:31 | 7 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 20:13:31,282: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 20:13:31,286: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 20:13:31,288: Acquiring new bigquery connection "carts_proc".
2018-04-06 20:13:31,288: Re-using an available connection from the pool.
2018-04-06 20:13:31,475: 20:13:31 | 4 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 3.40s]
2018-04-06 20:13:31,476: 20:13:31 | 8 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 20:13:31,476: Compiling model.agency_data_pipeline.all_dates
2018-04-06 20:13:31,479: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 20:13:31,480: Acquiring new bigquery connection "all_dates".
2018-04-06 20:13:31,480: Re-using an available connection from the pool.
2018-04-06 20:13:31,948: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 20:13:32,074: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 20:13:33,036: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:13:33,041: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0057b8>]}
2018-04-06 20:13:33,175: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005208>]}
2018-04-06 20:13:33,187: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103487b8>]}
2018-04-06 20:13:33,226: 20:13:33 | 5 of 75 OK created table model agency_data_pipeline.adwords_urls..... [CREATE TABLE in 2.88s]
2018-04-06 20:13:33,226: 20:13:33 | 9 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 20:13:33,228: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 20:13:33,231: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 20:13:33,233: Acquiring new bigquery connection "clients_proc".
2018-04-06 20:13:33,233: Re-using an available connection from the pool.
2018-04-06 20:13:33,413: 20:13:33 | 7 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 1.76s]
2018-04-06 20:13:33,414: 20:13:33 | 10 of 75 START table model agency_data_pipeline.adwords_campaigns.... [RUN]
2018-04-06 20:13:33,415: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 20:13:33,420: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 20:13:33,422: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 20:13:33,422: Re-using an available connection from the pool.
2018-04-06 20:13:33,604: 20:13:33 | 8 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 1.70s]
2018-04-06 20:13:33,605: 20:13:33 | 11 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 20:13:33,605: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 20:13:33,609: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 20:13:33,611: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 20:13:33,611: Re-using an available connection from the pool.
2018-04-06 20:13:33,795: 20:13:33 | 6 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 2.84s]
2018-04-06 20:13:33,795: 20:13:33 | 12 of 75 START table model agency_data_pipeline.accounts_proc........ [RUN]
2018-04-06 20:13:33,795: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 20:13:33,800: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 20:13:33,801: Acquiring new bigquery connection "accounts_proc".
2018-04-06 20:13:33,801: Re-using an available connection from the pool.
2018-04-06 20:13:33,838: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 20:13:34,093: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 20:13:34,261: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 20:13:34,476: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 20:13:36,032: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:13:36,280: 20:13:36 | 9 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 2.80s]
2018-04-06 20:13:36,448: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddd3358>]}
2018-04-06 20:13:36,639: 20:13:36 | 11 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.84s]
2018-04-06 20:13:36,697: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103487b8>]}
2018-04-06 20:13:36,896: 20:13:36 | 12 of 75 OK created table model agency_data_pipeline.accounts_proc... [CREATE TABLE in 2.90s]
2018-04-06 20:13:37,390: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110394da0>]}
2018-04-06 20:13:37,578: 20:13:37 | 10 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 3.98s]
2018-04-06 20:13:37,578: 20:13:37 | 13 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 20:13:37,578: 20:13:37 | 14 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 20:13:37,578: 20:13:37 | 15 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 20:13:37,579: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 20:13:37,579: 20:13:37 | 16 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 20:13:37,579: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 20:13:37,579: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 20:13:37,585: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 20:13:37,585: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 20:13:37,590: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 20:13:37,594: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 20:13:37,594: Re-using an available connection from the pool.
2018-04-06 20:13:37,599: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 20:13:37,599: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:37,599: Re-using an available connection from the pool.
2018-04-06 20:13:37,600: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:37,601: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 20:13:37,601: Re-using an available connection from the pool.
2018-04-06 20:13:37,602: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 20:13:37,602: Re-using an available connection from the pool.
2018-04-06 20:13:38,256: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 20:13:38,291: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 20:13:38,718: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 20:13:38,868: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 20:13:39,408: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 20:13:39,777: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 20:13:40,450: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103482e8>]}
2018-04-06 20:13:40,459: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103945f8>]}
2018-04-06 20:13:40,639: 20:13:40 | 15 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.87s]
2018-04-06 20:13:40,640: 20:13:40 | 17 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 20:13:40,641: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 20:13:40,646: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 20:13:40,715: Acquiring new bigquery connection "adwords_ads".
2018-04-06 20:13:40,715: Re-using an available connection from the pool.
2018-04-06 20:13:40,838: 20:13:40 | 16 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 2.87s]
2018-04-06 20:13:40,838: 20:13:40 | 18 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 20:13:40,839: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 20:13:40,845: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 20:13:40,845: Re-using an available connection from the pool.
2018-04-06 20:13:40,845: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:41,192: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 20:13:41,399: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 20:13:41,636: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110394358>]}
2018-04-06 20:13:41,823: 20:13:41 | 14 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 4.06s]
2018-04-06 20:13:41,824: 20:13:41 | 19 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 20:13:41,824: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 20:13:41,828: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 20:13:41,829: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 20:13:41,829: Re-using an available connection from the pool.
2018-04-06 20:13:41,866: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 20:13:42,017: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103549b0>]}
2018-04-06 20:13:42,210: 20:13:42 | 13 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.44s]
2018-04-06 20:13:42,351: 20:13:42 | 20 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 20:13:42,351: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 20:13:42,357: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 20:13:42,357: Re-using an available connection from the pool.
2018-04-06 20:13:42,357: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:42,582: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 20:13:42,650: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 20:13:43,536: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 20:13:43,596: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dfcc748>]}
2018-04-06 20:13:43,778: 20:13:43 | 17 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 2.95s]
2018-04-06 20:13:44,049: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103945f8>]}
2018-04-06 20:13:44,235: 20:13:44 | 18 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 3.21s]
2018-04-06 20:13:45,717: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0bc50>]}
2018-04-06 20:13:45,903: 20:13:45 | 20 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 3.37s]
2018-04-06 20:13:46,922: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110393630>]}
2018-04-06 20:13:47,121: 20:13:47 | 19 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 5.10s]
2018-04-06 20:13:47,122: 20:13:47 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 20:13:47,122: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 20:13:47,122: 20:13:47 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 20:13:47,129: Acquiring new bigquery connection "fb_ads".
2018-04-06 20:13:47,129: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 20:13:47,129: Re-using an available connection from the pool.
2018-04-06 20:13:47,136: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 20:13:47,136: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:47,136: Re-using an available connection from the pool.
2018-04-06 20:13:47,137: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:47,451: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 20:13:47,473: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 20:13:48,107: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 20:13:48,140: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
id,
first_name,
last_name,
email
FROM customers a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence


2018-04-06 20:13:50,277: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10def2438>]}
2018-04-06 20:13:50,477: 20:13:50 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 3.15s]
2018-04-06 20:13:52,501: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddf6c50>]}
2018-04-06 20:13:53,072: 20:13:53 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 5.37s]
2018-04-06 20:13:53,073: 20:13:53 | 23 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 20:13:53,073: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 20:13:53,079: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 20:13:53,073: 20:13:53 | 24 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 20:13:53,080: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 20:13:53,086: Re-using an available connection from the pool.
2018-04-06 20:13:53,086: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 20:13:53,073: 20:13:53 | 25 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 20:13:53,073: 20:13:53 | 26 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 20:13:53,086: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:53,087: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 20:13:53,087: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 20:13:53,091: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 20:13:53,097: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 20:13:53,097: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 20:13:53,099: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 20:13:53,100: Re-using an available connection from the pool.
2018-04-06 20:13:53,101: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 20:13:53,102: Re-using an available connection from the pool.
2018-04-06 20:13:53,103: Re-using an available connection from the pool.
2018-04-06 20:13:53,429: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 20:13:53,727: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 20:13:53,749: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 20:13:53,757: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
lower(a.source) source,
lower(a.medium) medium,
lower(campaign) campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( lower(a.source) = c.source
  AND lower(a.medium) = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 20:13:54,030: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 20:13:55,910: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103a8320>]}
2018-04-06 20:13:56,105: 20:13:56 | 26 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.82s]
2018-04-06 20:13:56,105: 20:13:56 | 27 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 20:13:56,105: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 20:13:56,112: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 20:13:56,112: Re-using an available connection from the pool.
2018-04-06 20:13:56,112: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:13:56,228: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005898>]}
2018-04-06 20:13:56,412: 20:13:56 | 23 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.15s]
2018-04-06 20:13:56,431: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 20:13:56,998: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dde5518>]}
2018-04-06 20:13:57,187: 20:13:57 | 25 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 3.91s]
2018-04-06 20:13:57,203: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 20:13:58,076: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005048>]}
2018-04-06 20:13:58,263: 20:13:58 | 24 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.00s]
2018-04-06 20:14:04,838: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103a8320>]}
2018-04-06 20:14:05,033: 20:14:05 | 27 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 8.73s]
2018-04-06 20:14:05,034: 20:14:05 | 28 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 20:14:05,034: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 20:14:05,034: 20:14:05 | 29 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 20:14:05,040: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 20:14:05,034: 20:14:05 | 30 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 20:14:05,040: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 20:14:05,034: 20:14:05 | 31 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 20:14:05,040: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 20:14:05,044: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 20:14:05,045: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 20:14:05,062: Acquiring new bigquery connection "adwords_join".
2018-04-06 20:14:05,090: Re-using an available connection from the pool.
2018-04-06 20:14:05,081: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 20:14:05,089: Acquiring new bigquery connection "ga_transactions".
2018-04-06 20:14:05,067: Acquiring new bigquery connection "ga_traffic".
2018-04-06 20:14:05,090: Re-using an available connection from the pool.
2018-04-06 20:14:05,092: Re-using an available connection from the pool.
2018-04-06 20:14:05,097: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:14:05,098: Re-using an available connection from the pool.
2018-04-06 20:14:05,098: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:14:05,747: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 20:14:05,819: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 20:14:06,282: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:14:06,368: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:14:07,729: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 20:14:07,806: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 20:14:08,450: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 20:14:08,453: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 20:14:10,199: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df5dd68>]}
2018-04-06 20:14:10,413: 20:14:10 | 28 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 5.16s]
2018-04-06 20:14:10,413: 20:14:10 | 32 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 20:14:10,413: Compiling model.agency_data_pipeline.agg_products
2018-04-06 20:14:10,417: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 20:14:10,430: Acquiring new bigquery connection "agg_products".
2018-04-06 20:14:10,430: Re-using an available connection from the pool.
2018-04-06 20:14:11,047: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 20:14:11,282: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11035bda0>]}
2018-04-06 20:14:11,477: 20:14:11 | 29 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 6.24s]
2018-04-06 20:14:13,631: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df5dd68>]}
2018-04-06 20:14:13,814: 20:14:13 | 32 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 3.22s]
2018-04-06 20:14:15,703: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103b3eb8>]}
2018-04-06 20:14:15,892: 20:14:15 | 31 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 10.66s]
2018-04-06 20:14:18,707: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dde5518>]}
2018-04-06 20:14:18,934: 20:14:18 | 30 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 13.67s]
2018-04-06 20:14:18,935: 20:14:18 | 33 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 20:14:18,935: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 20:14:18,935: 20:14:18 | 34 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 20:14:18,936: 20:14:18 | 35 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 20:14:18,936: 20:14:18 | 36 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 20:14:18,941: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 20:14:18,941: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 20:14:18,941: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 20:14:18,941: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 20:14:18,946: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 20:14:18,950: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 20:14:18,956: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 20:14:18,959: Re-using an available connection from the pool.
2018-04-06 20:14:18,957: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 20:14:18,980: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 20:14:18,980: Re-using an available connection from the pool.
2018-04-06 20:14:18,982: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 20:14:18,983: Re-using an available connection from the pool.
2018-04-06 20:14:18,988: Acquiring new bigquery connection "adwords_stats".
2018-04-06 20:14:18,988: Re-using an available connection from the pool.
2018-04-06 20:14:21,017: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 20:14:21,036: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 20:14:21,044: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 20:14:21,078: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 20:14:23,967: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:14:23,993: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005048>]}
2018-04-06 20:14:24,165: 20:14:24 | 35 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 5.03s]
2018-04-06 20:14:24,166: 20:14:24 | 37 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 20:14:24,166: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 20:14:24,170: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 20:14:24,173: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 20:14:24,173: Re-using an available connection from the pool.
2018-04-06 20:14:24,372: 20:14:24 | 33 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 5.06s]
2018-04-06 20:14:25,073: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110342f60>]}
2018-04-06 20:14:25,260: 20:14:25 | 34 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 6.13s]
2018-04-06 20:14:27,199: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 20:14:28,229: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103480f0>]}
2018-04-06 20:14:28,290: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:14:28,425: 20:14:28 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 9.29s]
2018-04-06 20:14:28,619: 20:14:28 | 37 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 4.12s]
2018-04-06 20:14:28,619: 20:14:28 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 20:14:28,620: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 20:14:28,629: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 20:14:28,631: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 20:14:28,632: Re-using an available connection from the pool.
2018-04-06 20:14:29,265: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 20:14:33,589: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103425c0>]}
2018-04-06 20:14:33,777: 20:14:33 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 4.97s]
2018-04-06 20:14:33,778: 20:14:33 | 39 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 20:14:33,778: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 20:14:33,778: 20:14:33 | 40 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 20:14:33,784: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 20:14:33,784: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 20:14:33,791: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 20:14:33,792: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 20:14:33,792: Re-using an available connection from the pool.
2018-04-06 20:14:33,793: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 20:14:33,794: Re-using an available connection from the pool.
2018-04-06 20:14:34,395: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(ifnull(last_touch_shipping,0)) - sum(ifnull(last_touch_tax,0)) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 20:14:34,409: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 20:14:38,829: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005048>]}
2018-04-06 20:14:39,017: 20:14:39 | 40 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 5.04s]
2018-04-06 20:14:43,087: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:14:43,284: 20:14:43 | 39 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 9.31s]
2018-04-06 20:14:43,285: 20:14:43 | 41 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 20:14:43,285: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 20:14:43,285: 20:14:43 | 42 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 20:14:43,293: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 20:14:43,293: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 20:14:43,300: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 20:14:43,339: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 20:14:43,339: Re-using an available connection from the pool.
2018-04-06 20:14:43,340: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 20:14:43,340: Re-using an available connection from the pool.
2018-04-06 20:14:43,953: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 20:14:44,043: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 20:14:47,201: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110354eb8>]}
2018-04-06 20:14:47,389: 20:14:47 | 41 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.92s]
2018-04-06 20:14:48,368: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103480f0>]}
2018-04-06 20:14:48,560: 20:14:48 | 42 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 5.07s]
2018-04-06 20:14:48,561: 20:14:48 | 43 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 20:14:48,561: 20:14:48 | 44 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 20:14:48,561: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 20:14:48,561: 20:14:48 | 45 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 20:14:48,561: Compiling model.agency_data_pipeline.products_proc
2018-04-06 20:14:48,566: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 20:14:48,566: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 20:14:48,574: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 20:14:48,579: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 20:14:48,612: Acquiring new bigquery connection "products_proc".
2018-04-06 20:14:48,613: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 20:14:48,613: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 20:14:48,613: Re-using an available connection from the pool.
2018-04-06 20:14:48,614: Re-using an available connection from the pool.
2018-04-06 20:14:48,615: Re-using an available connection from the pool.
2018-04-06 20:14:49,194: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 20:14:49,199: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 20:14:49,232: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 20:14:52,453: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddf6a20>]}
2018-04-06 20:14:52,641: 20:14:52 | 45 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 3.89s]
2018-04-06 20:14:57,934: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103b39b0>]}
2018-04-06 20:14:58,539: 20:14:58 | 44 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 9.37s]
2018-04-06 20:15:27,253: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:15:27,622: 20:15:27 | 43 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 38.69s]
2018-04-06 20:15:27,625: 20:15:27 | 46 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 20:15:27,625: 20:15:27 | 47 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 20:15:27,625: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 20:15:27,625: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 20:15:27,634: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 20:15:27,641: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 20:15:27,645: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 20:15:27,646: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 20:15:27,646: Re-using an available connection from the pool.
2018-04-06 20:15:27,647: Re-using an available connection from the pool.
2018-04-06 20:15:28,277: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 20:15:28,311: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 20:15:30,458: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dde5b00>]}
2018-04-06 20:15:30,648: 20:15:30 | 46 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.83s]
2018-04-06 20:15:32,636: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dffa940>]}
2018-04-06 20:15:32,816: 20:15:32 | 47 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 5.01s]
2018-04-06 20:15:32,817: 20:15:32 | 48 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 20:15:32,817: 20:15:32 | 49 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 20:15:32,817: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 20:15:32,817: 20:15:32 | 50 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 20:15:32,817: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 20:15:32,824: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 20:15:32,824: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 20:15:32,830: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 20:15:32,837: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 20:15:32,868: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 20:15:32,868: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 20:15:32,869: Acquiring new bigquery connection "agg_transaction".
2018-04-06 20:15:32,870: Re-using an available connection from the pool.
2018-04-06 20:15:32,873: Re-using an available connection from the pool.
2018-04-06 20:15:32,873: Re-using an available connection from the pool.
2018-04-06 20:15:33,488: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 20:15:33,505: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 20:15:33,522: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	when recency_days > recency_50pct and frequency > frequency_50pct then 'Frequent, not Recent'
	when recency_days < recency_50pct and frequency < frequency_50pct then 'Recent, not Frequent'
	else 'Unbucketed' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 20:15:36,752: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dde5b00>]}
2018-04-06 20:15:36,938: 20:15:36 | 50 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 3.93s]
2018-04-06 20:15:39,998: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df0ba90>]}
2018-04-06 20:15:40,180: 20:15:40 | 48 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 7.18s]
2018-04-06 20:16:01,630: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110342128>]}
2018-04-06 20:16:02,231: 20:16:02 | 49 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 28.81s]
2018-04-06 20:16:02,231: 20:16:02 | 51 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 20:16:02,231: 20:16:02 | 52 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 20:16:02,231: 20:16:02 | 53 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 20:16:02,231: 20:16:02 | 54 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 20:16:02,232: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 20:16:02,232: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 20:16:02,232: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 20:16:02,232: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 20:16:02,237: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 20:16:02,241: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 20:16:02,245: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 20:16:02,248: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 20:16:02,291: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 20:16:02,291: Re-using an available connection from the pool.
2018-04-06 20:16:02,304: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 20:16:02,304: Re-using an available connection from the pool.
2018-04-06 20:16:02,305: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 20:16:02,306: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 20:16:02,306: Re-using an available connection from the pool.
2018-04-06 20:16:02,314: Re-using an available connection from the pool.
2018-04-06 20:16:02,933: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 20:16:02,937: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 20:16:02,958: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 20:16:02,987: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 20:16:05,102: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005048>]}
2018-04-06 20:16:05,114: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x11035ba90>]}
2018-04-06 20:16:05,289: 20:16:05 | 52 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.87s]
2018-04-06 20:16:05,477: 20:16:05 | 54 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.88s]
2018-04-06 20:16:06,209: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110348940>]}
2018-04-06 20:16:06,436: 20:16:06 | 53 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 3.98s]
2018-04-06 20:16:26,736: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dffa940>]}
2018-04-06 20:16:26,927: 20:16:26 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 24.50s]
2018-04-06 20:16:26,928: 20:16:26 | 55 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 20:16:26,928: 20:16:26 | 56 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 20:16:26,928: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 20:16:26,928: 20:16:26 | 57 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 20:16:26,928: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 20:16:26,932: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 20:16:26,932: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 20:16:26,937: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 20:16:26,942: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 20:16:27,225: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 20:16:27,225: Re-using an available connection from the pool.
2018-04-06 20:16:27,225: Acquiring new bigquery connection "customers_proc".
2018-04-06 20:16:27,234: Re-using an available connection from the pool.
2018-04-06 20:16:27,226: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 20:16:27,240: Re-using an available connection from the pool.
2018-04-06 20:16:27,834: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 20:16:27,835: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 20:16:27,912: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 20:16:40,781: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110342128>]}
2018-04-06 20:16:40,978: 20:16:40 | 55 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products [CREATE TABLE in 13.85s]
2018-04-06 20:16:47,416: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110342e80>]}
2018-04-06 20:16:47,605: 20:16:47 | 57 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 20.48s]
2018-04-06 20:17:00,410: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10de104a8>]}
2018-04-06 20:17:00,625: 20:17:00 | 56 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 33.48s]
2018-04-06 20:17:00,625: 20:17:00 | 58 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 20:17:00,626: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 20:17:00,631: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 20:17:00,625: 20:17:00 | 59 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 20:17:00,631: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 20:17:00,625: 20:17:00 | 60 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 20:17:00,635: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 20:17:00,635: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 20:17:00,639: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 20:17:00,647: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 20:17:00,647: Acquiring new bigquery connection "retention_365_730".
2018-04-06 20:17:00,647: Re-using an available connection from the pool.
2018-04-06 20:17:00,648: Re-using an available connection from the pool.
2018-04-06 20:17:00,651: Acquiring new bigquery connection "retention_0_365".
2018-04-06 20:17:00,651: Re-using an available connection from the pool.
2018-04-06 20:17:01,296: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:17:01,378: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:17:01,428: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:17:03,607: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dffa940>]}
2018-04-06 20:17:04,180: 20:17:04 | 58 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.98s]
2018-04-06 20:17:05,697: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103480f0>]}
2018-04-06 20:17:05,880: 20:17:05 | 59 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 5.07s]
2018-04-06 20:17:10,998: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103b3a90>]}
2018-04-06 20:17:11,184: 20:17:11 | 60 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 10.36s]
2018-04-06 20:17:11,185: 20:17:11 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 20:17:11,185: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 20:17:11,185: 20:17:11 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 20:17:11,190: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 20:17:11,190: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 20:17:11,195: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 20:17:11,235: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 20:17:11,235: Re-using an available connection from the pool.
2018-04-06 20:17:11,237: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 20:17:11,238: Re-using an available connection from the pool.
2018-04-06 20:17:11,887: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 20:17:11,890: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	when recency_days > recency_50pct and frequency > frequency_50pct then 'Frequent, not Recent'
	when recency_days < recency_50pct and frequency < frequency_50pct then 'Recent, not Frequent'
	else 'Unbucketed' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 20:17:15,121: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103b3fd0>]}
2018-04-06 20:17:15,310: 20:17:15 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 3.93s]
2018-04-06 20:17:42,125: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dffaf28>]}
2018-04-06 20:17:42,375: 20:17:42 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 30.94s]
2018-04-06 20:17:42,376: 20:17:42 | 63 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 20:17:42,376: 20:17:42 | 64 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 20:17:42,376: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 20:17:42,376: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 20:17:42,381: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 20:17:42,385: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 20:17:42,386: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 20:17:42,386: Re-using an available connection from the pool.
2018-04-06 20:17:42,387: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 20:17:42,388: Re-using an available connection from the pool.
2018-04-06 20:17:43,041: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 20:17:43,043: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 20:17:47,346: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110354a58>]}
2018-04-06 20:17:47,532: 20:17:47 | 64 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 4.97s]
2018-04-06 20:18:03,530: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110354748>]}
2018-04-06 20:18:03,785: 20:18:03 | 63 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 21.15s]
2018-04-06 20:18:03,785: 20:18:03 | 65 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 20:18:03,786: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 20:18:03,785: 20:18:03 | 66 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 20:18:03,790: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 20:18:03,786: 20:18:03 | 67 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 20:18:03,791: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 20:18:03,786: 20:18:03 | 68 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 20:18:03,791: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 20:18:03,796: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 20:18:03,796: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 20:18:03,805: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 20:18:03,806: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 20:18:03,813: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 20:18:03,814: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 20:18:03,814: Re-using an available connection from the pool.
2018-04-06 20:18:03,814: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 20:18:03,815: Re-using an available connection from the pool.
2018-04-06 20:18:03,816: Re-using an available connection from the pool.
2018-04-06 20:18:03,818: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 20:18:03,824: Re-using an available connection from the pool.
2018-04-06 20:18:04,486: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 20:18:04,489: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 20:18:04,503: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 20:18:04,530: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 20:18:06,680: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df44fd0>]}
2018-04-06 20:18:07,309: 20:18:07 | 68 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.88s]
2018-04-06 20:18:07,310: 20:18:07 | 69 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 20:18:07,310: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 20:18:07,314: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 20:18:07,315: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 20:18:07,315: Re-using an available connection from the pool.
2018-04-06 20:18:07,730: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1103b3780>]}
2018-04-06 20:18:07,905: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 20:18:07,916: 20:18:07 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 3.94s]
2018-04-06 20:18:11,151: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10df44fd0>]}
2018-04-06 20:18:11,374: 20:18:11 | 69 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 3.84s]
2018-04-06 20:18:13,221: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10dffaf28>]}
2018-04-06 20:18:13,404: 20:18:13 | 65 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 9.44s]
2018-04-06 20:18:18,496: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110348940>]}
2018-04-06 20:18:18,699: 20:18:18 | 67 of 75 OK created table model agency_data_pipeline.segment_stats_customers [CREATE TABLE in 14.70s]
2018-04-06 20:18:18,700: 20:18:18 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 20:18:18,700: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 20:18:18,708: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 20:18:18,709: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 20:18:18,709: Re-using an available connection from the pool.
2018-04-06 20:18:19,294: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 20:19:00,423: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110348f28>]}
2018-04-06 20:19:00,651: 20:19:00 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 41.72s]
2018-04-06 20:19:00,651: 20:19:00 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 20:19:00,651: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 20:19:00,657: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 20:19:00,669: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 20:19:00,669: Re-using an available connection from the pool.
2018-04-06 20:19:01,415: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 20:19:20,846: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e0050b8>]}
2018-04-06 20:19:21,531: 20:19:21 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 20.19s]
2018-04-06 20:19:21,531: 20:19:21 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 20:19:21,531: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 20:19:21,536: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 20:19:21,537: Acquiring new bigquery connection "growth_date_union".
2018-04-06 20:19:21,537: Re-using an available connection from the pool.
2018-04-06 20:19:22,243: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 20:19:23,331: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110348128>]}
2018-04-06 20:19:23,514: 20:19:23 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 1.80s]
2018-04-06 20:19:23,515: 20:19:23 | 73 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 20:19:23,515: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 20:19:23,515: 20:19:23 | 74 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 20:19:23,521: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 20:19:23,521: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 20:19:23,527: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 20:19:23,528: Acquiring new bigquery connection "growth_stats".
2018-04-06 20:19:23,529: Acquiring new bigquery connection "retention_stats".
2018-04-06 20:19:23,529: Re-using an available connection from the pool.
2018-04-06 20:19:23,530: Re-using an available connection from the pool.
2018-04-06 20:19:24,155: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 20:19:24,162: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 20:19:25,253: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10e005048>]}
2018-04-06 20:19:25,438: 20:19:25 | 74 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.73s]
2018-04-06 20:19:29,562: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110354f28>]}
2018-04-06 20:19:29,748: 20:19:29 | 73 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 6.05s]
2018-04-06 20:19:29,748: 20:19:29 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 20:19:29,748: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 20:19:29,753: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 20:19:29,754: Acquiring new bigquery connection "agg_campaign".
2018-04-06 20:19:29,754: Re-using an available connection from the pool.
2018-04-06 20:19:30,396: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 20:19:43,433: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '334313bf-b51a-499a-90bf-44c821571267', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x110348128>]}
2018-04-06 20:19:43,616: 20:19:43 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 13.68s]
2018-04-06 20:19:43,640: 20:19:43 | 
2018-04-06 20:19:43,641: 20:19:43 | Finished running 75 table models in 376.59s.
2018-04-06 20:19:43,641: Connection 'master' was left open.
2018-04-06 20:19:43,641: 
2018-04-06 20:19:43,642: Completed successfully
2018-04-06 20:19:43,642: 
Done. PASS=75 ERROR=0 SKIP=0 TOTAL=75
2018-04-06 20:19:43,642: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc6eb8>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc6a58>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10ddc6cf8>]}
2018-04-06 20:19:43,830: Flushing usage events
2018-04-06 20:32:34,536: Tracking: tracking
2018-04-06 20:32:34,558: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061cbfd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061cbe10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1061cbb38>]}
2018-04-06 20:32:35,470: Loading dependency project from /usr/local/Cellar/dbt/0.9.0/libexec/lib/python3.6/site-packages/dbt/include
2018-04-06 20:32:35,496: Loading dependency project from /Users/davidkrevitt/Dropbox/CIFL/adp-models/growth-engines/dbt_modules
2018-04-06 20:32:35,537: Parsing get_column_values.sql
2018-04-06 20:32:35,582: Parsing get_url_parameter.sql
2018-04-06 20:32:35,691: Parsing split_part.sql
2018-04-06 20:32:35,696: Parsing table_exists.sql
2018-04-06 20:32:35,727: Parsing core.sql
2018-04-06 20:32:35,760: Parsing adapters/bigquery.sql
2018-04-06 20:32:35,805: Parsing adapters/common.sql
2018-04-06 20:32:35,849: Parsing adapters/postgres.sql
2018-04-06 20:32:35,859: Parsing adapters/redshift.sql
2018-04-06 20:32:35,875: Parsing etc/get_custom_schema.sql
2018-04-06 20:32:35,880: Parsing materializations/archive.sql
2018-04-06 20:32:35,931: Parsing materializations/bigquery.sql
2018-04-06 20:32:35,991: Parsing materializations/helpers.sql
2018-04-06 20:32:36,061: Parsing materializations/incremental.sql
2018-04-06 20:32:36,124: Parsing materializations/table.sql
2018-04-06 20:32:36,323: Parsing materializations/view.sql
2018-04-06 20:32:36,458: Parsing materializations/wrapper.sql
2018-04-06 20:32:36,583: Parsing schema_tests/accepted_values.sql
2018-04-06 20:32:36,697: Parsing schema_tests/not_null.sql
2018-04-06 20:32:36,770: Parsing schema_tests/relationships.sql
2018-04-06 20:32:36,847: Parsing schema_tests/unique.sql
2018-04-06 20:32:38,874: Parsing model.agency_data_pipeline.accounts_proc
2018-04-06 20:32:38,876: Parsing model.agency_data_pipeline.all_dates
2018-04-06 20:32:38,877: Parsing model.agency_data_pipeline.carts_proc
2018-04-06 20:32:38,878: Parsing model.agency_data_pipeline.clients_proc
2018-04-06 20:32:38,880: Parsing model.agency_data_pipeline.conversion_goals_proc
2018-04-06 20:32:38,881: Parsing model.agency_data_pipeline.mappings_ga_proc
2018-04-06 20:32:38,883: Acquiring new bigquery connection "master".
2018-04-06 20:32:38,883: Opening a new connection (0 currently allocated)
2018-04-06 20:32:38,924: Parsing model.agency_data_pipeline.monthend_dates
2018-04-06 20:32:38,925: Parsing model.agency_data_pipeline.adwords_ads
2018-04-06 20:32:38,927: Parsing model.agency_data_pipeline.adwords_campaigns
2018-04-06 20:32:38,928: Parsing model.agency_data_pipeline.adwords_conversions
2018-04-06 20:32:38,930: Parsing model.agency_data_pipeline.adwords_impression_share
2018-04-06 20:32:38,931: Parsing model.agency_data_pipeline.adwords_join
2018-04-06 20:32:38,933: Parsing model.agency_data_pipeline.adwords_stats
2018-04-06 20:32:38,934: Parsing model.agency_data_pipeline.adwords_urls
2018-04-06 20:32:38,936: Parsing model.agency_data_pipeline.bing_ads_ads
2018-04-06 20:32:38,938: Parsing model.agency_data_pipeline.bing_ads_conversions
2018-04-06 20:32:38,940: Parsing model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 20:32:38,942: Parsing model.agency_data_pipeline.bing_ads_stats
2018-04-06 20:32:38,943: Parsing model.agency_data_pipeline.fb_adcreative
2018-04-06 20:32:38,948: Parsing model.agency_data_pipeline.fb_ads
2018-04-06 20:32:38,954: Parsing model.agency_data_pipeline.fb_ads_insights
2018-04-06 20:32:38,958: Parsing model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 20:32:38,962: Parsing model.agency_data_pipeline.fb_ads_stats
2018-04-06 20:32:38,965: Parsing model.agency_data_pipeline.ga_conversions
2018-04-06 20:32:38,966: Parsing model.agency_data_pipeline.ga_traffic
2018-04-06 20:32:38,978: Parsing model.agency_data_pipeline.ga_transactions
2018-04-06 20:32:38,986: Parsing model.agency_data_pipeline.ga_mcf_proc
2018-04-06 20:32:38,988: Parsing model.agency_data_pipeline.ga_mcf_stats
2018-04-06 20:32:38,991: Parsing model.agency_data_pipeline.shopify_customers_proc
2018-04-06 20:32:38,996: Parsing model.agency_data_pipeline.shopify_orders_proc
2018-04-06 20:32:39,003: Parsing model.agency_data_pipeline.shopify_products_proc
2018-04-06 20:32:39,009: Parsing model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 20:32:39,014: Parsing model.agency_data_pipeline.agg_campaign
2018-04-06 20:32:39,016: Parsing model.agency_data_pipeline.agg_customers_union
2018-04-06 20:32:39,017: Parsing model.agency_data_pipeline.agg_ga_campaign
2018-04-06 20:32:39,019: Parsing model.agency_data_pipeline.agg_ga_transaction
2018-04-06 20:32:39,022: Parsing model.agency_data_pipeline.agg_orders_union
2018-04-06 20:32:39,023: Parsing model.agency_data_pipeline.agg_platforms_client
2018-04-06 20:32:39,025: Parsing model.agency_data_pipeline.agg_platforms_union
2018-04-06 20:32:39,027: Parsing model.agency_data_pipeline.agg_products
2018-04-06 20:32:39,029: Parsing model.agency_data_pipeline.agg_transaction
2018-04-06 20:32:39,031: Parsing model.agency_data_pipeline.agg_transaction_daily
2018-04-06 20:32:39,032: Parsing model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 20:32:39,033: Parsing model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 20:32:39,035: Parsing model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 20:32:39,037: Parsing model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 20:32:39,038: Parsing model.agency_data_pipeline.growth_customer_0_365
2018-04-06 20:32:39,040: Parsing model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 20:32:39,043: Parsing model.agency_data_pipeline.growth_date_union
2018-04-06 20:32:39,045: Parsing model.agency_data_pipeline.growth_stats
2018-04-06 20:32:39,049: Parsing model.agency_data_pipeline.retention_0_365
2018-04-06 20:32:39,051: Parsing model.agency_data_pipeline.retention_0_365_new
2018-04-06 20:32:39,052: Parsing model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 20:32:39,054: Parsing model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 20:32:39,056: Parsing model.agency_data_pipeline.retention_365_730
2018-04-06 20:32:39,058: Parsing model.agency_data_pipeline.retention_730_plus
2018-04-06 20:32:39,059: Parsing model.agency_data_pipeline.retention_stats
2018-04-06 20:32:39,063: Parsing model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 20:32:39,065: Parsing model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 20:32:39,066: Parsing model.agency_data_pipeline.customers_proc
2018-04-06 20:32:39,069: Parsing model.agency_data_pipeline.segment_list_customers
2018-04-06 20:32:39,071: Parsing model.agency_data_pipeline.segment_proc_customers
2018-04-06 20:32:39,073: Parsing model.agency_data_pipeline.segment_stats_customers
2018-04-06 20:32:39,074: Parsing model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 20:32:39,076: Parsing model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 20:32:39,078: Parsing model.agency_data_pipeline.customers_products_proc
2018-04-06 20:32:39,080: Parsing model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 20:32:39,082: Parsing model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 20:32:39,084: Parsing model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 20:32:39,087: Parsing model.agency_data_pipeline.order_paths_proc
2018-04-06 20:32:39,089: Parsing model.agency_data_pipeline.order_paths_stats
2018-04-06 20:32:39,090: Parsing model.agency_data_pipeline.products_proc
2018-04-06 20:32:39,092: Parsing model.agency_data_pipeline.segment_proc_sku
2018-04-06 20:32:39,094: Parsing model.agency_data_pipeline.segment_stats_category
2018-04-06 20:32:39,095: Parsing model.agency_data_pipeline.segment_stats_sku
2018-04-06 20:32:39,116: Found 75 models, 0 tests, 0 archives, 0 analyses, 46 macros, 0 operations
2018-04-06 20:32:39,139: 
2018-04-06 20:32:40,380: 20:32:40 | Concurrency: 4 threads (target='prod')
2018-04-06 20:32:40,380: 20:32:40 | 
2018-04-06 20:32:40,899: 20:32:40 | 1 of 75 START table model agency_data_pipeline.adwords_campaigns..... [RUN]
2018-04-06 20:32:40,900: Compiling model.agency_data_pipeline.adwords_campaigns
2018-04-06 20:32:40,904: Writing injected SQL for node "model.agency_data_pipeline.adwords_campaigns"
2018-04-06 20:32:40,899: 20:32:40 | 2 of 75 START table model agency_data_pipeline.bing_ads_impression_share [RUN]
2018-04-06 20:32:40,899: 20:32:40 | 3 of 75 START table model agency_data_pipeline.clients_proc.......... [RUN]
2018-04-06 20:32:40,904: Compiling model.agency_data_pipeline.bing_ads_impression_share
2018-04-06 20:32:40,899: 20:32:40 | 4 of 75 START table model agency_data_pipeline.all_dates............. [RUN]
2018-04-06 20:32:40,905: Compiling model.agency_data_pipeline.clients_proc
2018-04-06 20:32:40,908: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_impression_share"
2018-04-06 20:32:40,908: Compiling model.agency_data_pipeline.all_dates
2018-04-06 20:32:40,912: Writing injected SQL for node "model.agency_data_pipeline.clients_proc"
2018-04-06 20:32:40,915: Writing injected SQL for node "model.agency_data_pipeline.all_dates"
2018-04-06 20:32:40,926: Acquiring new bigquery connection "bing_ads_impression_share".
2018-04-06 20:32:40,927: Acquiring new bigquery connection "all_dates".
2018-04-06 20:32:40,927: Opening a new connection (1 currently allocated)
2018-04-06 20:32:40,928: Acquiring new bigquery connection "adwords_campaigns".
2018-04-06 20:32:40,929: Acquiring new bigquery connection "clients_proc".
2018-04-06 20:32:40,930: Opening a new connection (2 currently allocated)
2018-04-06 20:32:40,931: Opening a new connection (3 currently allocated)
2018-04-06 20:32:40,971: Opening a new connection (4 currently allocated)
2018-04-06 20:32:41,900: Model SQL (all_dates):
SELECT 
date_in_range,
unix_date(date_in_range) unix_date_in_range
FROM UNNEST(
    GENERATE_DATE_ARRAY(DATE('2016-01-01'), CURRENT_DATE(), INTERVAL 1 DAY)
) AS date_in_range
2018-04-06 20:32:41,909: Model SQL (clients_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
where client_name != ''
) 

WHERE lv = time_of_entry
2018-04-06 20:32:41,973: Model SQL (bing_ads_impression_share):
SELECT 
date, 
account,
channel,
platform,
sum(impressions) impressions,
sum(available_impressions) available_impressions
FROM

(

SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,  
'Paid' as channel,
'Bing Ads' as platform,
case when impressionsharepercent is null then 0 else impressions end as impressions,
cast(round(case when ( impressionsharepercent is not null and impressionsharepercent > 0 ) then (impressions*100)/impressionsharepercent else 0 end) as int64) as available_impressions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.campaign_performance_report` 

)

where lv = _sdc_sequence
group by date, account, channel, platform
2018-04-06 20:32:42,137: Model SQL (adwords_campaigns):
select
day,
campaignid, 
campaign,
account, 
channel,
platform,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(impression_share_num) impression_share_num,
sum(impression_share_den) impression_share_den
from 
  ( 
	SELECT  
	day,
	campaignid,
	campaign,
	account as account,
	'Paid' as channel,
	'Adwords' as platform,
	cost/1000000 cost, 
	impressions as impressions, 
	clicks, 
	case when searchimprshare is not null then impressions end as impression_share_num,
	case when searchimprshare is not null then impressions/(searchimprshare/100) end as impression_share_den,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.adwords.CAMPAIGN_PERFORMANCE_REPORT`
  )
where lv = _sdc_sequence
group by day, campaignid, account, channel, platform, campaign
2018-04-06 20:32:42,994: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf1d0>]}
2018-04-06 20:32:43,062: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10881c278>]}
2018-04-06 20:32:43,106: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c908>]}
2018-04-06 20:32:43,295: 20:32:43 | 4 of 75 OK created table model agency_data_pipeline.all_dates........ [CREATE TABLE in 2.09s]
2018-04-06 20:32:43,295: 20:32:43 | 5 of 75 START table model agency_data_pipeline.monthend_dates........ [RUN]
2018-04-06 20:32:43,295: Compiling model.agency_data_pipeline.monthend_dates
2018-04-06 20:32:43,299: Writing injected SQL for node "model.agency_data_pipeline.monthend_dates"
2018-04-06 20:32:43,300: Acquiring new bigquery connection "monthend_dates".
2018-04-06 20:32:43,302: Re-using an available connection from the pool.
2018-04-06 20:32:43,483: 20:32:43 | 2 of 75 OK created table model agency_data_pipeline.bing_ads_impression_share [CREATE TABLE in 2.16s]
2018-04-06 20:32:43,484: 20:32:43 | 6 of 75 START table model agency_data_pipeline.carts_proc............ [RUN]
2018-04-06 20:32:43,484: Compiling model.agency_data_pipeline.carts_proc
2018-04-06 20:32:43,487: Writing injected SQL for node "model.agency_data_pipeline.carts_proc"
2018-04-06 20:32:43,490: Acquiring new bigquery connection "carts_proc".
2018-04-06 20:32:43,490: Re-using an available connection from the pool.
2018-04-06 20:32:43,669: 20:32:43 | 3 of 75 OK created table model agency_data_pipeline.clients_proc..... [CREATE TABLE in 2.20s]
2018-04-06 20:32:43,669: 20:32:43 | 7 of 75 START table model agency_data_pipeline.adwords_conversions... [RUN]
2018-04-06 20:32:43,669: Compiling model.agency_data_pipeline.adwords_conversions
2018-04-06 20:32:43,673: Writing injected SQL for node "model.agency_data_pipeline.adwords_conversions"
2018-04-06 20:32:43,674: Acquiring new bigquery connection "adwords_conversions".
2018-04-06 20:32:43,674: Re-using an available connection from the pool.
2018-04-06 20:32:43,908: Model SQL (monthend_dates):
SELECT
date_in_range,
unix_date_in_range,
yyyymm,
lag(date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) date_in_range_yoy,
lag(unix_date_in_range, 12) OVER (partition by date_in_range order by date_in_range desc) unix_date_in_range_yoy
FROM
(
	SELECT 
	date_in_range,
	unix_date_in_range,
	yyyymm,
	first_value(date_in_range) over (partition by yyyymm order by date_in_range desc) monthend_date_in_range
	FROM
	( 
		SELECT 
		date_in_range,
		unix_date(date_in_range) unix_date_in_range,
		format_date("%Y-%m", date_in_range) AS yyyymm
		FROM UNNEST(
		    GENERATE_DATE_ARRAY(DATE('2016-01-31'), CURRENT_DATE(), INTERVAL 1 DAY)
		) AS date_in_range
	)
)
where date_in_range = monthend_date_in_range
2018-04-06 20:32:44,192: Model SQL (carts_proc):
select 
client,
client_name,
account,
platform
from  ( 

SELECT  
client,
client_name,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts`
WHERE platform in ('Shopify', 'Custom cart')

) 

WHERE lv = time_of_entry
2018-04-06 20:32:44,335: Model SQL (adwords_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(lower(goal_name)) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Adwords'

) 

WHERE lv = time_of_entry
2018-04-06 20:32:45,014: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf1d0>]}
2018-04-06 20:32:45,204: 20:32:45 | 5 of 75 OK created table model agency_data_pipeline.monthend_dates... [CREATE TABLE in 1.72s]
2018-04-06 20:32:45,204: 20:32:45 | 8 of 75 START table model agency_data_pipeline.accounts_proc......... [RUN]
2018-04-06 20:32:45,204: Compiling model.agency_data_pipeline.accounts_proc
2018-04-06 20:32:45,208: Writing injected SQL for node "model.agency_data_pipeline.accounts_proc"
2018-04-06 20:32:45,209: Acquiring new bigquery connection "accounts_proc".
2018-04-06 20:32:45,209: Re-using an available connection from the pool.
2018-04-06 20:32:45,424: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf908>]}
2018-04-06 20:32:45,609: 20:32:45 | 1 of 75 OK created table model agency_data_pipeline.adwords_campaigns [CREATE TABLE in 4.52s]
2018-04-06 20:32:45,609: 20:32:45 | 9 of 75 START table model agency_data_pipeline.conversion_goals_proc. [RUN]
2018-04-06 20:32:45,609: Compiling model.agency_data_pipeline.conversion_goals_proc
2018-04-06 20:32:45,613: Writing injected SQL for node "model.agency_data_pipeline.conversion_goals_proc"
2018-04-06 20:32:45,614: Acquiring new bigquery connection "conversion_goals_proc".
2018-04-06 20:32:45,614: Re-using an available connection from the pool.
2018-04-06 20:32:45,877: Model SQL (accounts_proc):
select 
client,
account,
platform,
max(time_of_entry)

from  ( 

SELECT  
client,
account,
platform,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.accounts` 

) 

WHERE lv = time_of_entry
group by client, account, platform
order by client asc, account asc
2018-04-06 20:32:46,242: Model SQL (conversion_goals_proc):
select 
client,
platform,
goal_name,
max(goal_type) goal_type,
account,
max(time_of_entry) time_of_entry
from  ( 

SELECT  
client,
platform,
trim(replace(replace(lower(goal_name),',',''),' ','')) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY platform ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 

) 

WHERE lv = time_of_entry
group by client, platform, account, goal_name
2018-04-06 20:32:46,434: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c52e8>]}
2018-04-06 20:32:46,539: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10629f4a8>]}
2018-04-06 20:32:46,629: 20:32:46 | 6 of 75 OK created table model agency_data_pipeline.carts_proc....... [CREATE TABLE in 2.95s]
2018-04-06 20:32:46,630: 20:32:46 | 10 of 75 START table model agency_data_pipeline.bing_ads_ads......... [RUN]
2018-04-06 20:32:46,631: Compiling model.agency_data_pipeline.bing_ads_ads
2018-04-06 20:32:46,636: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_ads"
2018-04-06 20:32:46,638: Acquiring new bigquery connection "bing_ads_ads".
2018-04-06 20:32:46,639: Re-using an available connection from the pool.
2018-04-06 20:32:46,826: 20:32:46 | 7 of 75 OK created table model agency_data_pipeline.adwords_conversions [CREATE TABLE in 2.87s]
2018-04-06 20:32:46,826: 20:32:46 | 11 of 75 START table model agency_data_pipeline.ga_conversions....... [RUN]
2018-04-06 20:32:46,826: Compiling model.agency_data_pipeline.ga_conversions
2018-04-06 20:32:46,830: Writing injected SQL for node "model.agency_data_pipeline.ga_conversions"
2018-04-06 20:32:46,831: Acquiring new bigquery connection "ga_conversions".
2018-04-06 20:32:46,831: Re-using an available connection from the pool.
2018-04-06 20:32:46,961: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10885c128>]}
2018-04-06 20:32:47,159: 20:32:47 | 8 of 75 OK created table model agency_data_pipeline.accounts_proc.... [CREATE TABLE in 1.76s]
2018-04-06 20:32:47,159: 20:32:47 | 12 of 75 START table model agency_data_pipeline.adwords_urls......... [RUN]
2018-04-06 20:32:47,159: Compiling model.agency_data_pipeline.adwords_urls
2018-04-06 20:32:47,163: Writing injected SQL for node "model.agency_data_pipeline.adwords_urls"
2018-04-06 20:32:47,164: Acquiring new bigquery connection "adwords_urls".
2018-04-06 20:32:47,164: Re-using an available connection from the pool.
2018-04-06 20:32:47,289: Model SQL (bing_ads_ads):
select
date, 
account, 
channel,
platform,
campaignid,
campaignname,
max(lower(trim(replace(regexp_replace(replace(replace(replace(url,'www.',''),'http://',''),'https://',''),r'\?.*$','' ),'.html',''),'/'))) as url,
utm_campaign,
sum(cost) as cost,
sum(impressions) as impressions,
sum(clicks) as clicks,
sum(conversions) as conversions
from 
  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
adid,
adtype,
campaignid, 
campaignname,
finalurl url,
case when regexp_contains(destinationurl, 'utm_campaign')
	then replace(lower(nullif(
  

    split(
        
  

    split(
        destinationurl,
        'utm_campaign='
        )[offset(1)]


,
        '&'
        )[offset(0)]


,'')),'+',' ') 
	else null end as utm_campaign,
spend cost, 
impressions, 
clicks, 
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY adid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.ad_performance_report` 
  )

where lv = _sdc_sequence
group by date, account, channel, platform, campaignid, campaignname, utm_campaign
2018-04-06 20:32:47,370: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088236d8>]}
2018-04-06 20:32:47,429: Model SQL (ga_conversions):
select 
client,
client_name,
platform,
goal_name,
goal_type,
account,
time_of_entry
from  ( 

SELECT  
client,
client_name,
platform,
trim(goal_name) goal_name,
goal_type,
account,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, platform, goal_name ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.conversion_goals` 
WHERE platform = 'Google Analytics'

) 

WHERE lv = time_of_entry
2018-04-06 20:32:47,561: 20:32:47 | 9 of 75 OK created table model agency_data_pipeline.conversion_goals_proc [CREATE TABLE in 1.76s]
2018-04-06 20:32:47,869: Model SQL (adwords_urls):
SELECT
campaignid,
lower(trim(regexp_replace(replace(replace(replace(replace(finalurl,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url

FROM (

SELECT  
campaignid,
finalurl,
first_value(finalurl) OVER (PARTITION BY campaignid ORDER BY day DESC) lv
FROM `growth-engines-pipeline.adwords.FINAL_URL_REPORT`
)

WHERE lv = finalurl
group by campaignid, url
order by campaignid asc
2018-04-06 20:32:49,481: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063bf128>]}
2018-04-06 20:32:49,626: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10629f4a8>]}
2018-04-06 20:32:49,698: 20:32:49 | 10 of 75 OK created table model agency_data_pipeline.bing_ads_ads.... [CREATE TABLE in 2.85s]
2018-04-06 20:32:49,888: 20:32:49 | 11 of 75 OK created table model agency_data_pipeline.ga_conversions.. [CREATE TABLE in 2.80s]
2018-04-06 20:32:50,043: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064597b8>]}
2018-04-06 20:32:50,230: 20:32:50 | 12 of 75 OK created table model agency_data_pipeline.adwords_urls.... [CREATE TABLE in 2.88s]
2018-04-06 20:32:50,230: 20:32:50 | 13 of 75 START table model agency_data_pipeline.shopify_refunds_proc. [RUN]
2018-04-06 20:32:50,231: Compiling model.agency_data_pipeline.shopify_refunds_proc
2018-04-06 20:32:50,236: Acquiring new bigquery connection "shopify_refunds_proc".
2018-04-06 20:32:50,236: Re-using an available connection from the pool.
2018-04-06 20:32:50,236: Fetching data for query shopify_refunds_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:32:50,230: 20:32:50 | 14 of 75 START table model agency_data_pipeline.ga_mcf_proc.......... [RUN]
2018-04-06 20:32:50,237: Compiling model.agency_data_pipeline.ga_mcf_proc
2018-04-06 20:32:50,230: 20:32:50 | 15 of 75 START table model agency_data_pipeline.fb_ads_insights...... [RUN]
2018-04-06 20:32:50,242: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_proc"
2018-04-06 20:32:50,231: 20:32:50 | 16 of 75 START table model agency_data_pipeline.bing_ads_conversions. [RUN]
2018-04-06 20:32:50,243: Compiling model.agency_data_pipeline.fb_ads_insights
2018-04-06 20:32:50,244: Compiling model.agency_data_pipeline.bing_ads_conversions
2018-04-06 20:32:50,249: Acquiring new bigquery connection "fb_ads_insights".
2018-04-06 20:32:50,253: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_conversions"
2018-04-06 20:32:50,253: Re-using an available connection from the pool.
2018-04-06 20:32:50,257: Fetching data for query fb_ads_insights:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:32:50,258: Acquiring new bigquery connection "ga_mcf_proc".
2018-04-06 20:32:50,259: Acquiring new bigquery connection "bing_ads_conversions".
2018-04-06 20:32:50,259: Re-using an available connection from the pool.
2018-04-06 20:32:50,261: Re-using an available connection from the pool.
2018-04-06 20:32:50,939: Model SQL (bing_ads_conversions):
SELECT
date, 
a.account account, 
a.channel channel,
a.platform platform,
campaignid,
campaignname,
sum( case when b.goal_type = 'Transactions' then conversions else 0 end ) as transactions
FROM

  ( 
SELECT  
cast(gregoriandate as date) date,
replace(accountname,',','') account,
'Paid' as channel,
'Bing Ads' as platform,
trim(replace(replace(lower(goal),',',''),' ','')) goal,
goalid,
campaignid,
campaignname,
conversions,
_sdc_sequence,
first_value(_sdc_sequence) OVER (PARTITION BY campaignid, goalid, gregoriandate ORDER BY _sdc_sequence DESC) lv
FROM `growth-engines-pipeline.bing_ads.goals_and_funnels_report` 

  ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`conversion_goals_proc` b
ON (
	a.account = b.account AND
	a.platform = b.platform AND
	a.goal = b.goal_name
)
where a.lv = a._sdc_sequence
group by date, account, channel, platform, campaignid, campaignname
2018-04-06 20:32:50,968: Model SQL (ga_mcf_proc):
SELECT 
date,
account,
'Google Analytics' as lookup_platform,
source_medium_path,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(1)])) as source,
trim(lower(split(split(source_medium_path,'->')[SAFE_ORDINAL(1)],'/')[SAFE_ORDINAL(2)])) as medium,
first_interaction_campaign campaign,
cast(regexp_replace(transaction_id, r'#', '') as int64) transactionid,
max(first_interaction_conversions) transactions,
max(first_interaction_conversion_value) revenue
FROM `growth-engines-pipeline.agency_data_pipeline.ga_mcf`
where account in (select account from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` where platform = 'Google Analytics')
group by date, account, source, medium, campaign, source_medium_path, lookup_platform, transactionid
2018-04-06 20:32:51,462: Writing injected SQL for node "model.agency_data_pipeline.shopify_refunds_proc"
2018-04-06 20:32:51,530: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights"
2018-04-06 20:32:52,135: Model SQL (fb_ads_insights):




with fb_ads_insights as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
		    
	   

)

select
date_start date,
campaign_id,
campaign_name campaign,
ad_id,
account_name account,
max(spend) cost,
max(reach) impressions,
max(inline_link_clicks) clicks
from fb_ads_insights
group by date, campaign_id, ad_id, account, campaign


2018-04-06 20:32:52,284: Model SQL (shopify_refunds_proc):




with refunds as (

	
	SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal,
	line_item.variant_id variant_id,
	line_item.id refund_id,
 	_sdc_sequence
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(refunds), unnest(refund_line_items)
  	where financial_status like '%refund%'
	
	

)

SELECT * 
FROM 
	(
    SELECT
	order_number,
	checkout_id,
	financial_status,
	line_item_id,
	quantity,
	subtotal refund_amount,
	variant_id,
	refund_id,
 	_sdc_sequence,
    first_value(_sdc_sequence) OVER (PARTITION BY order_number, line_item_id ORDER BY _sdc_sequence DESC) lv
    FROM refunds
   	) 
WHERE lv = _sdc_sequence


2018-04-06 20:32:53,106: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108814f98>]}
2018-04-06 20:32:53,291: 20:32:53 | 16 of 75 OK created table model agency_data_pipeline.bing_ads_conversions [CREATE TABLE in 2.86s]
2018-04-06 20:32:53,291: 20:32:53 | 17 of 75 START table model agency_data_pipeline.fb_ads_insights_conversions [RUN]
2018-04-06 20:32:53,292: Compiling model.agency_data_pipeline.fb_ads_insights_conversions
2018-04-06 20:32:53,297: Acquiring new bigquery connection "fb_ads_insights_conversions".
2018-04-06 20:32:53,297: Re-using an available connection from the pool.
2018-04-06 20:32:53,297: Fetching data for query fb_ads_insights_conversions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:32:53,622: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_insights_conversions"
2018-04-06 20:32:54,306: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064bd978>]}
2018-04-06 20:32:54,398: Model SQL (fb_ads_insights_conversions):




with fb_ads_insights_conversions as (

	    
		   	SELECT 
			date_start,
			campaign_id,
			campaign_name,
			ad_id,
			account_name,
			spend,
			reach,
			inline_link_clicks,
			_sdc_sequence,
			action_type,
			value
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads_insights`
			cross join unnest(actions)
		    
	   

)

SELECT * 
FROM 
	(
    SELECT
    date_start date,
    campaign_id,
    campaign_name campaign,
    ad_id,
    account_name account,
    action_type,
    value conversions,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id, date_start ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads_insights_conversions
   	)
where lv = _sdc_sequence
and action_type like '%purchase%'


2018-04-06 20:32:54,491: 20:32:54 | 15 of 75 OK created table model agency_data_pipeline.fb_ads_insights. [CREATE TABLE in 4.06s]
2018-04-06 20:32:54,491: 20:32:54 | 18 of 75 START table model agency_data_pipeline.fb_adcreative........ [RUN]
2018-04-06 20:32:54,492: Compiling model.agency_data_pipeline.fb_adcreative
2018-04-06 20:32:54,496: Acquiring new bigquery connection "fb_adcreative".
2018-04-06 20:32:54,497: Re-using an available connection from the pool.
2018-04-06 20:32:54,497: Fetching data for query fb_adcreative:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:32:54,836: Writing injected SQL for node "model.agency_data_pipeline.fb_adcreative"
2018-04-06 20:32:54,879: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063bf128>]}
2018-04-06 20:32:55,083: 20:32:55 | 13 of 75 OK created table model agency_data_pipeline.shopify_refunds_proc [CREATE TABLE in 4.65s]
2018-04-06 20:32:55,083: 20:32:55 | 19 of 75 START table model agency_data_pipeline.adwords_ads.......... [RUN]
2018-04-06 20:32:55,084: Compiling model.agency_data_pipeline.adwords_ads
2018-04-06 20:32:55,088: Writing injected SQL for node "model.agency_data_pipeline.adwords_ads"
2018-04-06 20:32:55,281: Acquiring new bigquery connection "adwords_ads".
2018-04-06 20:32:55,282: Re-using an available connection from the pool.
2018-04-06 20:32:55,884: Model SQL (adwords_ads):
SELECT  
day,
campaignid,
a.account as account,
utm_campaign,
sum( case when b.goal_type = 'Transaction' then conversions else 0 end ) as transactions
FROM (

	SELECT  
	day,
	adid,
	campaignid,
	account,
	lower(conversionname) conversionname,
	conversions,
	lower(campaign) utm_campaign,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY campaignid, day ORDER BY _sdc_sequence DESC) lv
	FROM
	`growth-engines-pipeline.adwords.AD_PERFORMANCE_REPORT`

) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_conversions` b
ON ( a.conversionname = b.goal_name
	AND a.account = b.account )
WHERE lv = _sdc_sequence
group by day, campaignid, account, utm_campaign
2018-04-06 20:32:55,936: Model SQL (fb_adcreative):




with fb_adcreative as (


	    
		   	SELECT 
			id,
			object_url,
			url_tags,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.adcreative`
		    
	   
)

select creative_id, max(url) url
from (
  select
  id creative_id,
  lower(trim(regexp_replace(replace(replace(replace(replace(object_url,'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
  first_value(_sdc_sequence) OVER (PARTITION BY id ORDER BY _sdc_sequence DESC) lv,
  _sdc_sequence
  from fb_adcreative
  )
where lv = _sdc_sequence
group by creative_id


2018-04-06 20:32:56,382: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4da0>]}
2018-04-06 20:32:56,605: 20:32:56 | 14 of 75 OK created table model agency_data_pipeline.ga_mcf_proc..... [CREATE TABLE in 6.14s]
2018-04-06 20:32:56,605: 20:32:56 | 20 of 75 START table model agency_data_pipeline.mappings_ga_proc..... [RUN]
2018-04-06 20:32:56,605: Compiling model.agency_data_pipeline.mappings_ga_proc
2018-04-06 20:32:56,609: Writing injected SQL for node "model.agency_data_pipeline.mappings_ga_proc"
2018-04-06 20:32:56,911: Acquiring new bigquery connection "mappings_ga_proc".
2018-04-06 20:32:56,912: Re-using an available connection from the pool.
2018-04-06 20:32:57,661: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108814f98>]}
2018-04-06 20:32:57,685: Model SQL (mappings_ga_proc):
select 
client,
account,
client_name,
source,
medium,
max(platform_n) platform,
max(channel_n) channel,
time_of_entry
from  ( 

SELECT  
client,
account,
client_name,
source,
medium,
platform as platform_n,
channel as channel_n,
time_of_entry,
first_value(time_of_entry) OVER (PARTITION BY client, source, medium ORDER BY time_of_entry DESC) lv
FROM `growth-engines-pipeline.agency_data_pipeline.mappings_ga` 

) 

WHERE lv = time_of_entry
and client in (select client from `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` )
group by client, account, client_name, source, medium, platform_n, channel_n, time_of_entry
2018-04-06 20:32:57,845: 20:32:57 | 17 of 75 OK created table model agency_data_pipeline.fb_ads_insights_conversions [CREATE TABLE in 4.37s]
2018-04-06 20:32:58,151: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064bd978>]}
2018-04-06 20:32:58,157: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1063bf128>]}
2018-04-06 20:32:58,343: 20:32:58 | 18 of 75 OK created table model agency_data_pipeline.fb_adcreative... [CREATE TABLE in 3.66s]
2018-04-06 20:32:58,632: 20:32:58 | 19 of 75 OK created table model agency_data_pipeline.adwords_ads..... [CREATE TABLE in 3.07s]
2018-04-06 20:32:59,864: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4da0>]}
2018-04-06 20:33:00,055: 20:33:00 | 20 of 75 OK created table model agency_data_pipeline.mappings_ga_proc [CREATE TABLE in 3.26s]
2018-04-06 20:33:00,849: 20:33:00 | 21 of 75 START table model agency_data_pipeline.fb_ads............... [RUN]
2018-04-06 20:33:00,849: Compiling model.agency_data_pipeline.fb_ads
2018-04-06 20:33:00,849: 20:33:00 | 22 of 75 START table model agency_data_pipeline.shopify_customers_proc [RUN]
2018-04-06 20:33:00,855: Acquiring new bigquery connection "fb_ads".
2018-04-06 20:33:00,855: Compiling model.agency_data_pipeline.shopify_customers_proc
2018-04-06 20:33:00,855: Re-using an available connection from the pool.
2018-04-06 20:33:00,862: Fetching data for query fb_ads:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'FB Ads'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:00,863: Acquiring new bigquery connection "shopify_customers_proc".
2018-04-06 20:33:00,863: Re-using an available connection from the pool.
2018-04-06 20:33:00,863: Fetching data for query shopify_customers_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:01,192: Writing injected SQL for node "model.agency_data_pipeline.shopify_customers_proc"
2018-04-06 20:33:01,267: Writing injected SQL for node "model.agency_data_pipeline.fb_ads"
2018-04-06 20:33:02,571: Model SQL (shopify_customers_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`





with customers as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	cast(created_at as date) created_at,
	id,
	first_name,
	last_name,
	email,
	_sdc_sequence,
	first_value(_sdc_sequence) over (partition by id, _sdc_sequence order by _sdc_sequence desc) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.customers` 
	
	

)

SELECT
account,
client,
platform,
id,
min(created_at) created_at,
max(first_name) first_name,
max(last_name) last_name,
max(email) email
FROM (
	SELECT
	b.account,
	b.client,
	b.platform,
	created_at,
	id,
	first_name,
	last_name,
	email
	FROM customers a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
	ON ( a.client_name = b.client_name
	  AND a.lookup_platform = b.platform )
	where a.lv = a._sdc_sequence
)
group by account, client, platform, id

2018-04-06 20:33:02,691: Model SQL (fb_ads):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative`





with fb_ads as (

	    
		   	SELECT 
			id ad_id,
			creative.creative_id creative_id,
			_sdc_sequence
			FROM `growth-engines-pipeline.fb_ads_luca_danni.ads`
		     
	   

)

SELECT
a.ad_id,
b.creative_id,
b.url
FROM (
    SELECT
    ad_id,
    creative_id,
    first_value(_sdc_sequence) OVER (PARTITION BY ad_id ORDER BY _sdc_sequence DESC) lv,
    _sdc_sequence
    FROM fb_ads
    ) a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`fb_adcreative` b
ON (
	a.creative_id = b.creative_id 
)
WHERE a.lv = a._sdc_sequence


2018-04-06 20:33:04,884: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c52e8>]}
2018-04-06 20:33:05,064: 20:33:05 | 21 of 75 OK created table model agency_data_pipeline.fb_ads.......... [CREATE TABLE in 4.03s]
2018-04-06 20:33:06,910: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10647f908>]}
2018-04-06 20:33:07,097: 20:33:07 | 22 of 75 OK created table model agency_data_pipeline.shopify_customers_proc [CREATE TABLE in 6.05s]
2018-04-06 20:33:07,205: 20:33:07 | 23 of 75 START table model agency_data_pipeline.shopify_orders_proc.. [RUN]
2018-04-06 20:33:07,205: Compiling model.agency_data_pipeline.shopify_orders_proc
2018-04-06 20:33:07,205: 20:33:07 | 24 of 75 START table model agency_data_pipeline.agg_customers_union.. [RUN]
2018-04-06 20:33:07,212: Compiling model.agency_data_pipeline.agg_customers_union
2018-04-06 20:33:07,216: Writing injected SQL for node "model.agency_data_pipeline.agg_customers_union"
2018-04-06 20:33:07,216: Acquiring new bigquery connection "shopify_orders_proc".
2018-04-06 20:33:07,216: Re-using an available connection from the pool.
2018-04-06 20:33:07,216: Fetching data for query shopify_orders_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:07,205: 20:33:07 | 25 of 75 START table model agency_data_pipeline.ga_mcf_stats......... [RUN]
2018-04-06 20:33:07,205: 20:33:07 | 26 of 75 START table model agency_data_pipeline.shopify_products_proc [RUN]
2018-04-06 20:33:07,218: Compiling model.agency_data_pipeline.ga_mcf_stats
2018-04-06 20:33:07,218: Compiling model.agency_data_pipeline.shopify_products_proc
2018-04-06 20:33:07,223: Writing injected SQL for node "model.agency_data_pipeline.ga_mcf_stats"
2018-04-06 20:33:07,230: Acquiring new bigquery connection "shopify_products_proc".
2018-04-06 20:33:07,230: Re-using an available connection from the pool.
2018-04-06 20:33:07,230: Fetching data for query shopify_products_proc:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Shopify'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:07,353: Acquiring new bigquery connection "ga_mcf_stats".
2018-04-06 20:33:07,353: Re-using an available connection from the pool.
2018-04-06 20:33:07,356: Acquiring new bigquery connection "agg_customers_union".
2018-04-06 20:33:07,356: Re-using an available connection from the pool.
2018-04-06 20:33:07,597: Writing injected SQL for node "model.agency_data_pipeline.shopify_orders_proc"
2018-04-06 20:33:07,607: Writing injected SQL for node "model.agency_data_pipeline.shopify_products_proc"
2018-04-06 20:33:07,926: Model SQL (agg_customers_union):
SELECT *
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_customers_proc`
2018-04-06 20:33:07,950: Model SQL (ga_mcf_stats):
SELECT  
date,
a.account account,
b.client client,
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
lower(a.source) source,
lower(a.medium) medium,
lower(campaign) campaign,
transactionid,
sum(transactions) first_touch_transactions,
sum(revenue) first_touch_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_proc` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b 
ON ( a.account = b.account and
	a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( lower(a.source) = c.source
  AND lower(a.medium) = c.medium 
  and a.account = c.account )
group by date, account, client, source, medium, campaign, platform, channel, transactionid
2018-04-06 20:33:08,299: Model SQL (shopify_products_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with products as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	product_type,
	product_id,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY product_id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.products` 
	cross join unnest(variants)
	
	

)

SELECT
b.account,
b.client,
b.platform,
max(product_type) product_type,
product_id
FROM products a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
where a.lv = a._sdc_sequence
group by product_id, account, client, platform


2018-04-06 20:33:08,331: Model SQL (shopify_orders_proc):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc`





with orders as (

	
	SELECT
	'lucadanni' client_name,
	'Shopify' as lookup_platform,
	created_at,
	order_number,
	quantity,
	cast(pre_tax_price as float64) price, 
	total_line_items_price total_order_price_undiscounted,
	total_discounts,
	cast(discounted_price as float64) total_order_shipping_price,
	total_price_usd total_order_price_incl_shipping,
	checkout_id,
	product_id, 
	landing_site,
	sku, 
	variant_title, 
	variant_id,
	_id line_item_id,
	customer.id customer_id,
	customer.orders_count orders_count,
	customer.created_at customer_created_at,
	customer.last_order_id last_order_id,
	financial_status,
	_sdc_sequence,
	first_value(_sdc_sequence) OVER (PARTITION BY order_number, _id ORDER BY _sdc_sequence DESC) lv
	FROM `growth-engines-pipeline.shopify_lucadanni.orders` 
	cross join unnest(line_items), unnest(shipping_lines)
	where source_name != 'shopify_draft_order'
	
	

)

SELECT
b.account,
b.client,
b.platform,
created_at,
a.order_number,
a.quantity,
c.quantity refund_quantity,
case when c.quantity is not null then a.quantity - c.quantity else a.quantity end as final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
case when refund_amount is not null then price - refund_amount else price end as final_price,
a.checkout_id,
a.product_id, 
landing_site,
sku, 
variant_title, 
a.variant_id,
a.line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
a.financial_status
FROM orders a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name
  AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_refunds_proc` c
ON ( a.order_number = c.order_number
	AND a.line_item_id = c.line_item_id )   	
where a.lv = a._sdc_sequence


2018-04-06 20:33:10,478: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf3c8>]}
2018-04-06 20:33:10,666: 20:33:10 | 26 of 75 OK created table model agency_data_pipeline.shopify_products_proc [CREATE TABLE in 3.26s]
2018-04-06 20:33:10,666: 20:33:10 | 27 of 75 START table model agency_data_pipeline.bing_ads_stats....... [RUN]
2018-04-06 20:33:10,666: Compiling model.agency_data_pipeline.bing_ads_stats
2018-04-06 20:33:10,671: Writing injected SQL for node "model.agency_data_pipeline.bing_ads_stats"
2018-04-06 20:33:10,746: Acquiring new bigquery connection "bing_ads_stats".
2018-04-06 20:33:10,746: Re-using an available connection from the pool.
2018-04-06 20:33:11,175: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062b21d0>]}
2018-04-06 20:33:11,366: 20:33:11 | 24 of 75 OK created table model agency_data_pipeline.agg_customers_union [CREATE TABLE in 3.96s]
2018-04-06 20:33:11,409: Model SQL (bing_ads_stats):
select
a.date, 
a.account, 
a.channel,
a.platform,
url,
a.campaignname campaign,
utm_campaign,
cost,
clicks,
impressions,
transactions
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_ads` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_conversions` b
ON (
	a.date = b.date AND
	a.account = b.account AND
	a.campaignid = b.campaignid

)
2018-04-06 20:33:12,266: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106495668>]}
2018-04-06 20:33:12,464: 20:33:12 | 25 of 75 OK created table model agency_data_pipeline.ga_mcf_stats.... [CREATE TABLE in 5.05s]
2018-04-06 20:33:13,595: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf3c8>]}
2018-04-06 20:33:13,778: 20:33:13 | 27 of 75 OK created table model agency_data_pipeline.bing_ads_stats.. [CREATE TABLE in 2.93s]
2018-04-06 20:33:17,006: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c5588>]}
2018-04-06 20:33:17,192: 20:33:17 | 23 of 75 OK created table model agency_data_pipeline.shopify_orders_proc [CREATE TABLE in 9.80s]
2018-04-06 20:33:17,193: 20:33:17 | 28 of 75 START table model agency_data_pipeline.agg_orders_union..... [RUN]
2018-04-06 20:33:17,193: 20:33:17 | 29 of 75 START table model agency_data_pipeline.ga_traffic........... [RUN]
2018-04-06 20:33:17,193: 20:33:17 | 30 of 75 START table model agency_data_pipeline.agg_products......... [RUN]
2018-04-06 20:33:17,193: Compiling model.agency_data_pipeline.agg_orders_union
2018-04-06 20:33:17,193: 20:33:17 | 31 of 75 START table model agency_data_pipeline.adwords_join......... [RUN]
2018-04-06 20:33:17,193: Compiling model.agency_data_pipeline.ga_traffic
2018-04-06 20:33:17,193: Compiling model.agency_data_pipeline.agg_products
2018-04-06 20:33:17,197: Writing injected SQL for node "model.agency_data_pipeline.agg_orders_union"
2018-04-06 20:33:17,197: Compiling model.agency_data_pipeline.adwords_join
2018-04-06 20:33:17,207: Writing injected SQL for node "model.agency_data_pipeline.agg_products"
2018-04-06 20:33:17,212: Acquiring new bigquery connection "ga_traffic".
2018-04-06 20:33:17,216: Writing injected SQL for node "model.agency_data_pipeline.adwords_join"
2018-04-06 20:33:17,217: Re-using an available connection from the pool.
2018-04-06 20:33:17,217: Fetching data for query ga_traffic:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'GA Traffic'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:17,341: Acquiring new bigquery connection "adwords_join".
2018-04-06 20:33:17,341: Acquiring new bigquery connection "agg_orders_union".
2018-04-06 20:33:17,342: Re-using an available connection from the pool.
2018-04-06 20:33:17,342: Re-using an available connection from the pool.
2018-04-06 20:33:17,394: Acquiring new bigquery connection "agg_products".
2018-04-06 20:33:17,394: Re-using an available connection from the pool.
2018-04-06 20:33:17,876: Model SQL (adwords_join):
select
a.day,
a.campaignid, 
a.campaign,
a.account, 
channel,
platform,
url,
utm_campaign,
cost,
impressions,
clicks,
impression_share_num,
impression_share_den,
transactions
FROM ( 
	
	select
	day,
	a.campaign,
	a.campaignid, 
	account, 
	channel,
	platform,
	url,
	cost,
	impressions,
	clicks,
	impression_share_num,
	impression_share_den
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_campaigns` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_urls` b
	ON a.campaignid = b.campaignid

) a 
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_ads` b
ON ( a.campaignid = b.campaignid
	and a.day = b.day )
2018-04-06 20:33:17,991: Model SQL (agg_orders_union):
SELECT
account,
client,
platform,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`shopify_orders_proc`
2018-04-06 20:33:18,008: Model SQL (agg_products):
SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`shopify_products_proc`
2018-04-06 20:33:18,340: Fetching data for query ga_traffic:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:19,637: Writing injected SQL for node "model.agency_data_pipeline.ga_traffic"
2018-04-06 20:33:20,162: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10881cac8>]}
2018-04-06 20:33:20,353: 20:33:20 | 30 of 75 OK created table model agency_data_pipeline.agg_products.... [CREATE TABLE in 2.97s]
2018-04-06 20:33:20,353: 20:33:20 | 32 of 75 START table model agency_data_pipeline.ga_transactions...... [RUN]
2018-04-06 20:33:20,353: Compiling model.agency_data_pipeline.ga_transactions
2018-04-06 20:33:20,362: Acquiring new bigquery connection "ga_transactions".
2018-04-06 20:33:20,362: Re-using an available connection from the pool.
2018-04-06 20:33:20,362: Fetching data for query ga_transactions:


        select
            client_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc`

        
        ##where 1 = 1
        where platform = 'Google Analytics'
        
        
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:20,375: Model SQL (ga_traffic):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'GA Traffic' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			sessions,
			## goal completion columns
							
				goalcompletionsall as goal_completions,		
			
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, campaign ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni_traffic.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
max(sessions) sessions,
max(goal_completions) goal_completions
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url


2018-04-06 20:33:21,135: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10881c780>]}
2018-04-06 20:33:21,322: 20:33:21 | 31 of 75 OK created table model agency_data_pipeline.adwords_join.... [CREATE TABLE in 3.94s]
2018-04-06 20:33:21,660: Fetching data for query ga_transactions:


        select
            goal_name as value

        from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`

        
        ##where 1 = 1
        where goal_type = 'Conversion'
        
        
        
        ##and 2 = 2
        and client_name = 'lucadanni'
        

        group by 1
        order by count(*) desc

        
        limit 50
        
2018-04-06 20:33:21,971: Writing injected SQL for node "model.agency_data_pipeline.ga_transactions"
2018-04-06 20:33:22,651: Model SQL (ga_transactions):
-- depends_on: `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc`, `growth-engines-pipeline`.`agency_data_pipeline`.`ga_conversions`


##`growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` 



with ga_report as (

	    

	    	
	    	
		   	SELECT
		   	'lucadanni' as client_name,
		   	'Google Analytics' as lookup_platform,
			lower(trim(regexp_replace(replace(replace(replace(replace(CONCAT(hostname,landingpagepath),'www.',''),'http://',''),'https://',''),'.html',''),r'\?.*$',''),'/')) as url,
			date,
			lower(source) source,
			lower(medium) medium,
			lower(campaign) campaign,
			cast(regexp_replace(transactionid, r'#', '') as int64) transactionid,
			transactions last_touch_transactions,
			(transactionrevenue - transactionshipping - transactiontax) as last_touch_revenue,
			transactionshipping,
			transactiontax,
			_sdc_sequence,
			first_value(_sdc_sequence) OVER (PARTITION BY hostname, landingpagepath, date, source, medium, transactionid ORDER BY _sdc_sequence DESC) lv
			FROM `growth-engines-pipeline.ga_lucadanni.report` 

		    
	   

)


SELECT  
cast(date as date) date,
b.account,
b.client client,
c.source source,
c.medium medium,
a.campaign campaign,
concat(a.source, ' / ', a.medium) source_medium,  
case when c.platform is null then "Unmapped" else c.platform end as platform,
case when c.channel is null then "Unmapped" else c.channel end as channel,
regexp_replace(url, r'offers.|offer.|get.|info.|pos.|go.|join.|pages.','') url,
transactionid,
max(last_touch_transactions) last_touch_transactions,
max(last_touch_revenue) last_touch_revenue,
max(transactionshipping) last_touch_shipping,
max(transactiontax) last_touch_tax
FROM ga_report a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`clients_proc` b 
ON ( a.client_name = b.client_name 
	AND a.lookup_platform = b.platform )
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`mappings_ga_proc` c
ON ( a.source = c.source
  AND a.medium = c.medium 
  AND a.client_name = c.client_name )
GROUP BY date, account, client, source, medium, campaign, source_medium, platform, channel, url, transactionid


2018-04-06 20:33:26,639: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10647f908>]}
2018-04-06 20:33:26,828: 20:33:26 | 28 of 75 OK created table model agency_data_pipeline.agg_orders_union [CREATE TABLE in 9.45s]
2018-04-06 20:33:29,195: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c518>]}
2018-04-06 20:33:29,382: 20:33:29 | 32 of 75 OK created table model agency_data_pipeline.ga_transactions. [CREATE TABLE in 8.84s]
2018-04-06 20:33:32,406: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064bdb38>]}
2018-04-06 20:33:32,596: 20:33:32 | 29 of 75 OK created table model agency_data_pipeline.ga_traffic...... [CREATE TABLE in 15.21s]
2018-04-06 20:33:32,596: 20:33:32 | 33 of 75 START table model agency_data_pipeline.adwords_impression_share [RUN]
2018-04-06 20:33:32,597: 20:33:32 | 34 of 75 START table model agency_data_pipeline.fb_ads_stats......... [RUN]
2018-04-06 20:33:32,597: Compiling model.agency_data_pipeline.adwords_impression_share
2018-04-06 20:33:32,597: 20:33:32 | 35 of 75 START table model agency_data_pipeline.agg_transaction_order_number [RUN]
2018-04-06 20:33:32,597: 20:33:32 | 36 of 75 START table model agency_data_pipeline.agg_transaction_line_item [RUN]
2018-04-06 20:33:32,597: Compiling model.agency_data_pipeline.fb_ads_stats
2018-04-06 20:33:32,601: Writing injected SQL for node "model.agency_data_pipeline.adwords_impression_share"
2018-04-06 20:33:32,601: Compiling model.agency_data_pipeline.agg_transaction_order_number
2018-04-06 20:33:32,601: Compiling model.agency_data_pipeline.agg_transaction_line_item
2018-04-06 20:33:32,606: Writing injected SQL for node "model.agency_data_pipeline.fb_ads_stats"
2018-04-06 20:33:32,609: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_order_number"
2018-04-06 20:33:32,613: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item"
2018-04-06 20:33:32,615: Acquiring new bigquery connection "adwords_impression_share".
2018-04-06 20:33:32,615: Re-using an available connection from the pool.
2018-04-06 20:33:32,672: Acquiring new bigquery connection "fb_ads_stats".
2018-04-06 20:33:32,672: Re-using an available connection from the pool.
2018-04-06 20:33:32,674: Acquiring new bigquery connection "agg_transaction_order_number".
2018-04-06 20:33:32,676: Re-using an available connection from the pool.
2018-04-06 20:33:32,676: Acquiring new bigquery connection "agg_transaction_line_item".
2018-04-06 20:33:32,679: Re-using an available connection from the pool.
2018-04-06 20:33:33,271: Model SQL (agg_transaction_order_number):
SELECT
client,
cast(created_at as date) date,
order_number,
customer_id,
sum(final_quantity) final_quantity,
sum(final_price) final_price,
max(total_order_shipping_price) shipping_price
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
GROUP BY client, created_at, order_number, customer_id
2018-04-06 20:33:33,297: Model SQL (agg_transaction_line_item):
SELECT
client,
created_at,
order_number,
quantity,
refund_quantity,
final_quantity,
price, 
total_order_price_undiscounted,
total_discounts,
total_order_shipping_price,
total_order_price_incl_shipping,
refund_amount,
final_price,
checkout_id,
product_id, 
landing_site,
sku, 
variant_title, 
variant_id,
line_item_id,	
customer_id,
orders_count,
customer_created_at,
last_order_id,
financial_status
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_orders_union`
2018-04-06 20:33:33,344: Model SQL (fb_ads_stats):
with cost as (

    select 
        date, account, ad_id, campaign,
        cost, impressions, clicks, null as conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights`
),

conversions as (

    select 
        date, account, ad_id, campaign,
        null as cost, null as impressions, null as clicks, conversions
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_insights_conversions`
),

urls as (

    select ad_id, url
    from `growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads`
)


SELECT
    cast(date as date) date,
    'FB Ads' platform,
    'Paid' channel,
    account, 
    b.url url,
    campaign,
    lower(campaign) utm_campaign, 
    sum(cost) cost,
    sum(impressions) impressions,
    sum(clicks) clicks,
    sum(conversions) transactions
FROM
(
    SELECT *
    FROM 
      cost
    UNION ALL
    SELECT *
    FROM 
      conversions
) a
LEFT JOIN urls b
ON ( a.ad_id = b.ad_id )
group by date, platform, channel, account, url, campaign, utm_campaign
2018-04-06 20:33:33,414: Model SQL (adwords_impression_share):
SELECT 
cast(day as date) date, 
account, 
channel,
platform,
sum(impression_share_num) impressions,
sum(impression_share_den) available_impressions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel
2018-04-06 20:33:35,509: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062e1cc0>]}
2018-04-06 20:33:35,616: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c5588>]}
2018-04-06 20:33:36,087: 20:33:36 | 34 of 75 OK created table model agency_data_pipeline.fb_ads_stats.... [CREATE TABLE in 2.91s]
2018-04-06 20:33:36,088: 20:33:36 | 37 of 75 START table model agency_data_pipeline.adwords_stats........ [RUN]
2018-04-06 20:33:36,088: Compiling model.agency_data_pipeline.adwords_stats
2018-04-06 20:33:36,092: Writing injected SQL for node "model.agency_data_pipeline.adwords_stats"
2018-04-06 20:33:36,094: Acquiring new bigquery connection "adwords_stats".
2018-04-06 20:33:36,094: Re-using an available connection from the pool.
2018-04-06 20:33:36,279: 20:33:36 | 33 of 75 OK created table model agency_data_pipeline.adwords_impression_share [CREATE TABLE in 3.02s]
2018-04-06 20:33:36,532: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x108823c18>]}
2018-04-06 20:33:36,718: 20:33:36 | 35 of 75 OK created table model agency_data_pipeline.agg_transaction_order_number [CREATE TABLE in 3.93s]
2018-04-06 20:33:36,728: Model SQL (adwords_stats):
SELECT 
cast(day as date) date, 
account, 
platform,
channel,
url,
utm_campaign,
campaign,
sum(cost) cost,
sum(impressions) impressions,
sum(clicks) clicks,
sum(transactions) transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`adwords_join`
group by date, account, platform, channel, url, campaign, utm_campaign
2018-04-06 20:33:38,891: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062c4320>]}
2018-04-06 20:33:39,080: 20:33:39 | 37 of 75 OK created table model agency_data_pipeline.adwords_stats... [CREATE TABLE in 2.80s]
2018-04-06 20:33:40,870: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c5ef0>]}
2018-04-06 20:33:41,068: 20:33:41 | 36 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item [CREATE TABLE in 8.27s]
2018-04-06 20:33:41,068: 20:33:41 | 38 of 75 START table model agency_data_pipeline.agg_ga_transaction... [RUN]
2018-04-06 20:33:41,068: Compiling model.agency_data_pipeline.agg_ga_transaction
2018-04-06 20:33:41,073: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_transaction"
2018-04-06 20:33:41,074: Acquiring new bigquery connection "agg_ga_transaction".
2018-04-06 20:33:41,074: Re-using an available connection from the pool.
2018-04-06 20:33:41,662: Model SQL (agg_ga_transaction):
with ga as (

    select 
        date, account, client, 
        channel as last_touch_channel, 
        platform as last_touch_platform, 
        url as last_touch_url, 
        campaign as last_touch_utm_campaign, 
        '' as first_touch_channel, 
        '' as first_touch_platform, 
        '' as first_touch_utm_campaign, 
        transactionid,
        last_touch_transactions, last_touch_revenue,
        last_touch_shipping, last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_mcf as (

    select 
        date, account, client, 
        '' as last_touch_channel,
        '' as last_touch_platform,
        '' as last_touch_url,
        '' as last_touch_utm_campaign, 
        channel as first_touch_channel, 
        platform as first_touch_platform, 
        campaign as first_touch_utm_campaign, 
        transactionid, 
        null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        first_touch_transactions, first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    transactionid,
    max(last_touch_channel) last_touch_channel, 
    max(last_touch_platform) last_touch_platform, 
    max(last_touch_url) last_touch_url, 
    max(last_touch_utm_campaign) last_touch_utm_campaign, 
    max(first_touch_channel) first_touch_channel, 
    max(first_touch_platform) first_touch_platform, 
    max(first_touch_utm_campaign) first_touch_utm_campaign,
    sum(last_touch_transactions) last_touch_transactions,
    sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(last_touch_shipping) - sum(last_touch_tax) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, transactionid
2018-04-06 20:33:47,053: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064cf908>]}
2018-04-06 20:33:47,289: 20:33:47 | 38 of 75 OK created table model agency_data_pipeline.agg_ga_transaction [CREATE TABLE in 5.99s]
2018-04-06 20:33:47,290: 20:33:47 | 39 of 75 START table model agency_data_pipeline.agg_transaction_line_item_type [RUN]
2018-04-06 20:33:47,290: 20:33:47 | 40 of 75 START table model agency_data_pipeline.agg_ga_campaign...... [RUN]
2018-04-06 20:33:47,290: Compiling model.agency_data_pipeline.agg_transaction_line_item_type
2018-04-06 20:33:47,290: Compiling model.agency_data_pipeline.agg_ga_campaign
2018-04-06 20:33:47,294: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_line_item_type"
2018-04-06 20:33:47,299: Writing injected SQL for node "model.agency_data_pipeline.agg_ga_campaign"
2018-04-06 20:33:47,300: Acquiring new bigquery connection "agg_transaction_line_item_type".
2018-04-06 20:33:47,300: Re-using an available connection from the pool.
2018-04-06 20:33:47,300: Acquiring new bigquery connection "agg_ga_campaign".
2018-04-06 20:33:47,300: Re-using an available connection from the pool.
2018-04-06 20:33:47,888: Model SQL (agg_transaction_line_item_type):
SELECT
client,
product_id,
product_type,
customer_id,
sku,
order_number,
created_at,
final_quantity,
final_price
FROM

( 
	SELECT 
	a.client, 
	a.product_id,
	product_type,
	customer_id,
	a.sku, 
	order_number,
	created_at,
	final_quantity,
	final_price
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_products` b
	ON (
		a.product_id = b.product_id
	  and a.client = b.client
		)

)
2018-04-06 20:33:47,896: Model SQL (agg_ga_campaign):
with ga_transactions as (

	select 
		date, account, client, channel, platform, url, 
		campaign,
		null as sessions, null as goal_completions, last_touch_transactions, last_touch_revenue,
		last_touch_shipping, last_touch_tax,
		null as first_touch_transactions, null as first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_transactions`

),

ga_traffic as (

    select 
        date, account, client, channel, platform, url, 
        campaign,
        sessions, goal_completions, null as last_touch_transactions, null as last_touch_revenue,
        null as last_touch_shipping, null as last_touch_tax,
        null as first_touch_transactions, null as first_touch_revenue
    from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_traffic`

),

ga_mcf as (

	select 
		date, account, client, channel, platform, '' as url,
		campaign, 
		null as sessions, null as goal_completions, null as last_touch_transactions, null as last_touch_revenue,
		null as last_touch_shipping, null as last_touch_tax,
		first_touch_transactions, first_touch_revenue
	from `growth-engines-pipeline`.`agency_data_pipeline`.`ga_mcf_stats`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    campaign utm_campaign,
	sum(sessions) sessions,
	sum(goal_completions) goal_completions,
	sum(last_touch_transactions) last_touch_transactions,
	sum(last_touch_revenue) last_touch_revenue,
    sum(last_touch_shipping) last_touch_shipping_revenue,
    sum(last_touch_tax) last_touch_tax_revenue,
    sum(first_touch_transactions) first_touch_transactions,
    sum(first_touch_revenue) - sum(ifnull(last_touch_shipping,0)) - sum(ifnull(last_touch_tax,0)) first_touch_revenue

FROM
(
    SELECT *
    FROM 
      ga_transactions
    UNION ALL
    SELECT *
    FROM 
      ga_traffic
    UNION ALL
    SELECT *
    FROM 
      ga_mcf
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 20:33:52,222: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c5ef0>]}
2018-04-06 20:33:52,407: 20:33:52 | 39 of 75 OK created table model agency_data_pipeline.agg_transaction_line_item_type [CREATE TABLE in 4.93s]
2018-04-06 20:33:55,483: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883cba8>]}
2018-04-06 20:33:55,670: 20:33:55 | 40 of 75 OK created table model agency_data_pipeline.agg_ga_campaign. [CREATE TABLE in 8.19s]
2018-04-06 20:33:55,671: 20:33:55 | 41 of 75 START table model agency_data_pipeline.agg_transaction_product_type [RUN]
2018-04-06 20:33:55,671: Compiling model.agency_data_pipeline.agg_transaction_product_type
2018-04-06 20:33:55,674: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_product_type"
2018-04-06 20:33:55,675: 20:33:55 | 42 of 75 START table model agency_data_pipeline.customers_first_purchase_product_type_proc [RUN]
2018-04-06 20:33:55,675: Compiling model.agency_data_pipeline.customers_first_purchase_product_type_proc
2018-04-06 20:33:55,679: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_product_type_proc"
2018-04-06 20:33:55,679: Acquiring new bigquery connection "agg_transaction_product_type".
2018-04-06 20:33:55,680: Re-using an available connection from the pool.
2018-04-06 20:33:55,729: Acquiring new bigquery connection "customers_first_purchase_product_type_proc".
2018-04-06 20:33:55,729: Re-using an available connection from the pool.
2018-04-06 20:33:56,335: Model SQL (customers_first_purchase_product_type_proc):
SELECT 
client, 
customer_id, 
product_type,
min(cast(created_at as date)) first_order_date,
unix_date( min(cast(created_at as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
GROUP BY client, customer_id, product_type
2018-04-06 20:33:56,484: Model SQL (agg_transaction_product_type):
SELECT
client,
product_type,
customer_id,
order_number,
created_at,
first_value(product_type) over (PARTITION BY client, customer_id, order_number, created_at ORDER BY final_price desc) as top_order_product_type,
final_quantity,
final_price,
sum(final_quantity) over (PARTITION BY client, customer_id, order_number) as total_order_quantity,
sum(final_price) over (PARTITION BY client, customer_id, order_number) as total_order_value
FROM
	(
		SELECT
		client,
		product_type,
		customer_id,
		order_number,
		created_at,
		sum(final_quantity) final_quantity,
		sum(final_price) final_price
		FROM
		`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
		GROUP BY
		client,
		product_type,
		customer_id,
		order_number,
		created_at
	)
2018-04-06 20:33:59,594: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064c5ef0>]}
2018-04-06 20:33:59,781: 20:33:59 | 42 of 75 OK created table model agency_data_pipeline.customers_first_purchase_product_type_proc [CREATE TABLE in 3.92s]
2018-04-06 20:34:00,830: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c4e0>]}
2018-04-06 20:34:01,013: 20:34:01 | 41 of 75 OK created table model agency_data_pipeline.agg_transaction_product_type [CREATE TABLE in 5.16s]
2018-04-06 20:34:01,014: 20:34:01 | 43 of 75 START table model agency_data_pipeline.order_paths_proc..... [RUN]
2018-04-06 20:34:01,014: Compiling model.agency_data_pipeline.order_paths_proc
2018-04-06 20:34:01,018: Writing injected SQL for node "model.agency_data_pipeline.order_paths_proc"
2018-04-06 20:34:01,014: 20:34:01 | 44 of 75 START table model agency_data_pipeline.customers_products_proc [RUN]
2018-04-06 20:34:01,018: Compiling model.agency_data_pipeline.customers_products_proc
2018-04-06 20:34:01,023: Writing injected SQL for node "model.agency_data_pipeline.customers_products_proc"
2018-04-06 20:34:01,014: 20:34:01 | 45 of 75 START table model agency_data_pipeline.products_proc........ [RUN]
2018-04-06 20:34:01,023: Compiling model.agency_data_pipeline.products_proc
2018-04-06 20:34:01,028: Writing injected SQL for node "model.agency_data_pipeline.products_proc"
2018-04-06 20:34:01,059: Acquiring new bigquery connection "order_paths_proc".
2018-04-06 20:34:01,060: Acquiring new bigquery connection "products_proc".
2018-04-06 20:34:01,060: Re-using an available connection from the pool.
2018-04-06 20:34:01,061: Acquiring new bigquery connection "customers_products_proc".
2018-04-06 20:34:01,061: Re-using an available connection from the pool.
2018-04-06 20:34:01,066: Re-using an available connection from the pool.
2018-04-06 20:34:01,725: Model SQL (customers_products_proc):
WITH customers AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  cast(created_at as date) order_date,
  unix_date(cast(created_at as date)) unix_order_date, 
  final_quantity quantity,
  final_price revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
period,
customer_id,
product_type,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  product_type,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range, product_type

)
2018-04-06 20:34:01,781: Model SQL (order_paths_proc):
SELECT
client, 
customer_id, 
first_value(product_type) OVER w1 as first_product_type,
nth_value(product_type, 2) OVER w1 as second_product_type,
cast(first_value(created_at) OVER w1 as date) as first_purchase_date,
cast(nth_value(created_at, 2) OVER w1 as date) as second_purchase_date,
first_value(total_order_value) OVER w1 as first_order_value,
nth_value(total_order_value, 2) OVER w1 as second_order_value
FROM (
	  
	  SELECT 
	  client, 
	  product_type,
	  customer_id,
	  order_number,
	  created_at, 
	  total_order_value
	  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_product_type`
	  WHERE product_type = top_order_product_type

)
WINDOW w1 as (PARTITION BY client, customer_id ORDER BY created_at asc)
2018-04-06 20:34:01,876: Model SQL (products_proc):
WITH transactions AS (
  SELECT 
  client, 
  product_id,
  product_type,
  customer_id,
  sku, 
  order_number,
  unix_date(cast(created_at as date)) d, 
  final_quantity,
  final_price
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_line_item_type`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
client,
'Last 30' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 30 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'Last 90' as period,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 90 )
AND transactions.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, sku, product_type

UNION ALL

SELECT 
client,
'YoY 30' as date_range,
sku, 
product_type,
date_in_range date,
unix_date_in_range, 
count(distinct(customer_id)) unique_customers,
count(distinct(order_number)) orders,
sum(final_quantity) quantity,
sum(final_price) revenue
FROM daterange
JOIN transactions
ON transactions.d > ( daterange.unix_date_in_range - 395 )
AND transactions.d <= ( daterange.unix_date_in_range - 365 )
group by date_in_range, unix_date_in_range, client, sku, product_type
2018-04-06 20:34:03,956: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10881c278>]}
2018-04-06 20:34:04,142: 20:34:04 | 43 of 75 OK created table model agency_data_pipeline.order_paths_proc [CREATE TABLE in 2.94s]
2018-04-06 20:34:09,523: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883ca58>]}
2018-04-06 20:34:09,706: 20:34:09 | 45 of 75 OK created table model agency_data_pipeline.products_proc... [CREATE TABLE in 8.50s]
2018-04-06 20:34:43,297: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064bd748>]}
2018-04-06 20:34:43,973: 20:34:43 | 44 of 75 OK created table model agency_data_pipeline.customers_products_proc [CREATE TABLE in 42.28s]
2018-04-06 20:34:43,973: 20:34:43 | 46 of 75 START table model agency_data_pipeline.segment_proc_sku..... [RUN]
2018-04-06 20:34:43,973: 20:34:43 | 47 of 75 START table model agency_data_pipeline.order_paths_stats.... [RUN]
2018-04-06 20:34:43,974: Compiling model.agency_data_pipeline.segment_proc_sku
2018-04-06 20:34:43,974: Compiling model.agency_data_pipeline.order_paths_stats
2018-04-06 20:34:43,978: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_sku"
2018-04-06 20:34:43,981: Writing injected SQL for node "model.agency_data_pipeline.order_paths_stats"
2018-04-06 20:34:43,982: Acquiring new bigquery connection "order_paths_stats".
2018-04-06 20:34:43,983: Acquiring new bigquery connection "segment_proc_sku".
2018-04-06 20:34:43,983: Re-using an available connection from the pool.
2018-04-06 20:34:43,984: Re-using an available connection from the pool.
2018-04-06 20:34:44,671: Model SQL (order_paths_stats):
SELECT
client, 
first_product_type,
second_product_type,
first_purchase_date,
count(distinct(customer_id)) customer_count, 
avg(date_diff(second_purchase_date, first_purchase_date, DAY)) avg_latency_days,
sum(first_order_value) first_order_revenue,
sum(second_order_value) second_order_revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`order_paths_proc`
GROUP BY client, first_product_type, second_product_type, first_purchase_date
2018-04-06 20:34:44,712: Model SQL (segment_proc_sku):
SELECT
client,
period,
sku, 
product_type,
date,
unique_customers,
orders,
quantity,
revenue,
case when orders > orders_90pct then 'Best Seller'
	when orders > orders_75pct then 'Good'
	when orders > orders_25pct then 'Average'
	else 'Poor' end as segment,
orders_90pct,
orders_75pct,
orders_25pct
FROM
(
	SELECT 
	client,
	period,
	sku, 
	product_type,
	date,
	unique_customers,
	orders,
	quantity,
	revenue,
	PERCENTILE_CONT(orders, 0.90) OVER w1 AS orders_90pct,
	PERCENTILE_CONT(orders, 0.75) OVER w1 AS orders_75pct,
	PERCENTILE_CONT(orders, 0.25) OVER w1 AS orders_25pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`products_proc`
	WINDOW w1 as (PARTITION BY client, period, date)
)
2018-04-06 20:34:46,841: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106459588>]}
2018-04-06 20:34:46,916: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10882b2e8>]}
2018-04-06 20:34:47,023: 20:34:47 | 47 of 75 OK created table model agency_data_pipeline.order_paths_stats [CREATE TABLE in 2.87s]
2018-04-06 20:34:47,210: 20:34:47 | 46 of 75 OK created table model agency_data_pipeline.segment_proc_sku [CREATE TABLE in 2.94s]
2018-04-06 20:34:47,210: 20:34:47 | 48 of 75 START table model agency_data_pipeline.agg_transaction...... [RUN]
2018-04-06 20:34:47,211: 20:34:47 | 49 of 75 START table model agency_data_pipeline.segment_proc_customers_products [RUN]
2018-04-06 20:34:47,211: Compiling model.agency_data_pipeline.agg_transaction
2018-04-06 20:34:47,211: 20:34:47 | 50 of 75 START table model agency_data_pipeline.segment_stats_sku.... [RUN]
2018-04-06 20:34:47,211: Compiling model.agency_data_pipeline.segment_proc_customers_products
2018-04-06 20:34:47,215: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction"
2018-04-06 20:34:47,215: Compiling model.agency_data_pipeline.segment_stats_sku
2018-04-06 20:34:47,220: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers_products"
2018-04-06 20:34:47,225: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_sku"
2018-04-06 20:34:47,226: Acquiring new bigquery connection "agg_transaction".
2018-04-06 20:34:47,226: Re-using an available connection from the pool.
2018-04-06 20:34:47,228: Acquiring new bigquery connection "segment_proc_customers_products".
2018-04-06 20:34:47,228: Re-using an available connection from the pool.
2018-04-06 20:34:47,230: Acquiring new bigquery connection "segment_stats_sku".
2018-04-06 20:34:47,230: Re-using an available connection from the pool.
2018-04-06 20:34:47,837: Model SQL (segment_stats_sku):
WITH last_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	unique_customers as customers_30,
	orders as orders_30,
	revenue as revenue_30,
	segment as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 30'

),

last_90 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	unique_customers as customers_90,
	orders as orders_90,
	revenue as revenue_90,
	segment as segment_90,
	0 as customers_yoy_30,
	0 as orders_yoy_30,
	0 as revenue_yoy_30,
	'' as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'Last 90'

),

yoy_30 as (

	SELECT
	client,
	sku, 
	product_type,
	date,
	0 as customers_30,
	0 as orders_30,
	0 as revenue_30,
	'' as segment_30,
	0 as customers_90,
	0 as orders_90,
	0 as revenue_90,
	'' as segment_90,
	unique_customers as customers_yoy_30,
	orders as orders_yoy_30,
	revenue as revenue_yoy_30,
	segment as segment_yoy_30
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_sku`
	WHERE period = 'YoY 30'

)

SELECT
client,
sku, 
product_type,
date,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(max(segment_30), '') segment_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(max(segment_90), '') segment_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30,
ifnull(max(segment_yoy_30), '') segment_yoy_30
FROM
(
	SELECT * FROM last_30
	UNION ALL
	SELECT * FROM last_90
	UNION ALL
	SELECT * FROM yoy_30

)
GROUP BY client, sku, product_type, date
2018-04-06 20:34:47,868: Model SQL (segment_proc_customers_products):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
product_type,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	when recency_days > recency_50pct and frequency > frequency_50pct then 'Frequent, not Recent'
	when recency_days < recency_50pct and frequency < frequency_50pct then 'Recent, not Frequent'
	else 'Unbucketed' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	a.product_type product_type,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,	
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_products_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_product_type_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id and
		a.product_type = b.product_type
		)
	WINDOW w1 as (PARTITION BY a.client, period, date, a.product_type)
)
2018-04-06 20:34:47,877: Model SQL (agg_transaction):
SELECT
client,
date,
customer_id,
order_number,
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign,
ifnull( sum(last_touch_transactions), 0) last_touch_transactions, 
ifnull( sum(last_touch_revenue), 0) last_touch_revenue, 
ifnull( sum(first_touch_transactions), 0) first_touch_transactions, 
ifnull( sum(first_touch_revenue), 0) first_touch_revenue,
ifnull( sum(final_quantity), 0) quantity,
ifnull( sum(final_price), 0) revenue,
ifnull( sum(shipping_price), 0) shipping_revenue,
ROW_NUMBER() OVER (PARTITION BY client, customer_id, order_number ORDER BY date asc) AS order_sequence
FROM
(
	SELECT
	a.client,
	a.date date,
	b.date ga_date,
	customer_id,
	order_number,
	transactionid,
	b.last_touch_channel,
	b.last_touch_platform,
	b.last_touch_url,
	b.first_touch_channel, 
	b.first_touch_platform, 
	b.first_touch_utm_campaign, 
	last_touch_transactions, 
	last_touch_revenue, 
	first_touch_transactions, 
	first_touch_revenue,
	final_quantity,
	final_price,
	shipping_price
	FROM
	`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_order_number` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_transaction` b
	ON (
		a.client = b.client and
		a.order_number = b.transactionid
	)

)
GROUP BY
client, 
date, 
customer_id,
order_number, 
last_touch_channel,
last_touch_platform,
last_touch_url,
first_touch_channel, 
first_touch_platform, 
first_touch_utm_campaign
2018-04-06 20:34:50,035: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10885c160>]}
2018-04-06 20:34:50,251: 20:34:50 | 50 of 75 OK created table model agency_data_pipeline.segment_stats_sku [CREATE TABLE in 2.82s]
2018-04-06 20:34:54,432: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10884b588>]}
2018-04-06 20:34:54,613: 20:34:54 | 48 of 75 OK created table model agency_data_pipeline.agg_transaction. [CREATE TABLE in 7.22s]
2018-04-06 20:35:22,660: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062c2da0>]}
2018-04-06 20:35:22,842: 20:35:22 | 49 of 75 OK created table model agency_data_pipeline.segment_proc_customers_products [CREATE TABLE in 35.45s]
2018-04-06 20:35:22,843: 20:35:22 | 51 of 75 START table model agency_data_pipeline.segment_stats_customers_products_agg [RUN]
2018-04-06 20:35:22,843: 20:35:22 | 52 of 75 START table model agency_data_pipeline.agg_transaction_daily [RUN]
2018-04-06 20:35:22,843: Compiling model.agency_data_pipeline.segment_stats_customers_products_agg
2018-04-06 20:35:22,843: 20:35:22 | 53 of 75 START table model agency_data_pipeline.customers_first_purchase_proc [RUN]
2018-04-06 20:35:22,843: Compiling model.agency_data_pipeline.agg_transaction_daily
2018-04-06 20:35:22,843: 20:35:22 | 54 of 75 START table model agency_data_pipeline.segment_stats_category [RUN]
2018-04-06 20:35:22,848: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products_agg"
2018-04-06 20:35:22,848: Compiling model.agency_data_pipeline.customers_first_purchase_proc
2018-04-06 20:35:22,852: Writing injected SQL for node "model.agency_data_pipeline.agg_transaction_daily"
2018-04-06 20:35:22,852: Compiling model.agency_data_pipeline.segment_stats_category
2018-04-06 20:35:22,856: Writing injected SQL for node "model.agency_data_pipeline.customers_first_purchase_proc"
2018-04-06 20:35:22,860: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_category"
2018-04-06 20:35:22,861: Acquiring new bigquery connection "segment_stats_customers_products_agg".
2018-04-06 20:35:22,861: Acquiring new bigquery connection "agg_transaction_daily".
2018-04-06 20:35:22,861: Re-using an available connection from the pool.
2018-04-06 20:35:22,908: Re-using an available connection from the pool.
2018-04-06 20:35:22,909: Acquiring new bigquery connection "customers_first_purchase_proc".
2018-04-06 20:35:22,913: Acquiring new bigquery connection "segment_stats_category".
2018-04-06 20:35:22,914: Re-using an available connection from the pool.
2018-04-06 20:35:22,917: Re-using an available connection from the pool.
2018-04-06 20:35:23,549: Model SQL (agg_transaction_daily):
SELECT
client,
date,
customer_id,
sum(last_touch_transactions) last_touch_transactions, 
sum(last_touch_revenue) last_touch_revenue, 
sum(first_touch_transactions) first_touch_transactions, 
sum(first_touch_revenue) first_touch_revenue,
sum(quantity) quantity,
sum(revenue) revenue
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY
client, 
date, 
customer_id
2018-04-06 20:35:23,551: Model SQL (customers_first_purchase_proc):
SELECT 
client, 
customer_id, 
min(cast(date as date)) first_order_date,
unix_date( min(cast(date as date))) first_order_unix_date
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
GROUP BY client, customer_id
2018-04-06 20:35:23,557: Model SQL (segment_stats_customers_products_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	product_type,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers_products`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
product_type,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id, product_type
2018-04-06 20:35:23,565: Model SQL (segment_stats_category):
SELECT
client,
product_type,
date,
segment_30,
segment_90,
segment_yoy_30,
ifnull(sum(customers_30), 0) customers_30,
ifnull(sum(orders_30), 0) orders_30,
ifnull(sum(revenue_30), 0) revenue_30,
ifnull(sum(customers_90), 0) customers_90,
ifnull(sum(orders_90), 0) orders_90,
ifnull(sum(revenue_90), 0) revenue_90,
ifnull(sum(customers_yoy_30), 0) customers_yoy_30,
ifnull(sum(orders_yoy_30), 0) orders_yoy_30,
ifnull(sum(revenue_yoy_30), 0) revenue_yoy_30
FROM
`growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_sku`
GROUP BY client, product_type, date, segment_30, segment_90, segment_yoy_30
2018-04-06 20:35:25,748: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4cf8>]}
2018-04-06 20:35:25,771: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10884b198>]}
2018-04-06 20:35:25,937: 20:35:25 | 53 of 75 OK created table model agency_data_pipeline.customers_first_purchase_proc [CREATE TABLE in 2.90s]
2018-04-06 20:35:26,121: 20:35:26 | 54 of 75 OK created table model agency_data_pipeline.segment_stats_category [CREATE TABLE in 2.92s]
2018-04-06 20:35:27,894: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4fd0>]}
2018-04-06 20:35:28,109: 20:35:28 | 52 of 75 OK created table model agency_data_pipeline.agg_transaction_daily [CREATE TABLE in 5.05s]
2018-04-06 20:35:57,500: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088510b8>]}
2018-04-06 20:35:58,095: 20:35:58 | 51 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products_agg [CREATE TABLE in 34.66s]
2018-04-06 20:35:58,096: 20:35:58 | 55 of 75 START table model agency_data_pipeline.segment_stats_customers_products [RUN]
2018-04-06 20:35:58,096: 20:35:58 | 56 of 75 START table model agency_data_pipeline.growth_customer_0_365 [RUN]
2018-04-06 20:35:58,096: Compiling model.agency_data_pipeline.segment_stats_customers_products
2018-04-06 20:35:58,096: 20:35:58 | 57 of 75 START table model agency_data_pipeline.customers_proc....... [RUN]
2018-04-06 20:35:58,096: Compiling model.agency_data_pipeline.growth_customer_0_365
2018-04-06 20:35:58,100: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_products"
2018-04-06 20:35:58,100: Compiling model.agency_data_pipeline.customers_proc
2018-04-06 20:35:58,105: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365"
2018-04-06 20:35:58,109: Writing injected SQL for node "model.agency_data_pipeline.customers_proc"
2018-04-06 20:35:58,150: Acquiring new bigquery connection "segment_stats_customers_products".
2018-04-06 20:35:58,150: Acquiring new bigquery connection "growth_customer_0_365".
2018-04-06 20:35:58,150: Re-using an available connection from the pool.
2018-04-06 20:35:58,151: Acquiring new bigquery connection "customers_proc".
2018-04-06 20:35:58,155: Re-using an available connection from the pool.
2018-04-06 20:35:58,158: Re-using an available connection from the pool.
2018-04-06 20:35:58,779: Model SQL (customers_proc):
WITH customers AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  cast(date as date) order_date,
  unix_date(cast(date as date)) unix_order_date, 
  quantity,
  revenue 
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)
 
SELECT 
client,
period,
customer_id,
date,
window_end_unix_date,
window_end_unix_date - 365 as window_start_unix_date,
window_end_unix_date - unix_date(recent_order) recency_days,
frequency,
quantity,
revenue,
case when frequency > 0 then revenue/frequency else 0 end as aov
FROM 
(  

  SELECT 
  client,
  'Rolling 365' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range window_end_unix_date,
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 365 )
  AND customers.unix_order_date <= daterange.unix_date_in_range
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1mo)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range,
  unix_date_in_range - 30 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 395 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 30 )
  GROUP BY client, customer_id, date, unix_date_in_range

  UNION ALL

  SELECT 
  client,
  'Rolling 365 (t-1yr)' as period,
  customer_id,
  date_in_range date,
  unix_date_in_range, 
  unix_date_in_range - 365 window_end_unix_date, 
  max(order_date) recent_order,
  sum(quantity) as quantity,
  sum(revenue) as revenue,
  count(distinct(order_number)) as frequency
  FROM daterange
  JOIN customers
  ON customers.unix_order_date > ( daterange.unix_date_in_range - 730 )
  AND customers.unix_order_date <= ( daterange.unix_date_in_range - 365 )
  GROUP BY client, customer_id, date, unix_date_in_range

)
2018-04-06 20:35:58,808: Model SQL (growth_customer_0_365):
WITH transactions AS (
  SELECT 
  client, 
  customer_id, 
  order_number,
  unix_date(cast(date as date)) d, 
  quantity,
  revenue,
  shipping_revenue
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
)

SELECT 
date_in_range date,
unix_date_in_range, 
unix_date_in_range_yoy, 
client, 
customer_id,
count(distinct(order_number)) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM daterange
JOIN transactions
ON transactions.d >= ( daterange.unix_date_in_range - 365 ) 
AND transactions.d <= daterange.unix_date_in_range
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, customer_id
2018-04-06 20:35:58,842: Model SQL (segment_stats_customers_products):
SELECT
client,
date,
product_type,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_products_agg`
GROUP BY client, date, product_type, segment_365, segment_mom, segment_yoy
2018-04-06 20:36:09,655: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106459128>]}
2018-04-06 20:36:09,839: 20:36:09 | 55 of 75 OK created table model agency_data_pipeline.segment_stats_customers_products [CREATE TABLE in 11.56s]
2018-04-06 20:36:17,352: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10882e198>]}
2018-04-06 20:36:17,537: 20:36:17 | 56 of 75 OK created table model agency_data_pipeline.growth_customer_0_365 [CREATE TABLE in 19.26s]
2018-04-06 20:36:30,226: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10882bba8>]}
2018-04-06 20:36:30,414: 20:36:30 | 57 of 75 OK created table model agency_data_pipeline.customers_proc.. [CREATE TABLE in 32.13s]
2018-04-06 20:36:30,414: 20:36:30 | 58 of 75 START table model agency_data_pipeline.retention_365_730.... [RUN]
2018-04-06 20:36:30,415: 20:36:30 | 59 of 75 START table model agency_data_pipeline.retention_730_plus... [RUN]
2018-04-06 20:36:30,415: Compiling model.agency_data_pipeline.retention_365_730
2018-04-06 20:36:30,415: 20:36:30 | 60 of 75 START table model agency_data_pipeline.retention_0_365...... [RUN]
2018-04-06 20:36:30,415: Compiling model.agency_data_pipeline.retention_730_plus
2018-04-06 20:36:30,420: Writing injected SQL for node "model.agency_data_pipeline.retention_365_730"
2018-04-06 20:36:30,420: Compiling model.agency_data_pipeline.retention_0_365
2018-04-06 20:36:30,424: Writing injected SQL for node "model.agency_data_pipeline.retention_730_plus"
2018-04-06 20:36:30,428: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365"
2018-04-06 20:36:30,429: Acquiring new bigquery connection "retention_365_730".
2018-04-06 20:36:30,429: Acquiring new bigquery connection "retention_0_365".
2018-04-06 20:36:30,429: Re-using an available connection from the pool.
2018-04-06 20:36:30,430: Acquiring new bigquery connection "retention_730_plus".
2018-04-06 20:36:30,431: Re-using an available connection from the pool.
2018-04-06 20:36:30,431: Re-using an available connection from the pool.
2018-04-06 20:36:31,126: Model SQL (retention_730_plus):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d <= ( daterange.unix_date_in_range - 730 ) 
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:36:31,178: Model SQL (retention_365_730):
WITH transactions AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
	SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`  	
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date, 
unix_date_in_range,
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON ( temp.d >= ( daterange.unix_date_in_range - 730 ) 
AND temp.d < ( daterange.unix_date_in_range - 365 ) )
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:36:31,257: Model SQL (retention_0_365):
WITH transactions AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`agg_transaction_daily`
),

daterange AS (
  SELECT * FROM `growth-engines-pipeline`.`agency_data_pipeline`.`monthend_dates`    
),

temp AS (
  SELECT 
  client, 
  customer_id, 
  unix_date(date) d, 
  quantity,
  revenue
  FROM transactions
)

SELECT 
date_in_range date,
unix_date_in_range, 
client, 
customer_id,
sum(quantity) quantity,
sum(revenue) revenue
FROM daterange
JOIN temp
ON temp.d >= ( daterange.unix_date_in_range - 365 ) 
AND temp.d <= daterange.unix_date_in_range
group by date_in_range, unix_date_in_range, client, customer_id
2018-04-06 20:36:33,306: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1088236d8>]}
2018-04-06 20:36:33,492: 20:36:33 | 59 of 75 OK created table model agency_data_pipeline.retention_730_plus [CREATE TABLE in 2.89s]
2018-04-06 20:36:35,491: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062e10f0>]}
2018-04-06 20:36:35,686: 20:36:35 | 58 of 75 OK created table model agency_data_pipeline.retention_365_730 [CREATE TABLE in 5.08s]
2018-04-06 20:36:39,965: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10882b780>]}
2018-04-06 20:36:40,204: 20:36:40 | 60 of 75 OK created table model agency_data_pipeline.retention_0_365. [CREATE TABLE in 9.54s]
2018-04-06 20:36:40,204: 20:36:40 | 61 of 75 START table model agency_data_pipeline.segment_proc_customers [RUN]
2018-04-06 20:36:40,204: 20:36:40 | 62 of 75 START table model agency_data_pipeline.agg_platforms_union.. [RUN]
2018-04-06 20:36:40,204: Compiling model.agency_data_pipeline.segment_proc_customers
2018-04-06 20:36:40,204: Compiling model.agency_data_pipeline.agg_platforms_union
2018-04-06 20:36:40,209: Writing injected SQL for node "model.agency_data_pipeline.segment_proc_customers"
2018-04-06 20:36:40,213: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_union"
2018-04-06 20:36:40,214: Acquiring new bigquery connection "segment_proc_customers".
2018-04-06 20:36:40,214: Re-using an available connection from the pool.
2018-04-06 20:36:40,215: Acquiring new bigquery connection "agg_platforms_union".
2018-04-06 20:36:40,215: Re-using an available connection from the pool.
2018-04-06 20:36:40,950: Model SQL (agg_platforms_union):
SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`adwords_stats`

UNION ALL

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`bing_ads_stats`

UNION ALL  

SELECT 
date, 
account, 
channel,
platform,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions
FROM 
`growth-engines-pipeline`.`agency_data_pipeline`.`fb_ads_stats`
2018-04-06 20:36:40,980: Model SQL (segment_proc_customers):
SELECT
client,
period,
date,
customer_id,
first_order_date,
first_order_unix_date,
recency_days,
frequency,
revenue,
quantity,
aov,
case when frequency = 1 and recency_days <= 30 and first_order_unix_date >= window_start_unix_date then 'New'
	when frequency = 1 then 'One-time Purchaser'
	when frequency > frequency_90pct and recency_days < recency_90pct and aov > aov_50pct then 'Champion'
	when recency_days < recency_90pct and frequency > frequency_75pct then 'Potential Loyalists' 
	when frequency > frequency_75pct and recency_days <= recency_50pct then 'Cant Lose'
	when recency_days < recency_50pct and frequency > frequency_50pct then 'Loyal'
	when recency_days > recency_50pct and frequency > frequency_50pct then 'Frequent, not Recent'
	when recency_days < recency_50pct and frequency < frequency_50pct then 'Recent, not Frequent'
	else 'Unbucketed' end as segment,
aov_50pct,
frequency_90pct,
frequency_75pct,
frequency_50pct,
recency_90pct,
recency_75pct,
recency_50pct
FROM
(
	SELECT 
	a.client client,
	period,
	date,
	a.customer_id customer_id,
	b.first_order_date first_order_date,
	b.first_order_unix_date first_order_unix_date,
	window_start_unix_date,
	window_end_unix_date,
	recency_days,
	frequency,
	revenue,
	quantity,
	aov,
	PERCENTILE_CONT(aov, 0.50) OVER w1 AS aov_50pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_90pct,
	PERCENTILE_CONT(frequency, 0.75) OVER w1 AS frequency_75pct,
	PERCENTILE_CONT(frequency, 0.90) OVER w1 AS frequency_50pct,
	PERCENTILE_CONT(recency_days, 0.10) OVER w1 AS recency_90pct,
	PERCENTILE_CONT(recency_days, 0.25) OVER w1 AS recency_75pct,
	PERCENTILE_CONT(recency_days, 0.5) OVER w1 AS recency_50pct
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`customers_proc` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`customers_first_purchase_proc` b
	ON (
		a.client = b.client and
		a.customer_id = b.customer_id
		)
	WINDOW w1 as (PARTITION BY a.client, period, date)
)
2018-04-06 20:36:43,134: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4d68>]}
2018-04-06 20:36:43,318: 20:36:43 | 62 of 75 OK created table model agency_data_pipeline.agg_platforms_union [CREATE TABLE in 2.93s]
2018-04-06 20:37:09,405: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106495a58>]}
2018-04-06 20:37:10,063: 20:37:10 | 61 of 75 OK created table model agency_data_pipeline.segment_proc_customers [CREATE TABLE in 29.20s]
2018-04-06 20:37:10,063: 20:37:10 | 63 of 75 START table model agency_data_pipeline.retention_0_365_rebuy [RUN]
2018-04-06 20:37:10,063: 20:37:10 | 64 of 75 START table model agency_data_pipeline.segment_stats_customers_agg [RUN]
2018-04-06 20:37:10,063: Compiling model.agency_data_pipeline.retention_0_365_rebuy
2018-04-06 20:37:10,063: Compiling model.agency_data_pipeline.segment_stats_customers_agg
2018-04-06 20:37:10,068: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_rebuy"
2018-04-06 20:37:10,073: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers_agg"
2018-04-06 20:37:10,074: Acquiring new bigquery connection "retention_0_365_rebuy".
2018-04-06 20:37:10,074: Re-using an available connection from the pool.
2018-04-06 20:37:10,076: Acquiring new bigquery connection "segment_stats_customers_agg".
2018-04-06 20:37:10,076: Re-using an available connection from the pool.
2018-04-06 20:37:10,712: Model SQL (segment_stats_customers_agg):
WITH ty as (

	SELECT
	client,
	date,
	customer_id,
	segment as segment_365,
	recency_days as recency_365,
	frequency as frequency_365,
	revenue as revenue_365,
	aov as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365'

),

last_month as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	segment as segment_mom,
	recency_days as recency_mom,
	frequency as frequency_mom,
	revenue as revenue_mom,
	aov as aov_mom,
	'' as segment_yoy,
	0 as recency_yoy,
	0 as frequency_yoy,
	0 as revenue_yoy,
	0 as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1mo)'

),

this_month_1yr as (

	SELECT
	client,
	date,
	customer_id,
	'' as segment_365,
	0 as recency_365,
	0 as frequency_365,
	0 as revenue_365,
	0 as aov_365,
	'' as segment_mom,
	0 as recency_mom,
	0 as frequency_mom,
	0 as revenue_mom,
	0 as aov_mom,
	segment as segment_yoy,
	recency_days as recency_yoy,
	frequency as frequency_yoy,
	revenue as revenue_yoy,
	aov as aov_yoy
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers`
	WHERE period = 'Rolling 365 (t-1yr)'


)

SELECT
client,
date, 
customer_id,
ifnull(max(segment_365), '') segment_365,
ifnull(max(segment_mom), '') segment_mom,
ifnull(max(segment_yoy), '') segment_yoy,
ifnull(sum(recency_365), 0) recency_365,
ifnull(sum(frequency_365), 0) frequency_365,
ifnull(sum(revenue_365), 0) revenue_365,
ifnull(sum(aov_365), 0) aov_365,
ifnull(sum(recency_mom), 0) recency_mom,
ifnull(sum(frequency_mom), 0) frequency_mom,
ifnull(sum(revenue_mom), 0) revenue_mom,
ifnull(sum(aov_mom), 0) aov_mom,	
ifnull(sum(recency_yoy), 0) recency_yoy,
ifnull(sum(frequency_yoy), 0) frequency_yoy,
ifnull(sum(revenue_yoy), 0) revenue_yoy,
ifnull(sum(aov_yoy), 0) aov_yoy
FROM
(
	SELECT * FROM ty
	UNION ALL
	SELECT * FROM last_month
	UNION ALL
	SELECT * FROM this_month_1yr

)
GROUP BY client, date, customer_id
2018-04-06 20:37:10,768: Model SQL (retention_0_365_rebuy):
SELECT 
r2.client,
r2.date,
r2.customer_id, 
r2.quantity,
r2.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` r1 
left join `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` r2 
  on ( r1.customer_id = r2.customer_id 
  and r1.date = r2.date )
2018-04-06 20:37:16,259: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106459588>]}
2018-04-06 20:37:16,446: 20:37:16 | 63 of 75 OK created table model agency_data_pipeline.retention_0_365_rebuy [CREATE TABLE in 6.20s]
2018-04-06 20:37:32,409: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c1d0>]}
2018-04-06 20:37:32,596: 20:37:32 | 64 of 75 OK created table model agency_data_pipeline.segment_stats_customers_agg [CREATE TABLE in 22.35s]
2018-04-06 20:37:32,596: 20:37:32 | 65 of 75 START table model agency_data_pipeline.retention_0_365_new.. [RUN]
2018-04-06 20:37:32,597: Compiling model.agency_data_pipeline.retention_0_365_new
2018-04-06 20:37:32,596: 20:37:32 | 66 of 75 START table model agency_data_pipeline.retention_0_365_reactivated [RUN]
2018-04-06 20:37:32,601: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_new"
2018-04-06 20:37:32,597: 20:37:32 | 67 of 75 START table model agency_data_pipeline.agg_platforms_client. [RUN]
2018-04-06 20:37:32,602: Compiling model.agency_data_pipeline.retention_0_365_reactivated
2018-04-06 20:37:32,597: 20:37:32 | 68 of 75 START table model agency_data_pipeline.segment_stats_customers [RUN]
2018-04-06 20:37:32,602: Compiling model.agency_data_pipeline.agg_platforms_client
2018-04-06 20:37:32,607: Writing injected SQL for node "model.agency_data_pipeline.retention_0_365_reactivated"
2018-04-06 20:37:32,607: Compiling model.agency_data_pipeline.segment_stats_customers
2018-04-06 20:37:32,612: Writing injected SQL for node "model.agency_data_pipeline.agg_platforms_client"
2018-04-06 20:37:32,613: Acquiring new bigquery connection "retention_0_365_new".
2018-04-06 20:37:32,625: Re-using an available connection from the pool.
2018-04-06 20:37:32,614: Acquiring new bigquery connection "retention_0_365_reactivated".
2018-04-06 20:37:32,625: Acquiring new bigquery connection "agg_platforms_client".
2018-04-06 20:37:32,622: Writing injected SQL for node "model.agency_data_pipeline.segment_stats_customers"
2018-04-06 20:37:32,625: Re-using an available connection from the pool.
2018-04-06 20:37:32,628: Acquiring new bigquery connection "segment_stats_customers".
2018-04-06 20:37:32,629: Re-using an available connection from the pool.
2018-04-06 20:37:32,635: Re-using an available connection from the pool.
2018-04-06 20:37:33,252: Model SQL (agg_platforms_client):
SELECT 
date, 
a.account account, 
b.client client,
a.platform platform,
a.channel channel,
url,
utm_campaign,
campaign,
cost,
impressions,
clicks,
transactions ad_platform_transactions
FROM 
  `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_union` a
LEFT JOIN 
  `growth-engines-pipeline`.`agency_data_pipeline`.`accounts_proc` b
ON ( 
  a.account = b.account AND
  a.platform = b.platform
)
2018-04-06 20:37:33,279: Model SQL (segment_stats_customers):
SELECT
client,
date,
segment_365,
segment_mom,
segment_yoy,
count(distinct(customer_id)) customers,
avg(recency_365) recency_365,
sum(frequency_365) frequency_365,
sum(revenue_365) revenue_365,
case when sum(frequency_365) > 0 then sum(revenue_365)/sum(frequency_365) else null end as aov_365,
avg(recency_mom) recency_mom,
sum(frequency_mom) frequency_mom,
sum(revenue_mom) revenue_mom,
case when sum(frequency_mom) > 0 then sum(revenue_mom)/sum(frequency_mom) else null end as aov_mom,
avg(recency_yoy) recency_yoy,
sum(frequency_yoy) frequency_yoy,
sum(revenue_yoy) revenue_yoy,
case when sum(frequency_yoy) > 0 then sum(revenue_yoy)/sum(frequency_yoy) else null end as aov_yoy
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_stats_customers_agg`
GROUP BY client, date, segment_365, segment_mom, segment_yoy
2018-04-06 20:37:33,344: Model SQL (retention_0_365_new):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is null 
and c.customer_id is null
2018-04-06 20:37:33,367: Model SQL (retention_0_365_reactivated):
SELECT 
a.client,
a.date,
a.customer_id, 
a.quantity,
a.revenue
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_730_plus` b
ON (
	a.client = b.client AND
	a.date = b.date AND
	a.customer_id = b.customer_id
)
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730` c
ON (
	a.client = c.client AND
	a.date = c.date AND
	a.customer_id = c.customer_id
)
WHERE b.customer_id is not null 
AND c.customer_id is null
2018-04-06 20:37:35,410: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062ce588>]}
2018-04-06 20:37:35,596: 20:37:35 | 67 of 75 OK created table model agency_data_pipeline.agg_platforms_client [CREATE TABLE in 2.81s]
2018-04-06 20:37:35,633: 20:37:35 | 69 of 75 START table model agency_data_pipeline.retention_stats_rebuy_rate [RUN]
2018-04-06 20:37:35,633: Compiling model.agency_data_pipeline.retention_stats_rebuy_rate
2018-04-06 20:37:35,638: Writing injected SQL for node "model.agency_data_pipeline.retention_stats_rebuy_rate"
2018-04-06 20:37:35,639: Acquiring new bigquery connection "retention_stats_rebuy_rate".
2018-04-06 20:37:35,639: Re-using an available connection from the pool.
2018-04-06 20:37:36,262: Model SQL (retention_stats_rebuy_rate):
WITH r1 AS (
	SELECT 
	date,
	client,
	count(distinct customer_id) customers_prior_year,
	0 as customers_current_year, 
	sum(quantity) quantity_prior_year,
	0 as quantity_current_year,
	sum(revenue) revenue_prior_year,
	0 as revenue_current_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_prior_year,
	null as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

r2 AS (
	SELECT 
	date,
	client,
	0 as customers_prior_year,
	count(distinct customer_id) customers_current_year, 
	0 as quantity_prior_year,
	sum(quantity) quantity_current_year,
	0 as revenue_prior_year,
	sum(revenue) revenue_current_year,
	null as aov_prior_year,
	case when sum(quantity) > 0 then sum(revenue)/sum(quantity) else null end as aov_current_year
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
)

SELECT 
date,
client,
sum(customers_prior_year) customers_prior_year, 
sum(customers_current_year) customers_current_year,
sum(quantity_prior_year) quantity_prior_year,
sum(quantity_current_year) quantity_current_year,
sum(revenue_prior_year) revenue_prior_year,
sum(revenue_current_year) revenue_current_year,
sum(aov_prior_year) aov_prior_year,
sum(aov_current_year) aov_current_year,
case when sum(revenue_prior_year) > 0 then sum(revenue_current_year)/sum(revenue_prior_year) else null end as revenue_retention,
case when sum(customers_prior_year) > 0 then sum(customers_current_year)/sum(customers_prior_year) else null end as customer_retention
FROM
(
	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r1

	UNION ALL

	SELECT
	date,
	client,
	customers_prior_year,
	customers_current_year,
	quantity_prior_year,
	quantity_current_year,
	revenue_prior_year,
	revenue_current_year,
	aov_prior_year,
	aov_current_year
	FROM r2

) 
GROUP BY date, client
2018-04-06 20:37:36,599: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064bd240>]}
2018-04-06 20:37:36,781: 20:37:36 | 66 of 75 OK created table model agency_data_pipeline.retention_0_365_reactivated [CREATE TABLE in 4.00s]
2018-04-06 20:37:38,410: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1064f4da0>]}
2018-04-06 20:37:38,619: 20:37:38 | 69 of 75 OK created table model agency_data_pipeline.retention_stats_rebuy_rate [CREATE TABLE in 2.78s]
2018-04-06 20:37:42,081: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106459128>]}
2018-04-06 20:37:42,267: 20:37:42 | 65 of 75 OK created table model agency_data_pipeline.retention_0_365_new [CREATE TABLE in 9.48s]
2018-04-06 20:37:47,359: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10885c9e8>]}
2018-04-06 20:37:47,544: 20:37:47 | 68 of 75 OK created table model agency_data_pipeline.segment_stats_customers [CREATE TABLE in 14.75s]
2018-04-06 20:37:47,545: 20:37:47 | 70 of 75 START table model agency_data_pipeline.segment_list_customers [RUN]
2018-04-06 20:37:47,545: Compiling model.agency_data_pipeline.segment_list_customers
2018-04-06 20:37:47,549: Writing injected SQL for node "model.agency_data_pipeline.segment_list_customers"
2018-04-06 20:37:47,550: Acquiring new bigquery connection "segment_list_customers".
2018-04-06 20:37:47,550: Re-using an available connection from the pool.
2018-04-06 20:37:48,302: Model SQL (segment_list_customers):
SELECT
a.client,
period,
date,
customer_id,
b.first_name,
b.last_name,
b.email,
recency_days,
frequency,
revenue,
quantity,
aov,
segment
FROM `growth-engines-pipeline`.`agency_data_pipeline`.`segment_proc_customers` a
LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`agg_customers_union` b
ON (
	a.client = b.client AND
	a.customer_id = b.id
)
2018-04-06 20:38:21,828: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c1d0>]}
2018-04-06 20:38:22,440: 20:38:22 | 70 of 75 OK created table model agency_data_pipeline.segment_list_customers [CREATE TABLE in 34.28s]
2018-04-06 20:38:22,441: 20:38:22 | 71 of 75 START table model agency_data_pipeline.growth_customer_0_365_segment [RUN]
2018-04-06 20:38:22,441: Compiling model.agency_data_pipeline.growth_customer_0_365_segment
2018-04-06 20:38:22,446: Writing injected SQL for node "model.agency_data_pipeline.growth_customer_0_365_segment"
2018-04-06 20:38:22,447: Acquiring new bigquery connection "growth_customer_0_365_segment".
2018-04-06 20:38:22,447: Re-using an available connection from the pool.
2018-04-06 20:38:23,077: Model SQL (growth_customer_0_365_segment):
with segment as (

	SELECT 
	a.date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	a.client client,
	a.customer_id customer_id,
	case when b.customer_id is not null then 'New' else 'Existing' end as segment,
	a.orders,
	a.quantity,
	a.revenue,
	a.shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365` a
	LEFT JOIN `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new` b
	ON (
	  a.customer_id = b.customer_id AND
	  a.date  = b.date AND
	  a.client = b.client
	)
),

total as (

	SELECT 
	date,
	unix_date_in_range,
	unix_date_in_range_yoy,
	client,
	customer_id,
	'Total' as segment,
	orders,
	quantity,
	revenue,
	shipping_revenue
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365`

)

SELECT 
date,
unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
count(distinct(customer_id)) customers,
sum(orders) orders,
sum(quantity) quantity,
sum(revenue) revenue,
sum(shipping_revenue) shipping_revenue
FROM
( 
	SELECT * FROM segment
	UNION ALL
	SELECT * FROM total
) 
GROUP BY date, unix_date_in_range, unix_date_in_range_yoy, client, segment
2018-04-06 20:38:39,379: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10882e1d0>]}
2018-04-06 20:38:39,564: 20:38:39 | 71 of 75 OK created table model agency_data_pipeline.growth_customer_0_365_segment [CREATE TABLE in 16.94s]
2018-04-06 20:38:39,565: 20:38:39 | 72 of 75 START table model agency_data_pipeline.growth_date_union.... [RUN]
2018-04-06 20:38:39,565: Compiling model.agency_data_pipeline.growth_date_union
2018-04-06 20:38:39,569: Writing injected SQL for node "model.agency_data_pipeline.growth_date_union"
2018-04-06 20:38:39,570: Acquiring new bigquery connection "growth_date_union".
2018-04-06 20:38:39,571: Re-using an available connection from the pool.
2018-04-06 20:38:40,276: Model SQL (growth_date_union):
with ty as (

  SELECT 
  date,
  unix_date_in_range, 
  unix_date_in_range_yoy, 
  client, 
  segment,
  customers customers_ty,
  orders orders_ty,
  quantity quantity_ty,
  revenue revenue_ty,
  shipping_revenue shipping_revenue_ty,
  null as customers_ly,
  null as orders_ly,
  null as quantity_ly,
  null as revenue_ly,
  null as shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

),

ly as (

  SELECT 
  date,
  null as unix_date_in_range, 
  unix_date_in_range unix_date_in_range_yoy, 
  client, 
  segment,
  null as customers_ty,
  null as orders_ty,
  null as quantity_ty,
  null as revenue_ty,
  null as shipping_revenue_ty,
  customers customers_ly,
  orders orders_ly,
  quantity quantity_ly,
  revenue revenue_ly,
  shipping_revenue shipping_revenue_ly
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_customer_0_365_segment`

)


SELECT
max(date) date,
max(unix_date_in_range) unix_date_in_range,
unix_date_in_range_yoy,
client,
segment,
ifnull(sum(customers_ty), 0) customers_ty,
ifnull(sum(orders_ty), 0) orders_ty,
ifnull(sum(quantity_ty), 0) quantity_ty,
ifnull(sum(revenue_ty), 0) revenue_ty,
ifnull(sum(shipping_revenue_ty), 0) shipping_revenue_ty,
case when sum(orders_ty) > 0 then sum(revenue_ty)/sum(orders_ty) else null end as aov_ty,
ifnull(sum(customers_ly), 0) customers_ly,
ifnull(sum(orders_ly), 0) orders_ly,
ifnull(sum(quantity_ly), 0) quantity_ly,
ifnull(sum(revenue_ly), 0) revenue_ly,
ifnull(sum(shipping_revenue_ly), 0) shipping_revenue_ly,
case when sum(orders_ly) > 0 then sum(revenue_ly)/sum(orders_ly) else null end as aov_ly,
case when sum(orders_ly) > 0 then ( sum(orders_ty) - sum(orders_ly) ) / sum(orders_ly) else null end as order_growth,
case when sum(revenue_ly) > 0 then ( sum(revenue_ty) - sum(revenue_ly) ) / sum(revenue_ly) else null end as revenue_growth,
case when sum(customers_ly) > 0 then ( sum(customers_ty) - sum(customers_ly) ) / sum(customers_ly) else null end as customer_growth,
case when sum(orders_ly) > 0 then ( sum(revenue_ty)/sum(orders_ty) - sum(revenue_ly)/sum(orders_ly) ) / ( sum(revenue_ly)/sum(orders_ly) ) else null end as aov_growth
FROM (

  SELECT * FROM ty
  UNION ALL
  SELECT * FROM ly

)
group by unix_date_in_range_yoy, client, segment
2018-04-06 20:38:41,384: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c1d0>]}
2018-04-06 20:38:41,565: 20:38:41 | 72 of 75 OK created table model agency_data_pipeline.growth_date_union [CREATE TABLE in 1.82s]
2018-04-06 20:38:41,565: 20:38:41 | 73 of 75 START table model agency_data_pipeline.growth_stats......... [RUN]
2018-04-06 20:38:41,565: Compiling model.agency_data_pipeline.growth_stats
2018-04-06 20:38:41,566: 20:38:41 | 74 of 75 START table model agency_data_pipeline.retention_stats...... [RUN]
2018-04-06 20:38:41,572: Compiling model.agency_data_pipeline.retention_stats
2018-04-06 20:38:41,578: Writing injected SQL for node "model.agency_data_pipeline.growth_stats"
2018-04-06 20:38:41,578: Writing injected SQL for node "model.agency_data_pipeline.retention_stats"
2018-04-06 20:38:41,579: Acquiring new bigquery connection "growth_stats".
2018-04-06 20:38:41,579: Acquiring new bigquery connection "retention_stats".
2018-04-06 20:38:41,580: Re-using an available connection from the pool.
2018-04-06 20:38:41,580: Re-using an available connection from the pool.
2018-04-06 20:38:42,187: Model SQL (growth_stats):
with orders as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Orders' as metric,
  orders_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

order_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Order Growth' as metric,
  order_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue' as metric,
  revenue_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

revenue_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Revenue Growth' as metric,
  revenue_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customers as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customers' as metric,
  customers_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`
),

customer_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'Customer Growth' as metric,
  customer_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV' as metric,
  aov_ty as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

),

aov_growth as (

  SELECT
  date,
  unix_date_in_range,
  unix_date_in_range_yoy,
  client,
  segment,
  'AOV Growth' as metric,
  aov_growth as value
  FROM `growth-engines-pipeline`.`agency_data_pipeline`.`growth_date_union`

)

SELECT * FROM orders
UNION ALL 
SELECT * FROM order_growth
UNION ALL
SELECT * FROM revenue
UNION ALL 
SELECT * FROM revenue_growth
UNION ALL
SELECT * FROM customers
UNION ALL 
SELECT * FROM customer_growth
UNION ALL
SELECT * FROM aov
UNION ALL 
SELECT * FROM aov_growth
2018-04-06 20:38:42,254: Model SQL (retention_stats):
WITH last_year_buyers AS (
	SELECT 
	date,
	client,
	'Last year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_365_730`
	group by date, client
),

rebuy_rate AS (
	SELECT 
	date,
	client,
	'Rebuy rate' as metric,
	customer_retention value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_stats_rebuy_rate`
),

repeat_buyers AS (
	SELECT 
	date,
	client,
	'Repeat buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_rebuy`
	group by date, client
),

reactivated_buyers AS (
	SELECT 
	date,
	client,
	'Reactivated buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_reactivated`
	group by date, client
),

new_buyers AS (
	SELECT 
	date,
	client,
	'New buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365_new`
	group by date, client
),

this_year_buyers AS (
	SELECT 
	date,
	client,
	'This year buyers' as metric,
	count(distinct customer_id) value
	FROM `growth-engines-pipeline`.`agency_data_pipeline`.`retention_0_365`
	group by date, client
)

SELECT 
date,
client,
metric,
ifnull(value, 0) value
FROM
(
	SELECT
	date,
	client,
	metric,
	value
	FROM last_year_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM rebuy_rate

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM repeat_buyers

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM reactivated_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM new_buyers	

	UNION ALL

	SELECT
	date,
	client,
	metric,
	value
	FROM this_year_buyers	

)
2018-04-06 20:38:43,287: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062c47b8>]}
2018-04-06 20:38:43,474: 20:38:43 | 73 of 75 OK created table model agency_data_pipeline.growth_stats.... [CREATE TABLE in 1.72s]
2018-04-06 20:38:47,721: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x1062e10f0>]}
2018-04-06 20:38:47,905: 20:38:47 | 74 of 75 OK created table model agency_data_pipeline.retention_stats. [CREATE TABLE in 6.15s]
2018-04-06 20:38:47,906: 20:38:47 | 75 of 75 START table model agency_data_pipeline.agg_campaign......... [RUN]
2018-04-06 20:38:47,906: Compiling model.agency_data_pipeline.agg_campaign
2018-04-06 20:38:47,910: Writing injected SQL for node "model.agency_data_pipeline.agg_campaign"
2018-04-06 20:38:47,911: Acquiring new bigquery connection "agg_campaign".
2018-04-06 20:38:47,911: Re-using an available connection from the pool.
2018-04-06 20:38:48,630: Model SQL (agg_campaign):
with ga as (

	select 
		date, client, channel, platform, url, utm_campaign, '' as campaign,
		sessions, goal_completions, 
		last_touch_transactions, last_touch_revenue, last_touch_shipping_revenue, last_touch_tax_revenue, 
		first_touch_transactions, first_touch_revenue,
		null as cost, null as impressions, null as clicks, null as ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_ga_campaign`

),

platforms as (

	select 
		date, client, channel, platform, url, utm_campaign, campaign,
		null as sessions, null as goal_completions, 
		null as last_touch_transactions, null as last_touch_revenue, null as last_touch_shipping_revenue, null as last_touch_tax_revenue, 
		null as first_touch_transactions, null as first_touch_revenue,
		cost, impressions, clicks, ad_platform_transactions
	from `growth-engines-pipeline`.`agency_data_pipeline`.`agg_platforms_client`

)


SELECT
    date, 
    client,
    platform,
    channel, 
    url,
    utm_campaign,
    max(campaign) campaign,
    ifnull( sum(cost), 0) cost,
	ifnull( sum(impressions), 0) impressions,
	ifnull( sum(clicks), 0) clicks,
	ifnull( sum(ad_platform_transactions), 0) ad_platform_transactions,
	ifnull( sum(sessions), 0) sessions,
	ifnull( sum(goal_completions), 0) goal_completions,
	ifnull( sum(last_touch_transactions), 0) last_touch_transactions,
	ifnull( sum(last_touch_revenue), 0) last_touch_revenue,
    ifnull( sum(last_touch_shipping_revenue), 0) last_touch_shipping_revenue,
    ifnull( sum(last_touch_tax_revenue), 0) last_touch_tax_revenue,
    ifnull( sum(first_touch_transactions), 0) first_touch_transactions,
    ifnull( sum(first_touch_revenue), 0) first_touch_revenue
FROM
(
    SELECT *
    FROM 
      ga
    UNION ALL
    SELECT *
    FROM 
      platforms 
) 
GROUP BY
    date, client, platform, channel, url, utm_campaign
2018-04-06 20:38:59,504: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0a5654bf-c9c5-4841-bda0-f8d7a7c43cd2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x10883c1d0>]}
2018-04-06 20:38:59,692: 20:38:59 | 75 of 75 OK created table model agency_data_pipeline.agg_campaign.... [CREATE TABLE in 11.60s]
2018-04-06 20:38:59,715: 20:38:59 | 
2018-04-06 20:38:59,715: 20:38:59 | Finished running 75 table models in 379.34s.
2018-04-06 20:38:59,715: Connection 'master' was left open.
2018-04-06 20:38:59,715: 
2018-04-06 20:38:59,715: Completed successfully
2018-04-06 20:38:59,716: 
Done. PASS=75 ERROR=0 SKIP=0 TOTAL=75
2018-04-06 20:38:59,716: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106295e48>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106295be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x106295e10>]}
2018-04-06 20:38:59,900: Flushing usage events
